{"version":3,"sources":["assets/images/banner.svg","components/Banner.jsx","context/Web3Ctx.js","hooks/useWeb3Ctx.js","components/Counter.jsx","Views/Burn/components/NtfList.jsx","assets/images/mask.jpg","Views/Burn/components/SelectedImageHolder.jsx","utils/index.js","utils/abi/constants/chain.js","utils/abi/constants/addresses.js","Views/Burn/components/BurnSection.jsx","Views/Burn/components/PendingBurn.jsx","assets/images/tree.png","Views/Burn/components/SuccesBurn.jsx","assets/images/banner.png","components/Header.jsx","Views/Burn/Burn.jsx","Views/Home/Home.jsx","Views/MintPage/Success.jsx","config/config.js","Views/MintPage/PopupModal.jsx","Views/MintPage/NumericInput.jsx","Views/MintPage/MintQuantity.jsx","Views/MintPage/CheckoutModal.jsx","Views/MintPage/Divider.jsx","Views/MintPage/TxProgressModal.jsx","Views/MintPage/MintPage.jsx","routes/routes.js","theme/theme.js","Web3Manager.jsx/Web3Manager.jsx","assets/images/logos/Galaxis.svg","assets/images/logos/CC.svg","components/Footer.jsx","App.jsx","index.js"],"names":["sx","maxWidth","margin","paddingBottom","width","height","Banner","style","onClick","useNavigate","src","banner","alt","createContext","useWeb3Ctx","useContext","Web3Ctx","HOUR","MIN","DAY","INIT","d","h","m","s","counterBoxHolder","display","justifyContent","gap","mt","mb","counterBox","flexDirection","alignItems","alignContent","counter","p","backgroundColor","CounterCircle","name","value","type","Typography","variant","Counter","date","handleCountingOver","simple","useState","values","setValues","useEffect","interval","setInterval","dif","getTime","Date","Math","floor","clearInterval","fontWeight","root","flexWrap","imgHolder","cursor","placeHolder","border","NtfList","metadatas","selectMeta","Array","map","e","index","console","log","image","BP1","placeholder","SelectedImageHolder","selectedNft","handleBurn","Button","disabled","SupportedChainId","METADATA","id","mask","position","top","bottom","right","left","contentHolder","content","BurnSection","handleSubmit","setStatusText","onboard","handleConnect","address","ethersProvider","undefined","setselectedNft","Box","metadata","PendingBurn","SuccesBurn","treeImg","window","open","text","Header","statusText","minHeight","headerHolder","title","subTitle","marginBottom","bannerMintedPage","button","counterHolder","pending","DATE","Burn","activeTab","setActiveTab","burnPending","setburnPending","ethers","Contract","abi","timer","className","Home","navigate","color","imageHolder","my","maxHeight","comeBackText","fontSize","lineHeight","Success","counterDate","salesOver","failed","envConfig","DEPLOYED_NTW_NAME","DEPLOYED_CHAIN_ID","INFURA_ID","FORTMATIC_KEY","RPC_URL","ETHERSCAN_URL","OPENSEA_URL","API_URL","PREVIEW_URL","AWS_URL","AGGREGATOR_URL","CROSSMINT_CLIENT_ID","CROSSMINT_ENV","SALE_CONTRACT","TOKEN_CONTRACT","config","OPENSEA_COLLECTION","py","px","transition","container","borderRadius","overflow","boxSizing","textAlign","img","objectFit","closeBtn","pointerEvents","opacity","header","fontFamily","body","footer","PopupModal","isOpen","setOpen","children","isTxPopup","Modal","onClose","event","reason","minWidth","input","textAlignLast","padding","borderTop","borderBottom","outline","buttonLeft","borderTopLeftRadius","borderBottomLeftRadius","marginRight","borderRight","borderColor","background","borderWidth","buttonRight","borderTopRightRadius","borderBottomRightRadius","borderLeft","NumericInput","max","min","onChange","setCounter","ButtonGroup","size","Input","disableUnderline","Number","target","textTransform","alignSelf","span","row","col","priceContainer","price","pt","MintQuantity","maxAmount","onClickMint","quantity","setQuantity","totalPrice","setTotalPrice","parseFloat","toFixed","val","CheckoutModal","tokenName","mintPresale","mintSale","isPresale","presalePrice","salePrice","whitelistLimit","headerText","titleDivider","mx","Divider","defaultProps","url","textDecoration","TxProgressModal","txEtherScan","component","href","rel","pubMintHolder","dispaly","MintPage","buttonText","setButtonText","setUserAlreadyMinted","saleContract","saleAbi","tokenContract","tokenAbi","setMinted","setSalePrice","setDiscountPrice","preSaleStarted","setPreSaleStarted","preSaleFinished","setPreSaleFinished","mainSaleStarted","setMainSaleStarted","mainSaleFinished","setMainSaleFinished","setPresaleStartTime","setSaleStartTime","setPresaleEndTime","setSaleEndTime","presaleTimeCounter","setPresaleTimeCounter","saleTimeCounter","setSaleTimeCounter","setIsLoading","setTxEtherScan","showCheckout","setShowCheckout","setShowErrorPopup","txInProgress","setTxInProgress","approveInProgress","setApproveInProgress","checkoutIsPresale","setCheckoutIsPresale","isCreditCard","setIsCreditCard","maxTokenPerAddress","setMaxTokenPerAddress","setMaxDiscountMintable","maxMintableDuringMainSale","setMaxMintableDuringMainSale","userMaxDiscountMintable","setUserMaxDiscountMintable","maxMintPerTransaction","setMaxMintPerTransaction","counintingOver","setCountingOver","_mintedByWallet","catch","alreadyMintedByWallet","toNumber","balanceOf","toast","error","message","tokenOfOwnerByIndex","token","getSaleInfo","then","response","getUserParams","up","key","Object","keys","whitelist","find","toLowerCase","userParamsRaw","params","max_mint","receiver","valid_from","valid_to","eth_price","raw_params","signature","tellEverything","info","totalSupply","presaleStart","presaleEnd","saleStart","saleEnd","fullPrice","maxPresalePerAddress","maxSalePerAddress","now","parse","presaleIsOver","saleIsOver","saleIsOn","presaleIsOn","_discountPrice","BigNumber","from","utils","formatEther","handleDiscountMint","maxMintable","userParams","handleMint","maxMintableMainSale","mintDisco","amount","sc","connect","getSigner","tx","mint_approved","handleError","hash","wait","res","localStorage","setItem","mintRegular","mint","parseEther","toString","marginTop","withCreditCard","maskImage","routes","path","exact","COLORS","theme","createTheme","typography","pageTitle","pageTitleDescription","counterNumber","boxText","share","components","MuiButton","styleOverrides","grayButton","orangeFilledButton","palette","primary","main","weight","Web3Manager","setOnboard","setAddress","wallet","setWallet","setEthersProvider","chainId","setChainId","setNetworkName","initDone","setInitDone","location","substr","indexOf","initApp","ob","Onboard","networkId","darkMode","blockPollingInterval","walletSelect","wallets","walletName","rpcUrl","apiKey","rpc","appUrl","email","walletCheck","checkName","subscriptions","obWallet","provider","providers","Web3Provider","sessionStorage","JsonRpcProvider","obAddress","network","savedWallet","getItem","subscribeNetwork","isWalletConnected","getNetwork","getState","stopPropagation","walletReset","walletSelected","isCorrectNetwork","Provider","defaultChainId","handleDisconnect","removeItem","columnGap","rowGap","whiteSpace","font","Footer","CamelCodingLogo","GalaxisLogo","App","basename","element","delay","document","getElementById","render"],"mappings":"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","file":"static/js/main.a716ac1f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner.1f050d53.svg\";","import { Box } from '@mui/system'\r\nimport React from 'react'\r\nimport banner from '../assets/images/banner.svg'\r\nimport { useNavigate } from 'react-router-dom'\r\nconst sx = {\r\n    root: {\r\n        maxWidth: '570px',\r\n        margin: 'auto',\r\n        paddingBottom:\"50px\",\r\n        'img': {\r\n            width: 'auto',\r\n            height:\"130px\"\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst Banner = ({ style,onClick }) => {\r\n    const navigate = useNavigate();\r\n    return (\r\n        <Box sx={{...sx.root, ...style }} onClick={onClick}>\r\n            <img src={banner} alt=\"banner\" />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Banner","import { createContext } from 'react';\r\n\r\nexport default createContext({});\r\n","import { useContext } from \"react\"\r\nimport Web3Ctx from \"../context/Web3Ctx\"\r\n\r\nexport default function useWeb3Ctx() {\r\n    const context = useContext(Web3Ctx);\r\n    return context\r\n}","import { Typography } from '@mui/material';\r\nimport { Box } from '@mui/system'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst BP1 = '@media (max-width: 600px)';\r\n\r\nconst MIN = 60000;\r\nconst HOUR = MIN * 60;\r\nconst DAY = HOUR * 24;\r\n\r\nconst INIT = { d: 0, h: 0, m: 0, s: 0 };\r\n\r\nconst sx = {\r\n    counterBoxHolder: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        gap: '35px',\r\n        mt: '20px',\r\n        mb: '40px'\r\n    },\r\n    counterBox: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '7px',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    },\r\n    counter: {\r\n        p: ' 13px',\r\n        width: '37px',\r\n        height: '37px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#594569',\r\n        [BP1]:{\r\n            p: ' 10px',\r\n            width: '25px',\r\n            height: '25px',\r\n        }\r\n    }\r\n}\r\n\r\nconst Counter = ({ date, handleCountingOver, simple }) => {\r\n    const [values, setValues] = useState(INIT)\r\n\r\n    useEffect(() => {\r\n\r\n        const interval = setInterval(() => {\r\n            if (date != null) {\r\n                let dif = date.getTime() - new Date().getTime();\r\n                if (dif > 0) {\r\n                    setValues({\r\n                        d: Math.floor(dif / DAY),\r\n                        h: Math.floor((dif % DAY) / HOUR),\r\n                        m: Math.floor((dif % HOUR) / MIN),\r\n                    });\r\n                } else {\r\n                    setValues(INIT);\r\n                    clearInterval(interval);\r\n                    handleCountingOver();\r\n                    // if (onFinish) {\r\n                    //     onFinish()\r\n                    // }\r\n                }\r\n            } else {\r\n                setValues(INIT);\r\n                clearInterval(interval);\r\n            }\r\n        }, 500);\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [date]);\r\n\r\n    return (\r\n        <>\r\n        {simple ? (\r\n          <Box style={{fontWeight: '700'}}>\r\n              {values.d} days, {values.h} hours, {values.m} mins\r\n          </Box>\r\n        ) : (\r\n          <Box sx={sx.counterBoxHolder}>\r\n            <CounterCircle name=\"DAYS\" value={values.d} />\r\n            <CounterCircle name=\"HOURS\" value={values.h} />\r\n            <CounterCircle name=\"MINS\" value={values.m} />\r\n          </Box>\r\n        )}\r\n      </>\r\n    );\r\n};\r\n\r\n\r\nconst CounterCircle = ({ name, value, type }) => (\r\n    <Box sx={sx.counterBox}>\r\n        <Typography variant='pageTitleDescription'>\r\n            {name}\r\n        </Typography>\r\n        <Box sx={sx.counter}>\r\n            <Typography variant='counterNumber'>{value}</Typography>\r\n        </Box>\r\n    </Box>\r\n);\r\n\r\nexport default Counter","import { Box } from '@mui/system';\r\nimport React from 'react';\r\n\r\nconst sx = {\r\n    root: {\r\n        // position: 'absolute',\r\n        // right: '60%',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignContent: 'flex-start',\r\n        gap: '25px',\r\n        maxWidth: '300px'\r\n    },\r\n    imgHolder: {\r\n        height: 'auto',\r\n        cursor: 'pointer',\r\n        '& img': {\r\n            width: '80px',\r\n            height: '80px',\r\n        },\r\n    },\r\n    placeHolder: {\r\n        width: '78px',\r\n        height: '78px',\r\n        border: '1px solid #628BA0',\r\n        backgroundColor: 'transparent',\r\n    },\r\n};\r\n\r\nconst NtfList = ({ metadatas, selectMeta }) => {\r\n    return <Box sx={sx.root}>\r\n        {[...Array(6)].map((e, index) => {\r\n            if (metadatas[index]) {\r\n                console.log(index)\r\n                return (\r\n                    <Box key={index} sx={sx.imgHolder} onClick={()=>selectMeta(metadatas[index])}>\r\n                        <img src={metadatas[index].image} alt='meta' />\r\n                    </Box>\r\n                );\r\n            } else {\r\n                console.log(index)\r\n                return <Box key={index} sx={sx.placeHolder}></Box>;\r\n            }\r\n        })}\r\n    </Box>;\r\n};\r\n\r\nexport default NtfList;\r\n","export default __webpack_public_path__ + \"static/media/mask.2a9a7a9f.jpg\";","import { Button, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React from 'react'\r\n\r\nconst BP1 = '@media (max-width: 450px)';\r\nconst sx = {\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '50px',\r\n    },\r\n    imgHolder: {\r\n        '& img':{\r\n            width: '379px',\r\n            height: '379px',\r\n        [BP1]:{\r\n            width: '250px',\r\n            height: '250px',\r\n        }\r\n        }\r\n    },\r\n    placeholder:{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n        width: '377px',\r\n        height: '377px',\r\n        border: '1px solid #628BA0',\r\n        [BP1]:{\r\n            width: '250px',\r\n            height: '250px',\r\n        }\r\n    }\r\n}\r\nconst SelectedImageHolder = ({ selectedNft, handleBurn }) => {\r\n    return (\r\n        <Box sx={sx.root}>\r\n            {selectedNft ?\r\n                <Box sx={sx.imgHolder}>\r\n                    <img src={selectedNft.image} alt=\"\" />\r\n                </Box> :\r\n                <Box sx={sx.placeholder}>\r\n                    <Typography variant='boxText'>\r\n                        SELECT NFT TO BURN\r\n                    </Typography>\r\n                </Box>\r\n            }\r\n\r\n            <Button variant='grayButton' disabled={selectedNft ? false : true} onClick={handleBurn}>\r\n                BURN\r\n            </Button>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SelectedImageHolder","export { getContract } from \"./contract\"\r\n// export { zoomFetchTokenUris } from \"./zoom2\"\r\n\r\nexport const getTokenUri = async (tokenId, tokenUri) => {\r\n    //console.log(tokenUri)\r\n    const metadata = await fetch(tokenUri)// await fetch(`https://toddlerpillars-metadata-server.herokuapp.com/api/metadata/${tokenId % 100}/${tokenId}`)\r\n        .then((res) => res.json())\r\n        .catch((err) => console.error(err));\r\n    if (metadata) {\r\n        if (!metadata.tokenId) {\r\n            metadata.tokenId = tokenId;\r\n        }\r\n        if (!metadata.id) {\r\n            metadata.id = tokenId;\r\n        }\r\n        return metadata;\r\n    } else\r\n        // Fetching metadata fail, return an object anyway\r\n        return {\r\n            tokenId: tokenId,\r\n            id: tokenId\r\n        }\r\n};\r\n","export const SupportedChainId = {\r\n    MAINNET: 1,\r\n    RINKEBY: 4,\r\n    GOERLI:5,\r\n    POLYGON: 137\r\n}","import { SupportedChainId } from './chain'\r\n\r\nexport const ZOOM_2_ADDRESSES = {\r\n    [SupportedChainId.MAINNET]: \"0x7cdF091AF6a9ED75E3192500d3e5BB0f63e22Dea\",\r\n    [SupportedChainId.RINKEBY]: \"0x491592F30D9a3d1887F486eA2A3c72ad82fAcF4D\"\r\n}\r\n","import { Box, Typography } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport NtfList from './NtfList'\r\nimport mask from '../../../assets/images/mask.jpg';\r\nimport SelectedImageHolder from './SelectedImageHolder';\r\nimport { zoomFetchTokenUris } from '../../../utils/zoom2'\r\nimport { useZoom2Contract } from '../../../hooks/useContract'\r\nimport { Contract } from 'ethers';\r\nimport useWeb3Ctx from '../../../hooks/useWeb3Ctx';\r\n\r\nconst BP1 = '@media (max-width: 1024px)';\r\n\r\nconst METADATA = [\r\n    {\r\n        id: 1,\r\n        image: mask\r\n    },\r\n    {\r\n        id: 1,\r\n        image: mask\r\n    },\r\n    {\r\n        id: 1,\r\n        image: mask\r\n    }\r\n]\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    contentHolder: {\r\n        width: '90vw',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            width: '300px',\r\n            [BP1]: {\r\n                content: 'none'\r\n            }\r\n        },\r\n        [BP1]: {\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            gap: '25px'\r\n        }\r\n    },\r\n}\r\n\r\nconst BurnSection = ({handleSubmit, setStatusText}) => {\r\n    const { onboard, handleConnect, address, ethersProvider } = useWeb3Ctx();\r\n    const [selectedNft, setselectedNft] = useState(undefined);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const selectMeta = (metadata) => {\r\n        setselectedNft(metadata)\r\n        setStatusText(\"NFT SELECTECT\")\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     if (address) {\r\n    //         let token;\r\n    //         if (config.TOKEN_CONTRACT) {\r\n    //             token = new Contract(config.TOKEN_CONTRACT, ABI.abi, ethersProvider);\r\n\r\n               \r\n    //             if (!token) {\r\n    //                 console.error('Token contract not found on address', tokenAddress);\r\n    //                 return;\r\n    //             }\r\n    //             getTokens(token);\r\n    //         }\r\n\r\n    //     }\r\n    // }, [address]);\r\n\r\n    // const getTokens = async (token) => {\r\n    //     setLoading(true);\r\n\r\n    //     const metas = await zoomFetchTokenUris(\r\n    //         token,\r\n    //         zoomContract,\r\n    //         address\r\n    //     );\r\n    //     console.log(metas)\r\n\r\n    //     if (metas) {\r\n    //         // console.log('TOKE META',metas);\r\n    //         setTokenMetas(metas);\r\n    //     } else {\r\n    //         setTokenMetas([]);\r\n    //     }\r\n    //     setLoading(false);\r\n    // };\r\n\r\n\r\n    return (\r\n        <Box sx={sx.root}>\r\n            <Box sx={sx.contentHolder}>\r\n                <NtfList metadatas={METADATA} selectMeta={selectMeta} />\r\n                <SelectedImageHolder selectedNft={selectedNft} handleBurn={handleSubmit} />\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BurnSection","import React from 'react'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Box } from '@mui/material'\r\n\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        top: '-50px',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '10px'\r\n    }\r\n}\r\n\r\n\r\nconst PendingBurn = () => {\r\n    return (\r\n        <Box sx={sx.root}>\r\n            <Typography variant=\"counterNumber\">BURNING MASK</Typography>\r\n            <Typography variant='pageTitleDescription'>PREPARE FOR THE LIGHT</Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PendingBurn","export default __webpack_public_path__ + \"static/media/tree.d4f24a01.png\";","import { Box, Button, Typography } from '@mui/material'\r\nimport React from 'react'\r\nimport treeImg from '../../../assets/images/tree.png'\r\n\r\nconst BP1 = '@media (max-width: 450px)';\r\n\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '50px',\r\n    },\r\n    imgHolder: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        '& img': {\r\n            width: '379px',\r\n            height: '379px',\r\n\r\n            [BP1]: {\r\n                width: '250px',\r\n                height: '250px',\r\n            }\r\n        }\r\n    },\r\n}\r\nconst SuccesBurn = () => {\r\n    const handlePlay = () => {\r\n        window.open('https://google.com', '_blank')\r\n    }\r\n    const share = () => {\r\n        console.log('share')\r\n    }\r\n    return (\r\n        <Box sx={sx.root}>\r\n            <Box sx={sx.imgHolder}>\r\n                <img src={treeImg} alt='tree' />\r\n            </Box>\r\n            <Button variant='grayButton' onClick={handlePlay}>Play the game</Button>\r\n\r\n            <Typography variant=\"share\" onClick={share}>SHARE ON TWITTER</Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SuccesBurn","export default __webpack_public_path__ + \"static/media/banner.b35d4fd0.png\";","import { Box } from '@mui/system'\r\nimport React from 'react'\r\nimport banner from '../assets/images/banner.png'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nconst BP1 = '@media (max-width: 450px)';\r\n\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        width: '100%',\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        [BP1]:{\r\n            mb: '20px'\r\n        }\r\n    },\r\n    imgHolder: {\r\n        maxWidth: '570px',\r\n        margin: 'auto',\r\n        'img': {\r\n            width: '100%'\r\n        }\r\n    },\r\n    text: {\r\n        margin: 'auto',\r\n        m: '12px auto 0 auto'\r\n    }\r\n}\r\nconst Header = ({ statusText }) => {\r\n    return (\r\n        <Box sx={sx.root}>\r\n            <Box sx={sx.imgHolder}>\r\n                <img src={banner} alt=\"banner\" />\r\n            </Box>\r\n            <Typography variant=\"pageTitle\">Braves Burn Event</Typography>\r\n            {statusText && <Typography variant='pageTitleDescription' sx={sx.text}>\r\n                {statusText}\r\n            </Typography>}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header","import { Button, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { ethers } from 'ethers';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Banner from '../../components/Banner';\r\nimport useWeb3Ctx from '../../hooks/useWeb3Ctx';\r\nimport abi from '../../contracts/SaleContract.json';\r\nimport Counter from '../../components/Counter';\r\nimport BurnSection from './components/BurnSection';\r\nimport PendingBurn from './components/PendingBurn';\r\nimport SuccesBurn from './components/SuccesBurn';\r\nimport Header from '../../components/Header';\r\n\r\nconst BP1 = '@media (max-width: 450px)';\r\n\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        minHeight: '100vh',\r\n        height: '100%',\r\n        width: '100vw',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    headerHolder: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center'\r\n    },\r\n    title: {\r\n        mb: '20px',\r\n        [BP1]: {\r\n            mt: '0px !important'\r\n        }\r\n    },\r\n    subTitle: {\r\n        marginBottom: '100px',\r\n    },\r\n    bannerMintedPage: {\r\n        [BP1]: {\r\n            mt: 0\r\n        }\r\n    },\r\n    button: {\r\n        margin: '35% auto'\r\n    },\r\n    counterHolder: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        gap: '30px',\r\n    },\r\n    pending: {\r\n        margin: '0 auto'\r\n    }\r\n};\r\nconst DATE = new Date('2022-10-05T15:00:00.000Z');\r\nconst Burn = () => {\r\n    const { onboard, handleConnect, address, ethersProvider } = useWeb3Ctx();\r\n    const [buttonText, setButtonText] = useState('Connect Wallet');\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [burnPending, setburnPending] = useState(false);\r\n    const [statusText, setStatusText] = useState(undefined);\r\n    const saleContract = new ethers.Contract(\r\n        '0x6DbD13D198944Bc49B983E146a9dF6bfA871CA13',\r\n        abi.abi,\r\n        ethersProvider\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (address && address !== null) {\r\n            setActiveTab(1);\r\n            setStatusText('NFT DETECTED')\r\n        } else {\r\n            setActiveTab(0);\r\n        }\r\n    }, [address]);\r\n\r\n\r\n    const signMessage = async (message) => {\r\n        try {\r\n            console.log(message)\r\n            if (!window.ethereum) {\r\n                throw new Error('No crypto wallet found');\r\n            }\r\n            await window.ethereum.send(\"eth_requestAccounts\");\r\n            const signer = ethersProvider.getSigner();\r\n            const signature = await signer.signMessage(message)\r\n            const address = await signer.getAddress();\r\n\r\n            return {\r\n                message, signature, address\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    const handleSubmit = (selectedNft) => {\r\n        setburnPending(true)\r\n        console.log(selectedNft);\r\n        setActiveTab(2);\r\n        // let dna = selectedNft;\r\n\r\n        // signMessage(`{tokenID: ${selectedNft.tokenId}},  reforged_dna: ${dna}`).then((response) => {\r\n        //     if (response) {\r\n        //         console.log(response);\r\n        //         let obj = {\r\n        //             \"address\": response.address,\r\n        //             // \"message\": {\r\n        //             //     \"tokenID\": ctx.card.tokenId,\r\n        //             //     \"reforged_dna\": dna\r\n        //             // },\r\n        //             \"message\": `{tokenID: ${ctx.card.tokenId}},  reforged_dna: ${dna}`,\r\n        //             \"signature\": response.signature\r\n        //         }\r\n        //         console.log(obj)\r\n        //         // postForge(obj).then(() => {\r\n        //         //     setForgePending(true)\r\n\r\n        //         // }).catch((e) => { console.log(e) })\r\n        //     }\r\n        // })\r\n    }\r\n    useEffect(() => {\r\n        let timer = null;\r\n        if (burnPending) {\r\n            timer = setInterval(() => {\r\n                // axios.get(`https://god-panels-metadata-staging.herokuapp.com/api/reforge/${ctx.card.tokenId}/status`)\r\n                //     .then((response) => {\r\n                //         if (response.data.reforgeStatus === 'completed') {\r\n                //             setOpenCongratulationModal(true);\r\n                //             setForgePending(false)\r\n                //         }\r\n                //     })\r\n                setActiveTab(3);\r\n                setStatusText(undefined)\r\n            }, 2000);\r\n        } else return;\r\n        return () => clearInterval(timer);\r\n    }, [burnPending])\r\n\r\n\r\n    return (\r\n        <Box className=\"center-div\">\r\n            <Box sx={sx.root} >\r\n                {/* <Box sx={sx.headerHolder}>\r\n                    <Banner style={sx.bannerMintedPage} />\r\n                    <Typography variant=\"pageTitle\" sx={{ ...sx.title }}>\r\n                        Braves Burn Event\r\n                    </Typography>\r\n                </Box> */}\r\n                <Header statusText={statusText}/>\r\n                {activeTab === 0 &&\r\n                    <>\r\n                        <Button variant='grayButton' onClick={handleConnect} sx={sx.button}>Connect Wallet</Button>\r\n                        <Box sx={sx.counterHolder}>\r\n                            <Typography variant=\"pageTitleDescription\">\r\n                                BURN YOUR MASK TO EXPEREINCE THE BETWIXT GAME\r\n                            </Typography>\r\n                            <Counter date={DATE} />\r\n                        </Box>\r\n                    </>\r\n                }\r\n                {activeTab === 1 &&\r\n                    <BurnSection handleSubmit={handleSubmit} setStatusText={setStatusText}/>\r\n                }\r\n                {activeTab === 2 && <PendingBurn />}\r\n                {activeTab === 3 && <SuccesBurn />}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Burn","import { Button, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React, { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport useWeb3Ctx from '../../hooks/useWeb3Ctx'\r\n\r\nconst sx = {\r\n  title: {\r\n    mb: '20px'\r\n  },\r\n  subTitle: {\r\n    marginBottom: '100px'\r\n  }\r\n}\r\nconst Home = () => {\r\n  const { onboard, handleConnect, address, ethersProvider } = useWeb3Ctx();\r\n  const navigate = useNavigate();\r\n\r\n  const handleConnection = () => {\r\n    handleConnect();\r\n   \r\n  }\r\n\r\n  useEffect(() => {\r\n    if (address !== undefined && address !== null)\r\n    navigate('/mint');\r\n\r\n  }, [address])\r\n  \r\n  console.log(address)\r\n  return (\r\n    <Box className='center-div'>\r\n      <Typography variant='pageTitle' sx={sx.title}>Braves Free Mint</Typography>\r\n      <Typography variant='pageTitleDescription' sx={sx.subTitle} style={{color: '#594569'}}>BEGIN YOUR JOURNEY INTO BETWIXT</Typography>\r\n      <Button variant='grayButton' onClick={handleConnection}>Connect Wallet</Button>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Home ","import { Button, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport { toast } from \"react-toast\";\r\nimport Counter from \"../../components/Counter\";\r\n\r\nconst BP1 = \"@media (max-width: 600px)\";\r\n\r\nconst sx = {\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n  imageHolder: {\r\n    margin: \"auto\",\r\n    width: \"auto\",\r\n    my: \"27px\",\r\n    \"& img\": {\r\n      maxWidth: \"378px\",\r\n      maxHeight: \"378px\",\r\n      height: \"100%\",\r\n    },\r\n    [BP1]: {\r\n      \"& img\": {\r\n        maxWidth: \"280px\",\r\n        maxHeight: \"280px\",\r\n        height: \"100%\",\r\n      },\r\n    },\r\n  },\r\n  button: {\r\n    mb: \"50px\",\r\n  },\r\n  comeBackText: {\r\n    fontSize: \"20px\",\r\n    lineHeight: \"24px\",\r\n    mb: \"14px\",\r\n    [BP1]: {\r\n      fontSize: \"16px\",\r\n      lineHeight: \"20px\",\r\n    },\r\n  },\r\n};\r\n\r\nconst Success = ({\r\n  image,\r\n  counterDate,\r\n  salesOver,\r\n  failed,\r\n  // handleOnclick,handleReveal\r\n}) => {\r\n  const shareOnTwitter = () => {\r\n    window.open(\"https://twitter.com/intent/tweet?text=I've%20just%20minted%20a%20Betwixt%20Brave!%20Mint%20yours%20braves.betwixt.life%20@BetwixtNFT\")\r\n  };\r\n  return (\r\n    <Box sx={sx.root}>\r\n      {!salesOver ? (\r\n        <>\r\n          {!failed ? (\r\n            <>\r\n              <Typography variant=\"pageTitleDescription\" color=\"#62A077\">\r\n                Success\r\n              </Typography>\r\n              <Box sx={sx.imageHolder}>\r\n                <img src={image} alt=\"mask\" />\r\n              </Box>\r\n              <Button\r\n                sx={sx.button}\r\n                variant=\"grayButton\"\r\n                onClick={shareOnTwitter}\r\n              >\r\n                Share on Twitter\r\n              </Button>\r\n              {/* <Button sx={sx.button} variant='grayButton' onClick={handleReveal}>{buttonText}</Button> */}\r\n              <Typography sx={sx.comeBackText} variant=\"pageTitleDescription\">\r\n                {\" \"}\r\n                COME BACK FOR THE BURN EVENT\r\n              </Typography>\r\n              <Typography variant=\"pageTitleDescription\">\r\n                {\" \"}\r\n                TO EXPEREINCE THE BETWIXT GAME\r\n              </Typography>\r\n              <Counter date={counterDate} />{\" \"}\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Typography variant=\"pageTitleDescription\" color=\"#7f2020\">\r\n                Failed\r\n              </Typography>\r\n              <Box sx={sx.imageHolder}>\r\n                <img src={image} alt=\"mask\" />\r\n              </Box>\r\n              <Typography sx={sx.comeBackText} variant=\"pageTitleDescription\">\r\n                {\" \"}\r\n                COME BACK FOR THE BURN EVENT\r\n              </Typography>\r\n              <Typography variant=\"pageTitleDescription\">\r\n                {\" \"}\r\n                TO EXPEREINCE THE BETWIXT GAME\r\n              </Typography>\r\n              <Counter date={counterDate} />{\" \"}\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Typography\r\n            variant=\"pageTitleDescription\"\r\n            style={{ marginBottom: \"50px\", fontSize: \"20px\" }}\r\n          >\r\n            SALE ENDED\r\n          </Typography>\r\n          <Typography sx={sx.comeBackText} variant=\"pageTitleDescription\">\r\n            {\" \"}\r\n            COME BACK FOR THE BURN EVENT\r\n          </Typography>\r\n          <Typography variant=\"pageTitleDescription\">\r\n            {\" \"}\r\n            TO EXPEREINCE THE BETWIXT GAME\r\n          </Typography>\r\n          <Counter date={counterDate} />{\" \"}\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Success;\r\n","const dev = {\r\n    DEPLOYED_NTW_NAME: 'goerli',\r\n    DEPLOYED_CHAIN_ID: 5,\r\n    INFURA_ID: 'cae2aed2f50a4087af91b000cf05be4c',\r\n    FORTMATIC_KEY: 'pk_test_DD2BBA8AAA1D4FED',\r\n    RPC_URL: 'https://goerli.infura.io/v3/cae2aed2f50a4087af91b000cf05be4c',\r\n    ETHERSCAN_URL: 'https://goerli.etherscan.io/',\r\n    OPENSEA_URL: 'https://testnets.opensea.io/',\r\n    API_URL: 'https://god-panels-metadata-staging.herokuapp.com/api',\r\n    PREVIEW_URL: 'https://ssp-server-v2.herokuapp.com/api/project-session',\r\n    AWS_URL:\r\n      'https://galaxis-backend-staging.s3.eu-central-1.amazonaws.com/media',\r\n  \r\n    AGGREGATOR_URL: 'https://nft-aggregator-rinkeby.herokuapp.com/token',\r\n    \r\n    CROSSMINT_CLIENT_ID: '7de2bbab-cec3-456b-a2e1-96bbd99cb8ad',\r\n    CROSSMINT_ENV: 'staging',\r\n    SALE_CONTRACT: '0xA2c765F97b76c339CD551FB32621b319A430e8f8',\r\n    TOKEN_CONTRACT: '0xc371de84f23e87804e9bdfc89f1f3dab146add0f'\r\n  };\r\n  \r\n  const prod = {\r\n    DEPLOYED_NTW_NAME: 'mainnet',\r\n    DEPLOYED_CHAIN_ID: 1,\r\n    INFURA_ID: 'a5e79e6ee9a14236b385e47849805596',\r\n    FORTMATIC_KEY: 'pk_live_FBFF1F05F2879F29',\r\n    RPC_URL: 'https://mainnet.infura.io/v3/0a0bbd3ce4ea4be5ad706514cf2cd8cc',\r\n    ETHERSCAN_URL: 'https://etherscan.io/',\r\n    OPENSEA_URL: 'https://opensea.io/',\r\n  \r\n    // API_URL: 'https://galaxis-backend.herokuapp.com',\r\n    PREVIEW_URL: 'https://launchpad-backend.herokuapp.com/api/project-session',\r\n    AWS_URL: 'https://galaxis-web.s3.amazonaws.com/media',\r\n  \r\n    AGGREGATOR_URL: 'https://nft-aggregator.herokuapp.com/token',\r\n  \r\n    EC_TOKEN_ADDRESS: '0x97ca7fe0b0288f5eb85f386fed876618fb9b8ab8',\r\n    PHOENIX_CONTRACT_ADDRESS: '0x55B3154Ad761405B0cdd27355943Eb808d40b5A1',\r\n\r\n    CROSSMINT_CLIENT_ID: 'b3f5189b-66fe-43d7-8295-c73f9fa3e3ef',\r\n    CROSSMINT_ENV: ''\r\n  \r\n  };\r\n  \r\n  const common = {\r\n    OPENSEA_COLLECTION: 'https://api.opensea.io/api/v1/collection',\r\n  };\r\n  \r\n  // if use npm/yarn start,  NODE_ENV = \"development\"\r\n  // if use npm/yarn build,  NODE_ENV = \"production\"\r\n  let envConfig = dev; // process.env.NODE_ENV === \"development\" ? dev : prod\r\n  let config = { ...envConfig, ...common };\r\n  \r\n  export default config;\r\n  ","import React from 'react';\r\n\r\nimport { Box, Modal, Typography } from '@mui/material';\r\n\r\nconst BP1 = '@media (max-width: 899px)';\r\nconst BP2 = '@media (max-width: 719px)';\r\nconst BP3 = '@media (max-width: 600px)';\r\n\r\nconst sx = {\r\n  root: {\r\n    height: '100%',\r\n    backgroundColor: '#15101999',\r\n    py: '44px',\r\n    px: '125px',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    // pointerEvents: \"none\",\r\n    transition: 'all .3s',\r\n    [BP1]: {\r\n      px: '85px',\r\n    },\r\n    [BP2]: {\r\n      px: '25px',\r\n    },\r\n  },\r\n  container: {\r\n    maxHeight: '80vh',\r\n    minHeight: '150px',\r\n    position: 'relative',\r\n    margin: 'auto',\r\n    width: '100%',\r\n    maxWidth: '500px',\r\n    borderRadius: '16px',\r\n    border: '1px solid #628BA0',\r\n    overflow: 'hidden',\r\n    transition: 'all .3s',\r\n    backgroundColor: '#1E1E1E',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n    px: '30px',\r\n    py: '20px',\r\n    textAlign: 'center',\r\n  },\r\n  img: {\r\n    height: '100%',\r\n    width: '100%',\r\n    objectFit: 'contain',\r\n  },\r\n  closeBtn: {\r\n    position: 'absolute',\r\n    width: '14px',\r\n    height: '14px',\r\n    top: '38%',\r\n    bottom: '0',\r\n    right: '5px',\r\n    cursor: 'pointer',\r\n    pointerEvents: 'auto',\r\n    transition: 'all .3s',\r\n    color: '#FFF',\r\n    '&:hover': {\r\n      opacity: 0.8,\r\n    },\r\n  },\r\n  header: {\r\n    fontFamily: 'poppins-semibold',\r\n    position: 'relative',\r\n    width: '100%',\r\n    minHeight: '50px',\r\n    color: '#FF692B',\r\n  },\r\n  body: {\r\n    width: '100%',\r\n    minHeight: '50px',\r\n    fontFamily: 'Jotia',\r\n    fontSize: '16px',\r\n  },\r\n  footer: {\r\n    width: '100%',\r\n    minHeight: '10px',\r\n  },\r\n};\r\n\r\nconst PopupModal = ({\r\n  isOpen,\r\n  setOpen,\r\n  header,\r\n  footer,\r\n  children,\r\n  isTxPopup,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={(event, reason) => {\r\n        if (reason !== 'backdropClick') {\r\n          if (setOpen) {\r\n            setOpen(false);\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      <Box sx={sx.root}>\r\n        <Box sx={sx.container}>\r\n          <Box sx={sx.header}>\r\n            {!isTxPopup && (\r\n              <Box sx={sx.closeBtn} onClick={() => setOpen && setOpen(false)}>\r\n                {/* <img src={close} style={{ width: '100%' }} alt=\"Close\" /> */}\r\n                x\r\n              </Box>\r\n            )}\r\n\r\n            <Typography variant='counterNumber'>{header}</Typography>\r\n          </Box>\r\n          <Box sx={sx.body}>{children}</Box>\r\n          <Box sx={sx.footer}>{footer}</Box>\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PopupModal;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Input, ButtonGroup, Button } from \"@mui/material\";\r\n\r\nconst BORDER_THICKNESS = 2;\r\nconst BORDER_RADIUS = 7;\r\n\r\nconst sx = {\r\n  root: {\r\n    color: \"#FFF\",\r\n    my: 1,\r\n    \"& .MuiButtonGroup-grouped\": {\r\n      minWidth: 34,\r\n    },\r\n  },\r\n  input: {\r\n    fontFamily: \"Jotia-Regular\",\r\n    color: \"#FFF\",\r\n    fontSize: 22,\r\n    width: 10,\r\n    minWidth: 20,\r\n    height:40,\r\n    maxHeight: 40,\r\n    textAlign: \"center\",\r\n    textAlignLast: \"center\",\r\n    padding: 0,\r\n    borderTop: BORDER_THICKNESS,\r\n    borderBottom: BORDER_THICKNESS,\r\n    \"&:before, &:hover:not(.Mui-disabled):before\": {\r\n      border: 0,\r\n    },\r\n    \"& input::-webkit-clear-button, & input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button\":\r\n      {\r\n        display: \"none\",\r\n     },\r\n    \"& input\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  button: {\r\n    fontFamily: \"Jotia-Regular\",\r\n    color: \"#FFF\",\r\n    border: BORDER_THICKNESS,\r\n    maxHeight: 40,\r\n    fontSize: 16,\r\n    height:\"40px\",\r\n    \"&:hover\": {\r\n      border: BORDER_THICKNESS,\r\n    },\r\n    \"&:focus\": {\r\n      outline: \"none\",\r\n    },\r\n  },\r\n  buttonLeft: {\r\n    color: \"#FFF\",\r\n    fontSize: 16,\r\n    border: BORDER_THICKNESS,\r\n    borderTopLeftRadius: BORDER_RADIUS,\r\n    borderBottomLeftRadius: BORDER_RADIUS,\r\n    marginRight: \"-1px\",\r\n    borderRight: 0,\r\n    transition: \"all 0.1s ease-in-out\",\r\n    \"&:hover\": {\r\n      color: \"#FFF\",\r\n      borderColor: \"#FFF\",\r\n      background: \"#363F59\",\r\n      borderWidth: BORDER_THICKNESS,\r\n      borderRight: 0,\r\n    },\r\n  },\r\n  buttonRight: {\r\n    color: \"#FFF\",\r\n    border: BORDER_THICKNESS,\r\n    borderTopRightRadius: BORDER_RADIUS,\r\n    borderBottomRightRadius: BORDER_RADIUS,\r\n    borderLeft: 0,\r\n    transition: \"all 0.1s ease-in-out\",\r\n    \"&:hover\": {\r\n      color: \"#FFF\",\r\n      borderColor: \"#FFF\",\r\n      background: \"#363F59\",\r\n      borderWidth: BORDER_THICKNESS,\r\n      borderLeft: 0,\r\n    },\r\n  },\r\n};\r\nconst NumericInput = ({ value, max, min, onChange }) => {\r\n  const [counter, setCounter] = useState(value || 0);\r\n\r\n  useEffect(() => {\r\n    onChange(counter);\r\n  }, [counter]);\r\n\r\n  const handleIncrement = () => {\r\n    // max = 1;\r\n    if (max != null) {\r\n      if (counter < max) {\r\n        setCounter(counter + 1);\r\n      } else {\r\n        setCounter(max);\r\n      }\r\n    } else {\r\n      setCounter(counter + 1);\r\n    }\r\n  };\r\n\r\n  const handleDecrement = () => {\r\n    if (min != null) {\r\n      if (counter > min) {\r\n        setCounter(counter - 1);\r\n      } else {\r\n        setCounter(min);\r\n      }\r\n    } else {\r\n      setCounter(counter - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ButtonGroup\r\n      sx={sx.root}\r\n      size=\"small\"\r\n      aria-label=\"small outlined button group\"\r\n    >\r\n      <Button sx={{ ...sx.button, ...sx.buttonLeft }} onClick={handleDecrement}>\r\n        -\r\n      </Button>\r\n      <div className=\"numericInput\">\r\n      <Input\r\n        type=\"number\"\r\n        sx={{ ...sx.input }}\r\n        value={counter}\r\n        disableUnderline={true}\r\n        onChange={(e) => {\r\n          const value = Number(e.target.value);\r\n          if (value) {\r\n            if (min != null && value < min) {\r\n              setCounter(min);\r\n              e.target.value = min;\r\n            } else if (max != null && value > max) {\r\n              setCounter(max);\r\n              e.target.value = max;\r\n            } else {\r\n              setCounter(value);\r\n              e.target.value = value;\r\n            }\r\n          } else {\r\n            setCounter(0);\r\n            e.target.value = 0;\r\n          }\r\n        }}\r\n      ></Input>\r\n      </div>\r\n\r\n      <Button\r\n        sx={{ ...sx.button, ...sx.buttonRight }}\r\n        onClick={handleIncrement}\r\n      >\r\n        +\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\n/* eslint-disable react/forbid-prop-types */\r\nNumericInput.propTypes = {\r\n  max: PropTypes.number.isRequired,\r\n  min: PropTypes.number.isRequired,\r\n  onChange: PropTypes.any.isRequired,\r\n};\r\nexport default NumericInput;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Typography, Button } from \"@mui/material\";\r\nimport NumericInput from \"./NumericInput\";\r\n\r\nconst COLOR_CYAN = \"#19A8B4\";\r\nconst BP3 = \"@media (max-width: 384px)\";\r\n\r\nconst sx = {\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    maxWidth: \"458px\",\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n    mb: 3,\r\n  },\r\n  title: {\r\n    color: \"#FFF\",\r\n    textAlign: \"center\",\r\n    fontSize: 22,\r\n    fontWeight: 700,\r\n    mb: 3,\r\n  },\r\n  text: {\r\n    fontFamily: \"Jotia-Regular\",\r\n    textTransform: \"uppercase\",\r\n    color: '#FFF',\r\n    fontSize: 11,\r\n    alignSelf: \"center\",\r\n  },\r\n  span: {\r\n    fontFamily: \"Jotia-Regular\",\r\n    color: '#FFF',\r\n    textTransform: \"none\",\r\n    fontWeight: 500,\r\n    fontSize: 11,\r\n  },\r\n  row: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    minHeight: \"30px\",\r\n    borderColor: \"rgba(0,0,0,0.2)\",\r\n    alignSelf: \"center\",\r\n    justifyContent: \"center\",\r\n    gap: \"20px\",\r\n    marginBottom: \"20px\",\r\n    width: \"100%\",\r\n  },\r\n  col: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minWidth: \"25%\",\r\n    alignItems:\"center\"\r\n  },\r\n  img: {\r\n    height: \"12px\",\r\n    alignSelf: \"center\",\r\n    marginRight: \"3px\",\r\n    marginBottom: \"2px\",\r\n  },\r\n  priceContainer: {\r\n    display: \"flex\",\r\n    alignSelf: \"center\",\r\n    my: 1,\r\n  },\r\n  price: {\r\n    color: '#FFF',\r\n    pt: \"2px\",\r\n    fontFamily: \"Jotia-Regular\",\r\n    fontSize: 22,\r\n  },\r\n};\r\nconst MintQuantity = ({ title, price, maxAmount, onClickMint }) => {\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\nconsole.log('MINTQUANTYTY', typeof price);\r\n  useEffect(() => {\r\n    \r\n    if(price === \"FREE\"){\r\n      console.log(\"price string \")\r\n      setTotalPrice(price);\r\n      return\r\n    }\r\n    setTotalPrice(\"ETH \" + parseFloat((price * quantity).toFixed(3)));\r\n  }, [quantity]);\r\n\r\n  const onNumberInput = (val) => {\r\n    setQuantity(val);\r\n  };\r\n\r\n  return (\r\n    <Box sx={sx.root}>\r\n      <Typography sx={sx.title}>{title}</Typography>\r\n      <Box sx={sx.row}>\r\n        <Box sx={sx.col}>\r\n          <Typography sx={sx.text} variant=\"text\">\r\n            Quantity\r\n          </Typography>\r\n          <NumericInput\r\n            value={1}\r\n            max={maxAmount}\r\n            min={0}\r\n            onChange={onNumberInput}\r\n          />\r\n          <Typography sx={sx.span} variant=\"text\">\r\n            ({maxAmount} max)\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box sx={sx.col}>\r\n          <Typography sx={sx.text} variant=\"text\">\r\n            Price\r\n          </Typography>\r\n          <Box display=\"flex\" sx={sx.priceContainer}>\r\n            <Typography sx={sx.price} variant=\"text\">\r\n             {totalPrice}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Button\r\n        variant=\"grayButton\"\r\n        onClick={() => onClickMint(quantity, totalPrice)}\r\n        disabled={quantity === 0 || quantity>maxAmount }\r\n      >\r\n        Mint\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\n/* eslint-disable react/forbid-prop-types */\r\nMintQuantity.propTypes = {\r\n  title: PropTypes.string,\r\n  maxAmount: PropTypes.number.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  onClickMint: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default MintQuantity;\r\n","import { Typography, Box } from \"@mui/material\";\r\nimport PopupModal from \"./PopupModal\";\r\nimport MintQuantity from \"./MintQuantity\";\r\n\r\nconst sx = {\r\n  content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"top\",\r\n    textAlign: \"center\",\r\n    gap: \"0 25px\",\r\n  },\r\n  title: {\r\n    size: 26,\r\n    mb: 1,\r\n  },\r\n  text: {\r\n    fontFamily: \"Jotia-Regular\",\r\n    color: '#FFF',\r\n    fontSize: 12,\r\n  },\r\n};\r\n\r\nconst CheckoutModal = ({\r\n  tokenName,\r\n  setOpen,\r\n  isOpen,\r\n  mintPresale,\r\n  mintSale,\r\n  isPresale,\r\n  presalePrice,\r\n  salePrice,\r\n  whitelistLimit,\r\n}) => {\r\n  const headerText = isPresale ? \"Presale Checkout\" : \"Checkout\";\r\n\r\n\r\n  return (\r\n    <PopupModal setOpen={setOpen} isOpen={isOpen} header={headerText}>\r\n      <Box sx={sx.content}>\r\n        <Typography sx={sx.title} variant='share'>{tokenName} Token</Typography>\r\n        <Typography sx={sx.text}>\r\n          Please select the number of NFT you wish to mint.\r\n        </Typography>\r\n\r\n        {isPresale && (\r\n          <MintQuantity\r\n            price={presalePrice}\r\n            maxAmount={whitelistLimit}\r\n            onClickMint={mintPresale}\r\n          />\r\n        )}\r\n        {!isPresale && (\r\n          <MintQuantity\r\n            price={salePrice}\r\n            maxAmount={1}\r\n            onClickMint={mintSale}\r\n          />\r\n        )}\r\n      </Box>\r\n    </PopupModal>\r\n  );\r\n};\r\n\r\nexport default CheckoutModal;\r\n","import React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst sx = {\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"2px\",\r\n    backgroundColor: \"#FF692B\",\r\n  },\r\n  titleDivider: {\r\n    mt: \"16px\",\r\n    maxWidth: \"100px\",\r\n    height: \"6px\",\r\n    mx: \"auto\",\r\n  },\r\n};\r\n\r\nconst Divider = ({ titleDivider, style }) => (\r\n  <Box\r\n    sx={{ ...sx.root, ...(titleDivider ? sx.titleDivider : {}), ...style }}\r\n  />\r\n);\r\n\r\n/* eslint-disable react/forbid-prop-types */\r\nDivider.propTypes = {\r\n  titleDivider: PropTypes.bool,\r\n  style: PropTypes.any,\r\n};\r\n\r\nDivider.defaultProps = {\r\n  titleDivider: false,\r\n  style: {},\r\n};\r\n\r\nexport default Divider;\r\n","import React from \"react\";\r\nimport { Typography, Modal, Box } from \"@mui/material\";\r\nimport { SpinnerCircularFixed as Spinner } from \"spinners-react\";\r\nimport Divider from \"./Divider\";\r\nimport PopupModal from \"./PopupModal\";\r\nimport './Spinner.css'\r\n\r\nconst sx = {\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    background: \"transparent\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // justifyContent: \"center\",\r\n    alignItems: \"top\",\r\n    textAlign: \"center\",\r\n    gap: \"0 25px\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    color: \"#FFF\",\r\n    lineHeight:\"30px\"\r\n  },\r\n  url: {\r\n    fontFamily: 'Jotia-Regular',\r\n    textDecoration: \"none\",\r\n    color: \"#628BA0\",\r\n    fontWeight: \"700\",\r\n  },\r\n};\r\n\r\nconst TxProgressModal = ({ isOpen, txEtherScan }) => {\r\n  return (\r\n    <PopupModal isOpen={isOpen} isTxPopup={true}>  \r\n      <Box sx={sx.root}>\r\n        <Typography variant=\"boxText\" sx={sx.title}>\r\n          Transaction<br/> In Progress\r\n        </Typography>\r\n        <Typography variant=\"text\" sx={{ my: 4 , color: '#FFF'}}>\r\n        Please wait while your transaction is being processed. <br />\r\n          {txEtherScan && (\r\n            <>\r\n              You can check the transaction status on{\" \"}\r\n              <Box\r\n                component=\"a\"\r\n                href={txEtherScan}\r\n                sx={sx.url}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                Etherscan\r\n              </Box>\r\n              .\r\n            </>\r\n          )}\r\n        </Typography>\r\n\r\n        <>\r\n    <div className=\"counter-circle\" style={{margin:\"0 auto\", marginBottom:\"10px\"}}>\r\n      <div className=\"counter-rotary-holder\" id='txRotator'>\r\n        <div className=\"counter-rotary-item\" />\r\n      </div>\r\n      <div className=\"counter-shadow\">\r\n        <div className=\"counter-content-holder\">\r\n          <div className=\"counter-text\">LOADING</div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </>\r\n        {/* <Spinner\r\n          color=\"#FF692B\"\r\n          style={{ marginLeft: \"auto\", marginRight: \"auto\" }}\r\n        /> */}\r\n      </Box>\r\n    </PopupModal>\r\n  );\r\n};\r\n\r\nexport default TxProgressModal;\r\n","import { Button, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { ethers } from 'ethers';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Banner from '../../components/Banner';\r\nimport useWeb3Ctx from '../../hooks/useWeb3Ctx';\r\nimport Success from './Success';\r\nimport maskImage from '../../assets/images/mask.jpg';\r\nimport saleAbi from '../../contracts/SaleContract.json';\r\nimport tokenAbi from '../../contracts/TokenContract.json';\r\nimport config from '../../config/config';\r\nimport Counter from '../../components/Counter';\r\nimport { toast } from 'react-toast';\r\nimport whitelist from '../../whitelist/whitelist.json';\r\nimport CheckoutModal from './CheckoutModal';\r\nimport TxProgressModal from './TxProgressModal';\r\nconst date = new Date('2022-10-17T16:00:00.000Z');\r\n\r\nconst BP1 = '@media (max-width: 450px)';\r\n\r\nconst sx = {\r\n  root: {},\r\n\r\n  title: {\r\n    mb: '20px',\r\n    [BP1]: {\r\n      mt: '0px !important',\r\n    },\r\n  },\r\n  subTitle: {\r\n    marginBottom: '30px',\r\n    fontSize: '24px',\r\n  },\r\n  bannerMintedPage: {\r\n    // mt: '-45px',\r\n    [BP1]: {\r\n      mt: 0,\r\n    },\r\n  },\r\n  pubMintHolder: {\r\n    dispaly: 'flex',\r\n    mb: '40px',\r\n    gap: '10px'\r\n  }\r\n};\r\n\r\nconst MintPage = () => {\r\n  const { onboard, handleConnect, address, ethersProvider } = useWeb3Ctx();\r\n  const [buttonText, setButtonText] = useState('Connect Wallet');\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [userAlreadyMinted, setUserAlreadyMinted] = useState(false);\r\n  const saleContract = new ethers.Contract(\r\n    config.SALE_CONTRACT,\r\n    saleAbi.abi,\r\n    ethersProvider\r\n  );\r\n  const tokenContract = new ethers.Contract(\r\n    config.TOKEN_CONTRACT,\r\n    tokenAbi.abi,\r\n    ethersProvider\r\n  );\r\n  const [minted, setMinted] = useState(0);\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  const [salePrice, setSalePrice] = useState(0);\r\n  const [discountPrice, setDiscountPrice] = useState(0);\r\n\r\n  //sale states needed a different approach, because the sales can overlap each other :/\r\n\r\n  const [preSaleStarted, setPreSaleStarted] = useState(false);\r\n  const [preSaleFinished, setPreSaleFinished] = useState(false);\r\n\r\n  const [mainSaleStarted, setMainSaleStarted] = useState(false);\r\n  const [mainSaleFinished, setMainSaleFinished] = useState(false);\r\n\r\n  const [presaleStartTime, setPresaleStartTime] = useState(null);\r\n  const [saleStartTime, setSaleStartTime] = useState(null);\r\n  const [presaleEndTime, setPresaleEndTime] = useState(null);\r\n  const [saleEndTime, setSaleEndTime] = useState(null);\r\n\r\n  const [presaleTimeCounter, setPresaleTimeCounter] = useState(null);\r\n  const [saleTimeCounter, setSaleTimeCounter] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [txEtherScan, setTxEtherScan] = useState('');\r\n  const [showCheckout, setShowCheckout] = useState(false);\r\n  const [showErrorPopup, setShowErrorPopup] = useState(false);\r\n  const [txInProgress, setTxInProgress] = useState(false);\r\n  const [approveInProgress, setApproveInProgress] = useState(false);\r\n  const [checkoutIsPresale, setCheckoutIsPresale] = useState(true);\r\n  const [isCreditCard, setIsCreditCard] = useState(false);\r\n  const [signature, setSignature] = useState(null);\r\n  const [maxTokenPerAddress, setMaxTokenPerAddress] = useState(10);\r\n\r\n  const [maxDiscountMintable, setMaxDiscountMintable] = useState(10);\r\n  const [maxMintableDuringMainSale, setMaxMintableDuringMainSale] =\r\n    useState(10);\r\n  const [userMaxDiscountMintable, setUserMaxDiscountMintable] = useState(0);\r\n  const [maxMintPerTransaction, setMaxMintPerTransaction] = useState(1);\r\n  const [refreshInterval, setRefreshInterval] = useState(null);\r\n  const [counintingOver,setCountingOver]= useState(0);\r\n  const [signatures, setSignatures] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('address: ', address);\r\n    if (address && address !== null) {\r\n      setButtonText('MINT');\r\n      setActiveTab(1);\r\n    } else {\r\n      setButtonText('Connect Wallet');\r\n      setActiveTab(0);\r\n    }\r\n  }, [address]);\r\n  useEffect(() => {\r\n    if (address === null) return;\r\n    (async () => {\r\n      const alreadyMintedByWallet = await saleContract\r\n        ._mintedByWallet(address)\r\n        .catch((e) => console.log);\r\n      if (alreadyMintedByWallet.toNumber() > 0) {\r\n        setUserAlreadyMinted(true);\r\n      }\r\n      console.log(alreadyMintedByWallet, ' setUserAlreadyMinted');\r\n    })();\r\n  }, []);\r\n\r\n  const handleOnClick = () => {\r\n    switch (activeTab) {\r\n      case 0:\r\n        handleConnect();\r\n        break;\r\n      case 1:\r\n        if (preSaleStarted) {\r\n          handleDiscountMint();\r\n        }\r\n        if (mainSaleStarted) {\r\n          handleMint();\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const handleGoToWallet = () => {\r\n    setActiveTab(2);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(ethersProviderVar, \" ethersProviderVar\")\r\n    if (address === null) return;\r\n    (async () => {\r\n      const balanceOf = await tokenContract\r\n        .balanceOf(address)\r\n        .catch((e) => toast.error(e.message));\r\n      console.log(balanceOf.toNumber(), ' balance');\r\n      if (balanceOf < 1) return;\r\n      const token = await tokenContract\r\n        .tokenOfOwnerByIndex(address, 0)\r\n        .catch((e) => {\r\n          toast.error(e.message);\r\n        });\r\n      if (token) {\r\n        console.log(token, ' token');\r\n      }\r\n      // const minted = await getMintedByWallet();\r\n      // console.log(minted, ' minted by wallet');\r\n      // const presaleStart = await checkPresaleActive();\r\n      // console.log(\"presale is active \", presaleStart)\r\n      // const signer = saleContract.connect(ethersProvider.getSigner());\r\n      // console.log(signer, \" signer\")\r\n      // const presaleIn5 = await setPresaleIn(signer);\r\n      // console.log(presaleIn5, \" presaleIn5\")\r\n    })();\r\n  }, [activeTab]);\r\n\r\n  useEffect(() => {\r\n    // console.log(ethersProviderVar, \" ethersProviderVar\")\r\n    (async () => {\r\n      const saleInfo = await getSaleInfo().then((response) => {\r\n        console.log(response);\r\n      });\r\n\r\n      // const minted = await getMintedByWallet();\r\n      // console.log(minted, ' minted by wallet');\r\n      // const presaleStart = await checkPresaleActive();\r\n      // console.log(\"presale is active \", presaleStart)\r\n      // const signer = saleContract.connect(ethersProvider.getSigner());\r\n      // console.log(signer, \" signer\")\r\n      // const presaleIn5 = await setPresaleIn(signer);\r\n      // console.log(presaleIn5, \" presaleIn5\")\r\n    })();\r\n  }, [counintingOver]);\r\n\r\n  const getUserParams = () => {\r\n    let up = null;\r\n    if (address) {\r\n      //console.log('SIGNATURES-------',signatures);\r\n\r\n      const key = Object.keys(whitelist).find(\r\n        (key) => key.toLowerCase() == address.toLowerCase()\r\n      );\r\n      //console.log('USER KEY', key);\r\n      if (key) {\r\n        // const userParams = whitelist[key].paramObj;\r\n        const userParamsRaw = whitelist[key].params;\r\n\r\n        // up = {\r\n        //   params: {\r\n        //     max_mint: userParams[3],\r\n        //     receiver: userParams[4],\r\n        //     valid_from: userParams[5],\r\n        //     valid_to: userParams[6],\r\n        //     eth_price: userParams[7],\r\n        //   },\r\n        //   raw_params: userParams,\r\n        //   signature: whitelist[key].signature,\r\n        // };\r\n        up = {\r\n          params: {\r\n            max_mint: userParamsRaw[3],\r\n            receiver: userParamsRaw[4],\r\n            valid_from: userParamsRaw[5],\r\n            valid_to: userParamsRaw[6],\r\n            eth_price: userParamsRaw[7],\r\n          },\r\n          raw_params: userParamsRaw,\r\n          signature: whitelist[key].signature,\r\n        };\r\n        // console.log(up, \" up\")\r\n      }\r\n    }\r\n    return up;\r\n  };\r\n  const getSaleInfo = async () => {\r\n    //console.log('saleInfo',saleContract);\r\n    setIsLoading(true);\r\n    const info = await saleContract\r\n      .tellEverything()\r\n      .catch((e) => console.log('err:', e));\r\n    console.log('****info', info);\r\n\r\n    \r\n    \r\n    const totalSupply = await tokenContract.totalSupply();\r\n    //console.log('TS',totalSupply);\r\n\r\n    // let time = 1665648120;\r\n    const presaleStart = Number(info.config.presaleStart);\r\n    // const presaleStart = Number(info.config.presaleStart);\r\n    const presaleEnd = Number(info.config.presaleEnd);\r\n    \r\n    const saleStart = Number(info.config.saleStart);\r\n    const saleEnd = Number(info.config.saleEnd);\r\n\r\n    const fullPrice = info.config.fullPrice;\r\n\r\n    /* const maxTokens = Number(info.maxTokens);\r\n    const userMinted = Number(info.userMinted);\r\n\r\n    const presaleIsActive = info.presaleIsActive;\r\n    const saleIsActive = info.saleIsActive; */\r\n\r\n    setMaxDiscountMintable(Number(info.config.maxPresalePerAddress));\r\n    setMaxTokenPerAddress(Number(info.config.maxSalePerAddress));\r\n\r\n    setMaxMintPerTransaction(Number(info.config.maxMintPerTransaction));\r\n\r\n    //\tlet reserved = info.maxTokens.sub(info.MaxUserMintable);\r\n    //\tsetMinted(Number(info.userMinted.add(reserved)));\r\n    setMinted(Number(totalSupply));\r\n    //setTotalAmount(Number(info.config.MaxUserMintable?info.config.MaxUserMintable:info._MaxUserMintable)); //maxTokens\r\n\r\n    let now = Date.parse(new Date()) / 1000;\r\n    let now2 = Date.parse(new Date()) / 1000;\r\n    //let now = Number(await saleContract.getBlockTimestamp());\r\n\r\n    /* console.log('current time', now2)\r\n        console.log('block time', now)\r\n        console.log('presale start time', presaleStart)\r\n        \r\n        console.log('presale end time', presaleEnd)\r\n        console.log('sale start time', saleStart)\r\n        console.log('sale end time', saleEnd) */\r\n    console.log(saleStart, ' presale end');\r\n    let presaleIsOver = presaleEnd - now <= 0;\r\n    let saleIsOver = saleEnd - now <= 0;\r\n    let saleIsOn = now >= saleStart && !saleIsOver;\r\n    let presaleIsOn = now >= presaleStart && !presaleIsOver;\r\n    // let presaleIsOver = saleEnd - now <= 0;\r\n    // let saleIsOver = saleStart - now <= 0;\r\n    // let saleIsOn = now >= presaleStart && !saleIsOver;\r\n    // let presaleIsOn = now >= presaleEnd && !presaleIsOver;\r\n\r\n    //\tlet _discountPrice = 0;\r\n    let _discountPrice = ethers.BigNumber.from('50000000000000000');\r\n\r\n    setDiscountPrice(ethers.utils.formatEther(_discountPrice));\r\n    setSalePrice(ethers.utils.formatEther(fullPrice));\r\n\r\n    setPreSaleStarted(presaleIsOn);\r\n    setPreSaleFinished(presaleIsOver);\r\n    /* \r\n    setPreSaleStarted(true);\r\n    setPreSaleFinished(true); */\r\n\r\n    setMainSaleStarted(saleIsOn);\r\n    setMainSaleFinished(saleIsOver);\r\n\r\n    setPresaleStartTime(new Date(presaleStart * 1000));\r\n    setPresaleEndTime(new Date(presaleEnd * 1000));\r\n    setSaleStartTime(new Date(saleStart * 1000));\r\n    setSaleEndTime(new Date(saleEnd * 1000));\r\n\r\n    if (!presaleIsOn && !presaleIsOver) {\r\n      setPresaleTimeCounter(new Date(presaleStart * 1000));\r\n    } else {\r\n      //console.log('presale over, or on');\r\n      if (!presaleIsOver) {\r\n        setPresaleTimeCounter(new Date(presaleEnd * 1000));\r\n      }\r\n    }\r\n\r\n    if (!saleIsOn && !saleIsOver) {\r\n      setSaleTimeCounter(new Date(saleStart * 1000));\r\n    } else {\r\n      //console.log('sale over, or on');\r\n      if (!saleIsOver) {\r\n        setSaleTimeCounter(new Date(saleEnd * 1000));\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleDiscountMint = async () => {\r\n    console.log('handle discount mint');\r\n    let maxMintable = 0;\r\n\r\n    //mintInfo =  await saleContract.checkDiscountAvailable(address);\r\n\r\n    const userParams = getUserParams();\r\n\r\n    if (!userParams) {\r\n      toast.error('Address not found in the whitelist');\r\n      setShowErrorPopup(true);\r\n      return;\r\n    }\r\n\r\n    const alreadyMintedByWallet = await saleContract\r\n      ._mintedByWallet(address)\r\n      .catch((e) => console.log);\r\n    console.log(alreadyMintedByWallet, ' alreadyMintedByWallet');\r\n    //console.log('minted by wallet',alreadyMintedByWallet);\r\n\r\n    if (alreadyMintedByWallet) {\r\n      maxMintable = userParams.params.max_mint - Number(alreadyMintedByWallet);\r\n    }\r\n\r\n    //console.log('maxMintable', maxMintable);\r\n\r\n    if (maxMintable < 1) {\r\n      toast.error('You have already used up your presale quota.');\r\n      return;\r\n    }\r\n    console.log(maxMintable, ' maxmintable');\r\n    setUserMaxDiscountMintable(Math.min(maxMintPerTransaction,maxMintable));\r\n    // setUserMaxDiscountMintable(maxMintable);\r\n    setCheckoutIsPresale(true);\r\n    setIsCreditCard(false);\r\n    setShowCheckout(true);\r\n  };\r\n  const handleReveal = async () => {\r\n    const reveal = await saleContract\r\n      .Goerli_revealAtCurrentSuppl()\r\n      .catch((e) => console.log('err:', e));\r\n    if (reveal) {\r\n    }\r\n  };\r\n  const handleMint = async () => {\r\n    setApproveInProgress(true);\r\n    console.log('!!!!!!!max tokens per adddres', maxTokenPerAddress);\r\n    const alreadyMintedByWallet = await saleContract\r\n      ._mintedByWallet(address)\r\n      .catch((e) => console.log);\r\n\r\n    if (alreadyMintedByWallet) {\r\n      let maxMintableMainSale =\r\n        maxTokenPerAddress - Number(alreadyMintedByWallet);\r\n\r\n      if (maxMintableMainSale > 0) {\r\n        setMaxMintableDuringMainSale(\r\n          maxMintableMainSale < maxMintPerTransaction\r\n            ? maxMintableMainSale\r\n            : maxMintPerTransaction\r\n        );\r\n\r\n        /* \tif (userIsEcHolder) {\r\n          setUserMaxDiscountMintable(maxMintableMainSale < maxMintPerTransaction ? maxMintableMainSale : maxMintPerTransaction);\r\n        } */\r\n\r\n        //\tsetCheckoutIsPresale(userIsEcHolder);//!!! ec holder hack. it should be false otherwise\r\n        setCheckoutIsPresale(false);\r\n        setIsCreditCard(false);\r\n        setApproveInProgress(false);\r\n        setShowCheckout(true);\r\n      } else {\r\n        setApproveInProgress(false);\r\n        toast.error('You have alredy used up your quota.');\r\n      }\r\n    } else {\r\n      setApproveInProgress(false);\r\n      console.log(\"can't get already minted tokens\");\r\n    }\r\n  };\r\n\r\n  const mintDisco = async (amount, price) => {\r\n    let sc = saleContract.connect(ethersProvider.getSigner());\r\n\r\n    setShowCheckout(false);\r\n\r\n    setApproveInProgress(true);\r\n\r\n    let userParams = getUserParams();\r\n\r\n    if (!userParams) {\r\n      return;\r\n    }\r\n    let tx = null;\r\n\r\n    tx = await sc\r\n      .mint_approved([...userParams.raw_params, userParams.signature], amount, {\r\n        value: amount,\r\n      })\r\n      .catch(handleError);\r\n\r\n    setApproveInProgress(false);\r\n\r\n    if (tx) {\r\n      setTxEtherScan(`${config.ETHERSCAN_URL}/tx/${tx.hash}`);\r\n      setTxInProgress(true);\r\n      let res = await tx.wait().catch((e) => {\r\n        console.log(e, ' errrrrrrrror');\r\n        handleError(e);\r\n        setTxInProgress(false);\r\n      });\r\n\r\n      // let resTwo = await tx.getTransactionHash().catch((e) => {\r\n      //   console.log(e, \" errrrrrrrror\")\r\n      //   handleError(e);\r\n      //   setTxInProgress(false);\r\n      // });\r\n      // let receipt = await resTwo.getReceipt();\r\n      if (res) {\r\n        console.log(res, \" ressss 443\")\r\n        setTxInProgress(false);\r\n        getSaleInfo();\r\n        setActiveTab(2); //-> wallet\r\n      }\r\n\r\n      localStorage.setItem('activeTab', 1);\r\n    }\r\n  };\r\n\r\n  const mintRegular = async (amount) => {\r\n    let sc = saleContract.connect(ethersProvider.getSigner());\r\n\r\n    setShowCheckout(false);\r\n    setApproveInProgress(true);\r\n    const tx = await sc\r\n      .mint(amount, { value: ethers.utils.parseEther(salePrice.toString()) })\r\n      .catch(handleError);\r\n    setApproveInProgress(false);\r\n\r\n    if (tx) {\r\n      setTxEtherScan(`${config.ETHERSCAN_URL}/tx/${tx.hash}`);\r\n      setTxInProgress(true);\r\n      await tx.wait().then(()=>{\r\n        setTxInProgress(false);\r\n        getSaleInfo();\r\n        setActiveTab(2);\r\n      }).catch((e) => {\r\n        handleError(e);\r\n        setTxInProgress(false);\r\n      })\r\n      \r\n      // localStorage.setItem('activeTab', 1);\r\n    }\r\n  };\r\n  const handleError = (e) => {\r\n    console.error(e);\r\n    if (e.error && e.error.message) {\r\n      toast.error(e.error.message);\r\n      console.log(e.error.message);\r\n    } else if (e.message) {\r\n      toast.error(e.message);\r\n      console.log(e.message);\r\n    } else if (e.reason) {\r\n      toast.error(e.reason);\r\n      console.log(e.reason);\r\n    }\r\n  };\r\n  const handleCountingOver = () =>{\r\n    setCountingOver((value)=> value+1)\r\n  }\r\n  return (\r\n    <Box className=\"center-div\" sx={sx.root}>\r\n      {activeTab > 0 && (\r\n        <Banner style={sx.bannerMintedPage} onClick={() => setActiveTab(1)}\r\n         />\r\n      )}\r\n      <Typography\r\n        variant=\"pageTitle\"\r\n        sx={{ ...sx.title, ...(activeTab === 2 && { mt: '-45px' }) }}\r\n      >\r\n        Braves Free Mint\r\n      </Typography>\r\n      {activeTab < 2 && (\r\n        <Typography\r\n          variant=\"pageTitleDescription\"\r\n          sx={{ ...sx.subTitle, marginBottom: '40px', color: '#594569', fontSize: '14px' }}\r\n        >\r\n          BEGIN YOUR JOURNEY INTO BETWIXT\r\n        </Typography>\r\n      )}\r\n\r\n{preSaleFinished && mainSaleFinished && <Success counterDate={date} salesOver/>}\r\n\r\n\r\n      {activeTab < 2 && (\r\n        <>\r\n          {preSaleStarted ? (\r\n            <>\r\n            <Typography variant=\"pageTitleDescription\" sx={sx.subTitle} style={{marginBottom: '10px'}}>\r\n              Whitelist mint:\r\n            </Typography>\r\n            <Typography variant=\"pageTitleDescription\" sx={sx.subTitle} style={{backgroundColor: '#594569', padding: '17px 20px', marginBottom: '40px', width: '140px', marginTop: '15px', fontSize: '18px'}}>\r\n              started\r\n            </Typography>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {!preSaleFinished && (\r\n                <>\r\n                  <Typography\r\n                    variant=\"pageTitleDescription\"\r\n                    sx={sx.subTitle}\r\n                    style={{ marginBottom: 0 }}\r\n                  >\r\n                    Whitelist mint starts in :\r\n                  </Typography>\r\n                  <Counter date={presaleTimeCounter} handleCountingOver={handleCountingOver}/>\r\n                  <br />\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n          {mainSaleStarted ? (\r\n            <Typography variant=\"pageTitleDescription\" sx={sx.subTitle}>\r\n             Public mint started\r\n            </Typography>\r\n          ) : (\r\n            <Box sx={{ textAlign: 'center' }}>\r\n             {preSaleStarted && !mainSaleFinished && (\r\n                <>\r\n                  <Typography variant=\"pageTitleDescription\" sx={sx.subTitle}>\r\n                  Public mint starts in :\r\n                  </Typography>\r\n                  <Counter date={saleTimeCounter} />\r\n                </>\r\n              )}\r\n            \r\n\r\n              {!preSaleStarted && !preSaleFinished &&  (\r\n                <Box className=\"pubMintHolder\" sx={sx.pubMintHolder}>\r\n                  <Typography variant=\"pageTitleDescription\" sx={sx.subTitle} style={{fontSize: '18px'}}>\r\n                  Public mint starts in :\r\n                  </Typography>\r\n                  <Typography variant=\"pageTitleDescription\" style={{color:'#594569', fontWeight: '700'}}> <Counter date={saleTimeCounter} simple /></Typography>\r\n                </Box>\r\n              )}\r\n              \r\n            </Box>\r\n          )}\r\n\r\n          {activeTab !== 2 && (preSaleStarted || mainSaleStarted) && (\r\n            <>\r\n              <Button variant=\"grayButton\" onClick={handleOnClick}>\r\n                {buttonText}\r\n              </Button>\r\n            </>\r\n          )}\r\n          {!mainSaleStarted && !preSaleStarted && !mainSaleFinished && !preSaleFinished &&\r\n          <>\r\n          <Typography\r\n          variant=\"pageTitleDescription\"\r\n          sx={sx.subTitle}\r\n          style={{ marginBottom: 0 }}\r\n        >\r\n          Mint is not started yet!\r\n        </Typography>\r\n        </>\r\n          }\r\n          {/* {showErrorPopup \r\n          &&  <Typography variant=\"pageTitleDescription\" sx={sx.subTitle}>\r\n          userParams error\r\n        </Typography>\r\n          } */}\r\n          <CheckoutModal\r\n            tokenName=\"\"\r\n            isOpen={showCheckout}\r\n            setOpen={() => {\r\n              if (!txInProgress && !approveInProgress) {\r\n                setShowCheckout(false);\r\n              }\r\n            }}\r\n            isPresale={checkoutIsPresale}\r\n            withCreditCard={isCreditCard}\r\n            whitelistLimit={\r\n              checkoutIsPresale\r\n                ? userMaxDiscountMintable\r\n                : maxMintableDuringMainSale\r\n            }\r\n            // salePrice={salePrice}\r\n            salePrice=\"FREE\"\r\n            presalePrice=\"FREE\"\r\n            mintSale={mintRegular}\r\n            mintPresale={mintDisco}\r\n          />\r\n        </>\r\n      )}\r\n      {/*<Typography variant=\"pageTitleDescription\" >PResale </Typography>\r\n      <Counter date={presaleTimeCounter} />\r\n       <Typography variant=\"pageTitleDescription\" >Sale </Typography>\r\n      <Counter date={saleTimeCounter} /> */}\r\n\r\n      {activeTab === 2 && (\r\n        <>\r\n          <Success counterDate={date} image={maskImage} />\r\n        </>\r\n      )}\r\n      {/* {activeTab === 2 && !txInProgress && !approveInProgress && !mainSaleFinished && ! preSaleFinished &&  (\r\n        <>\r\n          <Success counterDate={date} image={maskImage} failed/>\r\n        </>\r\n      )} */}\r\n\r\n      <TxProgressModal isOpen={txInProgress} txEtherScan={txEtherScan} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MintPage;\r\n","import Burn from \"../Views/Burn/Burn\";\r\nimport Home from \"../Views/Home/Home\";\r\nimport MintPage from \"../Views/MintPage/MintPage\";\r\n\r\n\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    component: <Home/>,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/mint\",\r\n    component: <MintPage/>,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/burn\",\r\n    component: <Burn/>,\r\n    exact: true,\r\n  },\r\n\r\n];\r\n\r\nexport default routes;\r\n","import { createTheme } from '@mui/material';\r\nconst BP1 = '@media (max-width: 600px)';\r\n\r\nconst COLORS = {\r\n    primaryColor: '#FFFFFF',\r\n    background: '#151019',\r\n    gray: '#363F59',\r\n};\r\n\r\nconst theme = createTheme({\r\n    typography: {\r\n        pageTitle: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Schnyder',\r\n            fontWeight: 300,\r\n            fontSize: '64px',\r\n            lineHeight: '77px',\r\n            [BP1]: {\r\n                fontSize: '42px',\r\n                lineHeight: '53px',\r\n            }\r\n        },\r\n        pageTitleDescription: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Jotia',\r\n            fontSize: '14px',\r\n            lineHeight: '17px',\r\n            textTransform: 'uppercase',\r\n            [BP1]: {\r\n                fontSize: '12px',\r\n                lineHeight: '14px',\r\n            }\r\n        },\r\n        counterNumber: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Jotia',\r\n            fontSize: '32px',\r\n            textTransform: 'uppercase',\r\n            [BP1]: {\r\n                fontSize: '24px',\r\n            }\r\n        },\r\n        boxText: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Jotia',\r\n            fontSize: '24px',\r\n            textTransform: 'uppercase',\r\n            [BP1]: {\r\n                fontSize: '18px',\r\n            } \r\n        },\r\n        share: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Jotia',\r\n            fontSize: '16px',\r\n            textTransform: 'uppercase',\r\n            cursor: 'pointer',\r\n            [BP1]: {\r\n                fontSize: '14px',\r\n            } \r\n        }\r\n    },\r\n    components: {\r\n        MuiButton: {\r\n            styleOverrides: {\r\n                grayButton: {\r\n                    color: COLORS.primaryColor,\r\n                    padding: '18px',\r\n                    fontFamily: 'Jotia',\r\n                    fontSize: '22px',\r\n                    lineHeight: '29px',\r\n                    textTransform: 'uppercase',\r\n                    backgroundColor: COLORS.gray,\r\n                    borderRadius: '4px',\r\n                    maxWidth: '292px',\r\n                    width: '100%',\r\n                    margin: '0 auto',\r\n                    '&:hover': {\r\n                        backgroundColor: COLORS.gray,\r\n                    },\r\n                    [BP1]: {\r\n                        fontSize: '15px',\r\n                        lineHeight: '22px',\r\n                        maxWidth: '220px',\r\n                        padding: '13px',\r\n                    }\r\n                },\r\n                orangeFilledButton: {\r\n\r\n                    padding: '10px 10px',\r\n                    fontFamily: 'poppins-semibold',\r\n                    fontSize: '14px',\r\n                    textTransform: 'uppercase',\r\n                    backgroundColor: '#FF692B',\r\n                    border: '2px solid #FF682B',\r\n                    borderRadius: '4px',\r\n                    maxWidth: '215px',\r\n                    width: '100%',\r\n                    margin: '0 auto',\r\n                    '&:hover': {\r\n                        backgroundColor: '#ff692bcc'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: COLORS.primaryColor,\r\n        },\r\n        background: {\r\n            background: COLORS.background,\r\n            error: {\r\n                main: '#EE1B11',\r\n            },\r\n        }\r\n    },\r\n});\r\n\r\nexport default theme;\r\n","import Onboard from \"bnc-onboard\";\r\nimport { ethers } from \"ethers\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport config from '../config/config';\r\nimport Web3Ctx from \"../context/Web3Ctx\";\r\n\r\nconst { DEPLOYED_NTW_NAME, DEPLOYED_CHAIN_ID, RPC_URL, FORTMATIC_KEY } = config;\r\nexport let ethersProviderVar = null;\r\nconst sx = {\r\n    root: {\r\n        display: \"flex\",\r\n        minHeight: \"100vh\",\r\n        height: \"100%\",\r\n        weight: \"100%\",\r\n        background: \"#FFF\",\r\n    },\r\n    container: {\r\n        textAlign: \"center\",\r\n        margin: \"auto\",\r\n    },\r\n};\r\n\r\n\r\n\r\nconst Web3Manager = ({ children }) => {\r\n    const [onboard, setOnboard] = useState(null);\r\n    const [address, setAddress] = useState(null);\r\n    const [wallet, setWallet] = useState(null);\r\n    const [ethersProvider, setEthersProvider] = useState(null);\r\n    const [chainId, setChainId] = useState(null);\r\n    const [networkName, setNetworkName] = useState(DEPLOYED_NTW_NAME);\r\n    const [initDone, setInitDone] = useState(false);\r\n    const hash = window.location.hash.substr(0, window.location.hash.indexOf('?'));\r\n\r\n    useEffect(() => {\r\n        // console.log('web3 manager mounted');\r\n        initApp();\r\n    }, []);\r\n\r\n\r\n    const initApp = async () => {\r\n        try {\r\n            // console.log(\"Initiating onboard\");\r\n            const ob = Onboard({\r\n                networkId: DEPLOYED_CHAIN_ID, // [Integer] The Ethereum network ID your Dapp uses.\r\n                darkMode: false,\r\n                blockPollingInterval: 12000,\r\n                walletSelect: {\r\n                    wallets: [\r\n                        { walletName: \"metamask\" },\r\n                        { walletName: \"coinbase\" },\r\n                        { walletName: \"trust\", rpcUrl: RPC_URL },\r\n                        { walletName: \"authereum\" },\r\n                        { walletName: \"wallet.io\", rpcUrl: RPC_URL },\r\n                        { walletName: \"atoken\" },\r\n                        {\r\n                            walletName: \"fortmatic\",\r\n                            apiKey: FORTMATIC_KEY,\r\n                        },\r\n                        {\r\n                            walletName: \"walletConnect\",\r\n                            rpc: {\r\n                                1: RPC_URL,\r\n                                4: RPC_URL,\r\n                                5: RPC_URL,\r\n                            },\r\n                        },\r\n                        { walletName: \"opera\" },\r\n                        { walletName: \"operaTouch\" },\r\n                        { walletName: \"torus\" },\r\n                        { walletName: \"status\" },\r\n                        { walletName: \"walletLink\", rpcUrl: RPC_URL },\r\n                        {\r\n                            walletName: \"trezor\",\r\n                            appUrl: \"ether.cards\",\r\n                            email: \"info@ether.cards\",\r\n                            rpcUrl: RPC_URL,\r\n                        },\r\n                        {\r\n                            walletName: \"ledger\",\r\n                            rpcUrl: RPC_URL,\r\n                        },\r\n                    ],\r\n                },\r\n                walletCheck: [\r\n                    { checkName: \"derivationPath\" },\r\n                    { checkName: \"accounts\" },\r\n                    { checkName: \"connect\" },\r\n                    { checkName: \"network\" },\r\n                ],\r\n                subscriptions: {\r\n                    wallet: (obWallet) => {\r\n                        // console.log('OB wallet', obWallet);\r\n                        if (obWallet.provider) {\r\n                            setWallet(obWallet);\r\n                            const provider = new ethers.providers.Web3Provider(\r\n                                obWallet.provider,\r\n                                \"any\"\r\n                            );\r\n                            setEthersProvider(provider);\r\n                            ethersProviderVar = provider;\r\n                            window.sessionStorage.setItem(\"selectedWallet\", obWallet.name);\r\n                        } else {\r\n                            console.log(\"wallet not found, setting default provider\");\r\n                            const provider = new ethers.providers.JsonRpcProvider(RPC_URL);\r\n                            setEthersProvider(provider);\r\n                            setWallet(null);\r\n                        }\r\n                    },\r\n                    address: (obAddress) => {\r\n                        setAddress(obAddress);\r\n                    },\r\n                    network: (network) => {\r\n                        setChainId(network);\r\n                        // console.log(network);\r\n                    },\r\n                },\r\n            });\r\n\r\n            const savedWallet = window.location.hash === '#/explorer' || hash === '#/render' ? undefined : sessionStorage.getItem('selectedWallet');\r\n            if (savedWallet) {\r\n                await ob.walletSelect(savedWallet);\r\n                const userReady = await ob.walletCheck();\r\n                // console.log('user ready(with saved wallet)',userReady);\r\n            } else {\r\n                const provider = new ethers.providers.JsonRpcProvider(RPC_URL);\r\n                setEthersProvider(provider);\r\n            }\r\n\r\n\r\n            console.log(\"init onboard done\");\r\n\r\n            setOnboard(ob);\r\n            setInitDone(true);\r\n        } catch (e) {\r\n            console.log(\"onboard init error\", e);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('WALLET', wallet);\r\n        if (wallet) {\r\n            walletCheck();\r\n           \r\n        }\r\n    }, [wallet]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (ethersProvider) {\r\n            subscribeNetwork(ethersProvider);\r\n        }\r\n    }, [ethersProvider]);\r\n\r\n    useEffect(() => {\r\n        if (address && isWalletConnected() == false) {\r\n            console.log(\"set address null\");\r\n            setAddress(null);\r\n        }\r\n    }, [address]);\r\n\r\n    const subscribeNetwork = async (provider) => {\r\n        const network = await provider.getNetwork().catch((e) => {\r\n            console.log(\"error:\", e);\r\n        });\r\n        if (network) {\r\n            setNetworkName(network.name);\r\n            setChainId(network.chainId);\r\n        }\r\n    };\r\n\r\n    const isWalletConnected = () => {\r\n        console.log(\"check wallet state\");\r\n        if (onboard) {\r\n            const state = onboard.getState();\r\n            return state.wallet.name != null;\r\n        } else return null;\r\n    };\r\n\r\n    const handleConnect = async (e) => {\r\n        console.log('initdone', initDone);\r\n        if (!initDone) return;\r\n        if (onboard) {\r\n            if (e) {\r\n                e.stopPropagation();\r\n            }\r\n\r\n            console.log(\"reset\");\r\n            onboard.walletReset();\r\n            console.log(\"walletSelect\");\r\n            const walletSelected = await onboard.walletSelect();\r\n            // const signiture = await walletSelected.signMessage('hello');\r\n            // console.log(signiture, 'signature')\r\n            console.log('walletselected', walletSelected);\r\n            if (walletSelected) {\r\n                onboard.walletCheck();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDisconnect = () => {\r\n        if (onboard) {\r\n            console.log(\"logout wallet\");\r\n            onboard.walletReset();\r\n            if (window.sessionStorage) {\r\n                window.sessionStorage.removeItem(\"selectedWallet\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const walletCheck = async () => {\r\n        if (onboard) {\r\n            await onboard.walletCheck();\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const isCorrectNetwork = chainId === DEPLOYED_CHAIN_ID;\r\n\r\n    if (!initDone) {\r\n        return (\r\n            <div style={sx.root}>\r\n                <div style={sx.container}>\r\n                    loading\r\n                    {/*  <Spinner color=\"#FF692B\" /> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Web3Ctx.Provider\r\n            value={{\r\n                onboard,\r\n                wallet,\r\n                address,\r\n                ethersProvider,\r\n                chainId,\r\n                defaultChainId: config.DEPLOYED_CHAIN_ID,\r\n                handleConnect,\r\n                handleDisconnect,\r\n                isCorrectNetwork,\r\n                walletCheck\r\n            }}\r\n        >\r\n            {children}\r\n        </Web3Ctx.Provider>\r\n    );\r\n};\r\nexport default Web3Manager;","export default __webpack_public_path__ + \"static/media/Galaxis.2ce1e236.svg\";","export default __webpack_public_path__ + \"static/media/CC.85a6dfa4.svg\";","import { Box } from '@mui/system'\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography'\r\nimport GalaxisLogo from '../assets/images/logos/Galaxis.svg'\r\nimport CamelCodingLogo from '../assets/images/logos/CC.svg'\r\n\r\nconst BP1 = '@media (max-width: 550px)';\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto 0 auto',\r\n        p: '35px 0',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        columnGap: '80px',\r\n        rowGap: '15px',\r\n        [BP1]: {\r\n            justifyContent: 'center',\r\n        }\r\n    },\r\n    contentHolder: {\r\n        display: 'flex',\r\n        gap: '5px',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        '& img': {\r\n            maxHeight: '32px',\r\n            height: '100%',\r\n            cursor: 'pointer'\r\n        }\r\n    },\r\n    text: {\r\n        whiteSpace:\"no-wrap\",\r\n        textTransform:\"uppercase\",\r\n        font: 'Jotia-Regular',\r\n        color: '#FFF',\r\n        fontSize: '12px',\r\n\r\n    }\r\n}\r\nconst Footer = () => {\r\n\r\n    const openCC = () => {\r\n        window.open('https://camelcoding.com/', '_blank')\r\n    }\r\n    const openGalaxisWebsite = () => {\r\n        window.open('https://galaxis.xyz', '_blank')\r\n    }\r\n\r\n    return (\r\n        <Box sx={sx.root}>\r\n            <Box sx={sx.contentHolder}>\r\n                <Typography sx={sx.text}>powered by:</Typography>\r\n                <img src={CamelCodingLogo} alt=\"CAMELCODING\" onClick={openCC}/>\r\n            </Box>\r\n\r\n            <Box sx={sx.contentHolder}>\r\n                <Typography sx={sx.text}>blockchain platform by:</Typography>\r\n                <img src={GalaxisLogo} alt=\"GALAXIS\" onClick={openGalaxisWebsite}/>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Footer","import { ThemeProvider } from '@emotion/react';\r\nimport { Box } from '@mui/material';\r\nimport { BrowserRouter, Route, Routes,HashRouter, Router } from 'react-router-dom';\r\nimport './App.css';\r\nimport routes from './routes/routes';\r\nimport theme from './theme/theme';\r\nimport Web3Manager from './Web3Manager.jsx/Web3Manager';\r\nimport { ToastContainer } from 'react-toast';\r\nimport Footer from './components/Footer';\r\nconst sx = {\r\n  root: {\r\n    minHeight: '100vh',\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <Web3Manager>\r\n      <HashRouter basename='/'>\r\n        <Box sx={sx.root} color={theme.palette.background} className=\"base-div\">\r\n            <Routes>\r\n              {routes.map(({ path, component, exact }) => (\r\n                <Route key={path} path={path} element={component} exact={exact} />\r\n              ))}\r\n            </Routes>\r\n            <ToastContainer position='bottom-right' delay={4000} className=\"toast\" />\r\n            <Footer />\r\n        </Box>\r\n      </HashRouter>\r\n    </Web3Manager>\r\n  </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport { render } from 'react-dom';\r\n\r\nconst root = document.getElementById(\"root\");\r\nrender(<App />, root);\r\n\r\n"],"sourceRoot":""}