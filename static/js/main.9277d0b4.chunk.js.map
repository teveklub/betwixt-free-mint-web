{"version":3,"sources":["assets/images/banner.png","context/Web3Ctx.js","hooks/useWeb3Ctx.js","Views/Burn/components/NtfList.jsx","components/Counter.jsx","Views/Burn/components/SelectedImageHolder.jsx","assets/images/mask.jpg","utils/contract.js","utils/index.js","utils/zoom2.js","utils/abi/constants/chain.js","utils/abi/constants/addresses.js","hooks/useContract.js","config/config.js","components/LoadingSpinner.jsx","Views/Burn/components/BurnSection.jsx","Views/Burn/components/PendingBurn.jsx","Views/Burn/components/SuccesBurn.jsx","assets/images/tree.png","assets/images/banner.svg","components/Header.jsx","assets/images/logos/Galaxis.svg","assets/images/logos/CC.svg","components/Footer.jsx","Api.js","Views/Burn/Burn.jsx","routes/routes.js","theme/theme.js","Web3Manager.jsx/Web3Manager.jsx","App.jsx","index.js"],"names":["createContext","useWeb3Ctx","useContext","Web3Ctx","sx","p","width","height","display","justifyContent","alignContent","alignItems","backgroundColor","root","flexWrap","gap","maxWidth","minWidth","maxHeight","overflow","imgHolder","cursor","placeHolder","border","selected","outline","NtfList","metadatas","selectMeta","useState","undefined","selectedId","setSelectedId","className","map","item","index","attributes","trait_type","tokenId","onClick","src","image","alt","BP1","flexDirection","placeholder","SelectedImageHolder","selectedNft","handleBurn","Typography","variant","Button","disabled","getContract","address","ABI","library","account","value","getAddress","isAddress","AddressZero","Error","Contract","getSigner","connectUnchecked","getProviderOrSigner","getTokenUri","tokenUri","fetch","then","res","json","catch","err","console","error","metadata","id","zoomFetchTokenUris","contract","zoom2","balanceOf","nt","ZoomLibraryInstance","Zoom","use_reference_calls","calls","i","tId","addMappingCountCall","mapAndParams","push","tUri","addType5Call","ZoomQueryBinary","getZoomCall","combine","combinedResult","resultsToCache","tokenIds","decodeCall","toString","tokenURI","newMetadata","length","promises","Promise","resolve","time","all","timeEnd","sort","a","b","Number","SupportedChainId","ZOOM_2_ADDRESSES","useZoom2Contract","addressOrAddressMap","withSignerIfPossible","deployedLibrary","defaultProvider","ethersProvider","chainId","isCorrectNetwork","defaultChainId","useMemo","provider","useContract","ZOOM2_ABI","envConfig","DEPLOYED_NTW_NAME","DEPLOYED_CHAIN_ID","INFURA_ID","FORTMATIC_KEY","RPC_URL","API_URL","ETHERSCAN_URL","OPENSEA_URL","PREVIEW_URL","AWS_URL","AGGREGATOR_URL","EC_TOKEN_ADDRESS","PHOENIX_CONTRACT_ADDRESS","CROSSMINT_CLIENT_ID","CROSSMINT_ENV","TOKEN_CONTRACT","config","OPENSEA_COLLECTION","LoadingSpinner","style","margin","marginBottom","position","top","bottom","right","left","contentHolder","content","button","mt","BurnSection","handleSubmit","setStatusText","setselectedNft","onboard","handleConnect","tokenMetas","setTokenMetas","loading","setLoading","zoomContract","tokenAddress","useEffect","token","abi","getTokens","metas","log","Box","window","open","PendingBurn","qrCodeBox","linkHolders","opacityColor","color","SuccesBurn","loaded","setLoaded","opacity","onLoad","responseObject","handlePlay","size","bgColor","fgColor","mb","text","m","Header","statusText","banner","columnGap","rowGap","fontFamily","textTransform","fontSize","Footer","CamelCodingLogo","GalaxisLogo","updateToken","body","reject","axios","put","headers","response","data","e","minHeight","headerHolder","title","subTitle","bannerMintedPage","counterHolder","pending","Burn","Date","activeTab","setActiveTab","burnPending","setburnPending","setNewMetadata","ethers","signMessage","message","ethereum","send","signer","signature","obj","updatedMetadata","toast","routes","path","component","exact","COLORS","theme","createTheme","typography","pageTitle","textAlign","fontWeight","lineHeight","pageTitleDescription","counterNumber","boxText","share","textDecoration","components","MuiButton","styleOverrides","grayButton","padding","borderRadius","orangeFilledButton","palette","primary","main","background","weight","container","Web3Manager","children","setOnboard","setAddress","wallet","setWallet","setEthersProvider","setChainId","setNetworkName","initDone","setInitDone","hash","location","substr","indexOf","initApp","ob","Onboard","networkId","darkMode","blockPollingInterval","walletSelect","wallets","walletName","rpcUrl","apiKey","rpc","appUrl","email","walletCheck","checkName","subscriptions","obWallet","providers","Web3Provider","sessionStorage","setItem","name","JsonRpcProvider","obAddress","network","savedWallet","getItem","subscribeNetwork","isWalletConnected","getNetwork","getState","stopPropagation","walletReset","walletSelected","Provider","handleDisconnect","removeItem","App","basename","element","delay","document","getElementById","render"],"mappings":"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","file":"static/js/main.9277d0b4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner.b35d4fd0.png\";","import { createContext } from 'react';\r\n\r\nexport default createContext({});\r\n","import { useContext } from \"react\"\r\nimport Web3Ctx from \"../context/Web3Ctx\"\r\n\r\nexport default function useWeb3Ctx() {\r\n    const context = useContext(Web3Ctx);\r\n    return context\r\n}","import { Box } from '@mui/system';\r\nimport React, { useState } from 'react';\r\n\r\nconst sx = {\r\n    root: {\r\n        // position: 'absolute',\r\n        // right: '60%',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignContent: 'flex-start',\r\n        gap: '25px',\r\n        maxWidth: '315px',\r\n        minWidth: '315px',\r\n        maxHeight: '400px',\r\n        overflow: 'auto',\r\n        p: '2px'\r\n    },\r\n    imgHolder: {\r\n        height: 'auto',\r\n        cursor: 'pointer',\r\n        width: '80px',\r\n        height: '80px',\r\n        '& img': {\r\n            width: '100%',\r\n            height: '100%',\r\n        },\r\n    },\r\n    placeHolder: {\r\n        width: '78px',\r\n        height: '78px',\r\n        border: '1px solid #628BA0',\r\n        backgroundColor: 'transparent',\r\n    },\r\n    selected: {\r\n        width: '80px',\r\n        height: '80px',\r\n        '& img':{\r\n            width: '100%',\r\n            height: '100%',\r\n            outline: '1px solid #FFF', \r\n        }\r\n    }\r\n};\r\n\r\nconst NtfList = ({ metadatas, selectMeta }) => {\r\n\r\n    const  [selectedId, setSelectedId] = useState(undefined);\r\n    return <Box sx={sx.root} className='nft-list'>\r\n        {metadatas.map((item, index) => {\r\n            if (item.attributes[0].trait_type === 'Mask') {\r\n                return (\r\n                    <Box key={index} sx={{...sx.imgHolder, ...(selectedId === item.tokenId && sx.selected)}} onClick={() => {selectMeta(metadatas[index]); setSelectedId(item.tokenId)}}>\r\n                        <img src={metadatas[index].image} alt='meta' />\r\n                    </Box>\r\n                );\r\n            }\r\n        })}\r\n    </Box>;\r\n};\r\n\r\nexport default NtfList;\r\n","import { Typography } from '@mui/material';\r\nimport { Box } from '@mui/system'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst BP1 = '@media (max-width: 600px)';\r\n\r\nconst MIN = 60000;\r\nconst HOUR = MIN * 60;\r\nconst DAY = HOUR * 24;\r\n\r\nconst INIT = { d: 0, h: 0, m: 0, s: 0 };\r\n\r\nconst sx = {\r\n    counterBoxHolder: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        gap: '35px',\r\n        mt: '20px'\r\n    },\r\n    counterBox: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '7px',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        alignContent: 'center'\r\n    },\r\n    counter: {\r\n        p: ' 13px',\r\n        width: '37px',\r\n        height: '37px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#594569',\r\n        [BP1]:{\r\n            p: ' 10px',\r\n            width: '25px',\r\n            height: '25px',\r\n        }\r\n    }\r\n}\r\n\r\nconst Counter = ({ date }) => {\r\n    const [values, setValues] = useState(INIT)\r\n\r\n    useEffect(() => {\r\n\r\n        const interval = setInterval(() => {\r\n            if (date != null) {\r\n                let dif = date.getTime() - new Date().getTime();\r\n                if (dif > 0) {\r\n                    setValues({\r\n                        d: Math.floor(dif / DAY),\r\n                        h: Math.floor((dif % DAY) / HOUR),\r\n                        m: Math.floor((dif % HOUR) / MIN),\r\n                    });\r\n                } else {\r\n                    setValues(INIT);\r\n                    clearInterval(interval);\r\n                    // if (onFinish) {\r\n                    //     onFinish()\r\n                    // }\r\n                }\r\n            } else {\r\n                setValues(INIT);\r\n                clearInterval(interval);\r\n            }\r\n        }, 500);\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [date]);\r\n\r\n    return (\r\n        <Box sx={sx.counterBoxHolder}>\r\n            <CounterCircle name=\"DAYS\" value={values.d} />\r\n            <CounterCircle name=\"HOURS\" value={values.h} />\r\n            <CounterCircle name=\"MINS\" value={values.m} />\r\n        </Box>\r\n    );\r\n};\r\n\r\n\r\nconst CounterCircle = ({ name, value, type }) => (\r\n    <Box sx={sx.counterBox}>\r\n        <Typography variant='pageTitleDescription'>\r\n            {name}\r\n        </Typography>\r\n        <Box sx={sx.counter}>\r\n            <Typography variant='counterNumber'>{value}</Typography>\r\n        </Box>\r\n    </Box>\r\n);\r\n\r\nexport default Counter","import { Button, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React from 'react'\r\n\r\nconst BP1 = '@media (max-width: 450px)';\r\nconst sx = {\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '50px',\r\n    },\r\n    imgHolder: {\r\n        '& img':{\r\n            width: '379px',\r\n            height: '379px',\r\n        [BP1]:{\r\n            width: '250px',\r\n            height: '250px',\r\n        }\r\n        }\r\n    },\r\n    placeholder:{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n        width: '377px',\r\n        height: '377px',\r\n        border: '1px solid #628BA0',\r\n        [BP1]:{\r\n            width: '250px',\r\n            height: '250px',\r\n        }\r\n    }\r\n}\r\nconst SelectedImageHolder = ({ selectedNft, handleBurn }) => {\r\n    const handleSubmit = () => {\r\n        handleBurn(selectedNft)\r\n    }\r\n\r\n    return (\r\n        <Box sx={sx.root}>\r\n            {selectedNft ?\r\n                <Box sx={sx.imgHolder}>\r\n                    <img src={selectedNft.image} alt=\"\" />\r\n                </Box> :\r\n                <Box sx={sx.placeholder}>\r\n                    <Typography variant='boxText'>\r\n                        SELECT NFT TO BURN\r\n                    </Typography>\r\n                </Box>\r\n            }\r\n\r\n            <Button variant='grayButton' disabled={selectedNft ? false : true} onClick={handleSubmit}>\r\n                BURN\r\n            </Button>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SelectedImageHolder","export default __webpack_public_path__ + \"static/media/mask.2a9a7a9f.jpg\";","import { getAddress } from '@ethersproject/address'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport { Contract } from '@ethersproject/contracts'\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value) {\r\n    try {\r\n        return getAddress(value)\r\n    } catch {\r\n        return false\r\n    }\r\n}\r\n\r\n// account is not optional\r\nfunction getSigner(library, account) {\r\n    return library.getSigner(account).connectUnchecked();\r\n}\r\n\r\n// account is optional\r\nfunction getProviderOrSigner(library, account) {\r\n    return account ? getSigner(library, account) : library\r\n}\r\n\r\n// account is optional\r\nexport function getContract(address, ABI, library, account) {\r\n    if (!isAddress(address) || address === AddressZero) {\r\n        throw Error(`Invalid 'address' parameter '${address}'.`)\r\n    }\r\n\r\n    return new Contract(address, ABI, getProviderOrSigner(library, account))\r\n}\r\n\r\n","export { getContract } from \"./contract\"\r\n// export { zoomFetchTokenUris } from \"./zoom2\"\r\n\r\nexport const getTokenUri = async (tokenId, tokenUri) => {\r\n    //console.log(tokenUri)\r\n    const metadata = await fetch(tokenUri)// await fetch(`https://toddlerpillars-metadata-server.herokuapp.com/api/metadata/${tokenId % 100}/${tokenId}`)\r\n        .then((res) => res.json())\r\n        .catch((err) => console.error(err));\r\n    if (metadata) {\r\n        if (!metadata.tokenId) {\r\n            metadata.tokenId = tokenId;\r\n        }\r\n        if (!metadata.id) {\r\n            metadata.id = tokenId;\r\n        }\r\n        return metadata;\r\n    } else\r\n        // Fetching metadata fail, return an object anyway\r\n        return {\r\n            tokenId: tokenId,\r\n            id: tokenId\r\n        }\r\n};\r\n","import { Zoom } from 'zoom-next';\r\nimport { getTokenUri } from '.';\r\n\r\nexport const zoomFetchTokenUris = async (contract, zoom2, address) => {\r\n    // console.log(contract, zoom2, address);\r\n    const nt = await contract.balanceOf(address);\r\n\r\n    // console.log('number of tokens', nt);\r\n    \r\n    const ZoomLibraryInstance = new Zoom({ use_reference_calls: true });\r\n    if (nt > 0) {\r\n        const calls = [];\r\n        for (let i = 0; i < nt; i += 1) {\r\n            const tId = ZoomLibraryInstance.addMappingCountCall(\r\n                contract,\r\n                ['tokenOfOwnerByIndex', [address, i]],\r\n                'tokenOfOwnerByIndex(address,uint256) returns (uint256)',\r\n                [{ contract: contract, mapAndParams: ['tokenURI(uint256)', [i]] }],\r\n            );\r\n            calls.push(tId);\r\n                // console.log(calls)\r\n            const tUri = ZoomLibraryInstance.addType5Call(\r\n                contract,\r\n                ['tokenURI(uint256)', [i]],\r\n                'tokenURI(uint256) returns (string)',\r\n            );\r\n            calls.push(tUri);\r\n        }\r\n        const ZoomQueryBinary = ZoomLibraryInstance.getZoomCall();\r\n        const combinedResult = await zoom2.combine(ZoomQueryBinary);\r\n        ZoomLibraryInstance.resultsToCache(combinedResult, ZoomQueryBinary);\r\n        const tokenIds = [];\r\n        for (let i = 0; i < nt * 2; i += 2) {\r\n            const id = ZoomLibraryInstance.decodeCall(calls[i]).toString();\r\n            const tokenURI = ZoomLibraryInstance.decodeCall(calls[i + 1]).toString();\r\n            tokenIds.push({ id, tokenURI });\r\n        }\r\n\r\n        // console.log(tokenIds)\r\n\r\n        const newMetadata = [];\r\n\r\n        if (tokenIds.length > 0) {\r\n            const promises = [];\r\n            for (var i = 0; i < tokenIds.length; i++) {\r\n                const { id, tokenURI } = tokenIds[i];\r\n                promises.push(new Promise(async (resolve) => {\r\n                    const metadata = await getTokenUri(id, tokenURI);\r\n                    newMetadata.push(metadata);\r\n                    resolve();\r\n                }))\r\n            }\r\n\r\n            console.time(`fetching tokenUri`)\r\n            await Promise.all(promises)\r\n            console.timeEnd(`fetching tokenUri`)\r\n        }\r\n\r\n        return newMetadata.sort((a, b) => {\r\n            return Number(a.tokenId) - Number(b.tokenId)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getTokenIds = async (contract, zoomContract, ownerAddress) => {\r\n\r\n    const numberOfTokens = await contract.balanceOf(ownerAddress).catch(e=>{return 0});\r\n\r\n    // console.log('number of tokens', numberOfTokens);\r\n\r\n    const ZoomLibraryInstance = new Zoom();\r\n    const tokenIds = [];\r\n    const item_identifiers = [];\r\n    let callNum = 0;\r\n\r\n    for (let i = 0; i < numberOfTokens; i++) {\r\n        // request the token ID\r\n        const tokenIdCall = ZoomLibraryInstance.addCall(\r\n            // the contract we're calling\r\n            contract,\r\n            // the method that is returing our ID\r\n            [\"tokenOfOwnerByIndex\", [ownerAddress, i]],\r\n            // signature used to decode the result\r\n            \"tokenOfOwnerByIndex(address,uint256) returns (uint256)\"\r\n            // array of next method calls that will use the result of this current call\r\n        );\r\n        item_identifiers.push(tokenIdCall);\r\n        callNum++;\r\n    }\r\n\r\n    // Prepare the binary call\r\n    const ZoomQueryBinary = ZoomLibraryInstance.getZoomCall();\r\n    console.time(`zoomCall_TokenIds_${contract.address}`);\r\n    const combinedResult = await zoomContract.combine(ZoomQueryBinary);\r\n    console.timeEnd(`zoomCall_TokenIds_${contract.address}`);\r\n    ZoomLibraryInstance.resultsToCache(combinedResult, ZoomQueryBinary);\r\n\r\n    for (let i = 0; i < callNum; i++) {\r\n        let tokenId = ZoomLibraryInstance.decodeCall(item_identifiers[i]).toString();\r\n        tokenIds.push({cardID:Number(tokenId)});\r\n    }\r\n    return tokenIds;\r\n};\r\n","export const SupportedChainId = {\r\n    MAINNET: 1,\r\n    RINKEBY: 4,\r\n    GOERLI: 5,\r\n    POLYGON: 137\r\n}","import { SupportedChainId } from './chain'\r\n\r\nexport const ZOOM_2_ADDRESSES = {\r\n    [SupportedChainId.MAINNET]: \"0x7cdF091AF6a9ED75E3192500d3e5BB0f63e22Dea\",\r\n    [SupportedChainId.RINKEBY]: \"0x491592F30D9a3d1887F486eA2A3c72ad82fAcF4D\",\r\n    [SupportedChainId.GOERLI]: '0xebC7d793d062371C11cB802e7D49eEAA0c30EB06'\r\n}\r\n","import useWeb3Ctx from './useWeb3Ctx';\r\nimport { useMemo } from 'react';\r\nimport { getContract } from '../utils/contract';\r\n\r\nimport { abi as ZOOM2_ABI } from '../utils/Zoom2.json';\r\n\r\nimport {\r\n    ZOOM_2_ADDRESSES\r\n} from '../utils/abi/constants/addresses';\r\n\r\n// returns null on errors\r\nexport function useContract(\r\n    addressOrAddressMap,\r\n    ABI,\r\n    withSignerIfPossible = true) {\r\n    const { defaultProvider: deployedLibrary, ethersProvider: library, address: account, chainId, isCorrectNetwork, defaultChainId } = useWeb3Ctx();\r\n\r\n    return useMemo(() => {\r\n        if (!isCorrectNetwork && (!deployedLibrary || !defaultChainId)) return null\r\n        if (isCorrectNetwork && (!addressOrAddressMap || !ABI || !library || !chainId)) return null\r\n        let address\r\n        if (typeof addressOrAddressMap === 'string') address = addressOrAddressMap\r\n        else address = addressOrAddressMap[isCorrectNetwork ? chainId : defaultChainId]\r\n        if (!address) return null\r\n        let provider\r\n        if (isCorrectNetwork) provider = library\r\n        else provider = deployedLibrary\r\n        try {\r\n            return getContract(address, ABI, provider, withSignerIfPossible && account ? account : undefined)\r\n        } catch (error) {\r\n            console.error('Failed to get contract', error)\r\n            return null\r\n        }\r\n    }, [addressOrAddressMap, ABI, library, chainId, withSignerIfPossible, account, deployedLibrary, isCorrectNetwork])\r\n}\r\n\r\n\r\nexport function useZoom2Contract() {\r\n    return useContract(ZOOM_2_ADDRESSES, ZOOM2_ABI, false)\r\n}\r\n/* export function useEcContract() {\r\n    return useContract(EC_ADDRESSES, EC_ABI, false)\r\n}\r\nexport function useGeneticatContract() {\r\n    return useContract(GENETICATS_ADDRESSES, GENETICATS_ABI, true)\r\n} */","const dev = {\r\n    DEPLOYED_NTW_NAME: 'goerli',\r\n    DEPLOYED_CHAIN_ID: 5,\r\n    INFURA_ID: 'cae2aed2f50a4087af91b000cf05be4c',\r\n    FORTMATIC_KEY: 'pk_test_DD2BBA8AAA1D4FED',\r\n    RPC_URL: 'https://goerli.infura.io/v3/cae2aed2f50a4087af91b000cf05be4c',\r\n    ETHERSCAN_URL: 'https://goerli.etherscan.io',\r\n    OPENSEA_URL: 'https://testnets.opensea.io/',\r\n    API_URL: 'https://braves-metadata-staging.herokuapp.com/api',\r\n    PREVIEW_URL: 'https://ssp-server-v2.herokuapp.com/api/project-session',\r\n    AWS_URL:\r\n      'https://galaxis-backend-staging.s3.eu-central-1.amazonaws.com/media',\r\n  \r\n    AGGREGATOR_URL: 'https://nft-aggregator-rinkeby.herokuapp.com/token',\r\n    \r\n    CROSSMINT_CLIENT_ID: '7de2bbab-cec3-456b-a2e1-96bbd99cb8ad',\r\n    CROSSMINT_ENV: 'staging',\r\n    TOKEN_CONTRACT: '0x811Abc77F2aFc3b995548E9251A5469f93013Ab3'\r\n  };\r\n  \r\n  const prod = {\r\n    DEPLOYED_NTW_NAME: 'mainnet',\r\n    DEPLOYED_CHAIN_ID: 1,\r\n    INFURA_ID: 'a5e79e6ee9a14236b385e47849805596',\r\n    FORTMATIC_KEY: 'pk_live_FBFF1F05F2879F29',\r\n    RPC_URL: 'https://mainnet.infura.io/v3/0a0bbd3ce4ea4be5ad706514cf2cd8cc',\r\n    API_URL: 'https://braves-metadata-server.herokuapp.com/api',\r\n    ETHERSCAN_URL: 'https://etherscan.io/',\r\n    OPENSEA_URL: 'https://opensea.io/',\r\n  \r\n    // API_URL: 'https://galaxis-backend.herokuapp.com',\r\n    PREVIEW_URL: 'https://launchpad-backend.herokuapp.com/api/project-session',\r\n    AWS_URL: 'https://galaxis-web.s3.amazonaws.com/media',\r\n  \r\n    AGGREGATOR_URL: 'https://nft-aggregator.herokuapp.com/token',\r\n  \r\n    EC_TOKEN_ADDRESS: '0x97ca7fe0b0288f5eb85f386fed876618fb9b8ab8',\r\n    PHOENIX_CONTRACT_ADDRESS: '0x55B3154Ad761405B0cdd27355943Eb808d40b5A1',\r\n\r\n    CROSSMINT_CLIENT_ID: 'b3f5189b-66fe-43d7-8295-c73f9fa3e3ef',\r\n    CROSSMINT_ENV: '',\r\n    TOKEN_CONTRACT: '0x2a3Bc72ed71DB2a27Cfe2Ba50aEcC692Fb04FcfF'\r\n  };\r\n  \r\n  const common = {\r\n    OPENSEA_COLLECTION: 'https://api.opensea.io/api/v1/collection',\r\n  };\r\n  \r\n  // if use npm/yarn start,  NODE_ENV = \"development\"\r\n  // if use npm/yarn build,  NODE_ENV = \"production\"\r\n  let envConfig = prod; // process.env.NODE_ENV === \"development\" ? dev : prod\r\n  let config = { ...envConfig, ...common };\r\n  \r\n  export default config;\r\n  ","import React from 'react'\r\nimport './Spinner.css'\r\n\r\nconst LoadingSpinner = () => {\r\n    return (\r\n        <div className=\"counter-circle\" style={{ margin: \"0 auto\", marginBottom: \"10px\" }}>\r\n            <div className=\"counter-rotary-holder\" id='txRotator'>\r\n                <div className=\"counter-rotary-item\" />\r\n            </div>\r\n            <div className=\"counter-shadow\">\r\n                <div className=\"counter-content-holder\">\r\n                    <div className=\"counter-text\">LOADING</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingSpinner","import { Box, Button, Typography } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport NtfList from './NtfList'\r\nimport mask from '../../../assets/images/mask.jpg';\r\nimport SelectedImageHolder from './SelectedImageHolder';\r\nimport { zoomFetchTokenUris } from '../../../utils/zoom2'\r\nimport { useZoom2Contract } from '../../../hooks/useContract'\r\nimport { Contract } from 'ethers';\r\nimport useWeb3Ctx from '../../../hooks/useWeb3Ctx';\r\nimport config from '../../../config/config';\r\nimport ABI from '../../../utils/abi/Token.json'\r\nimport { getTokenUri } from '../../../utils';\r\nimport LoadingSpinner from '../../../components/LoadingSpinner';\r\n\r\nconst BP1 = '@media (max-width: 1024px)';\r\n\r\nconst METADATA = [\r\n    {\r\n        id: 1,\r\n        image: mask\r\n    },\r\n    {\r\n        id: 1,\r\n        image: mask\r\n    },\r\n    {\r\n        id: 1,\r\n        image: mask\r\n    }\r\n]\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    contentHolder: {\r\n        width: '90vw',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        gap: '25px',\r\n        '&:after': {\r\n            content: '\"\"',\r\n            width: '300px',\r\n            [BP1]: {\r\n                content: 'none'\r\n            }\r\n        },\r\n        [BP1]: {\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n\r\n        }\r\n    },\r\n    button:{ \r\n        mt: '64px'\r\n    }\r\n}\r\n\r\nconst BurnSection = ({ handleSubmit, setStatusText, setselectedNft, selectedNft }) => {\r\n    const { onboard, handleConnect, address, ethersProvider } = useWeb3Ctx();\r\n\r\n    const [tokenMetas, setTokenMetas] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const zoomContract = useZoom2Contract();\r\n    const tokenAddress = config.TOKEN_CONTRACT;\r\n    const selectMeta = (metadata) => {\r\n        setselectedNft(metadata)\r\n        setStatusText(\"NFT SELECTED\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (address) {\r\n            setLoading(true)\r\n            let token;\r\n            if (config.TOKEN_CONTRACT) {\r\n                token = new Contract(config.TOKEN_CONTRACT, ABI.abi, ethersProvider);\r\n\r\n\r\n                if (!token) {\r\n                    console.error('Token contract not found on address', tokenAddress);\r\n                    return;\r\n                }\r\n                getTokens(token);\r\n            }\r\n\r\n        }\r\n    }, [address]);\r\n    // const getTokens = async (token, address) => {\r\n    //     const balanceOf = await token.balanceOf(address);\r\n\r\n    //     console.log(balanceOf.toNumber());\r\n\r\n    //     for (let index = 0; index < balanceOf.toNumber(); index++) {\r\n    //         const tokenId = await token.tokenOfOwnerByIndex(address, index);\r\n\r\n    //         const tokenUri = await token.tokenURI(tokenId);\r\n    //         getTokenUri(tokenId.toNumber(), tokenUri).then((response) => {\r\n    //             setTokenMetas(oldArray => [...oldArray, response]);\r\n    //         })\r\n    //     }\r\n\r\n\r\n    //     setLoading(false)\r\n    // }\r\n    const getTokens = async (token) => {\r\n        setLoading(true);\r\n\r\n        const metas = await zoomFetchTokenUris(\r\n            token,\r\n            zoomContract,\r\n            address\r\n        );\r\n        console.log(metas)\r\n\r\n        if (metas) {\r\n            // console.log('TOKE META',metas);\r\n            setTokenMetas(metas);\r\n        } else {\r\n            setTokenMetas([]);\r\n            setStatusText('')\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleOpenseaNavgiation = () => {\r\n        window.open('https://opensea.io/collection/betwixt-braves?search[sortAscending]=true&search[sortBy]=UNIT_PRICE&search[stringTraits][0][name]=Version&search[stringTraits][0][values][0]=Masked&search[toggles][0]=BUY_NOW', '_blank')\r\n    }\r\n    return (\r\n        <Box sx={sx.root}>\r\n            {loading ?\r\n                <LoadingSpinner />\r\n                :\r\n                tokenMetas.length > 0 ?\r\n                    <Box sx={sx.contentHolder}>\r\n\r\n                        <NtfList metadatas={tokenMetas} selectMeta={selectMeta} />\r\n                        <SelectedImageHolder selectedNft={selectedNft} handleBurn={handleSubmit} />\r\n\r\n                    </Box>\r\n                    :\r\n                    <>\r\n                        <Typography variant='boxText'>Unfortunately you do not have any NFTs to burn!</Typography>\r\n                        <Button sx={sx.button} variant='grayButton' onClick={handleOpenseaNavgiation}>BUY ON OPENSEA</Button>\r\n                    </>\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BurnSection","import React from 'react'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Box } from '@mui/material'\r\n\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        top: '-50px',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '10px'\r\n    }\r\n}\r\n\r\n\r\nconst PendingBurn = () => {\r\n    return (\r\n        <Box sx={sx.root}>\r\n            <Typography variant=\"counterNumber\">BURNING MASK</Typography>\r\n            <Typography variant='pageTitleDescription'>PREPARE FOR THE LIGHT</Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PendingBurn","import { Box, Button, Typography } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport QRCode from 'react-qr-code';\r\nimport treeImg from '../../../assets/images/tree.png'\r\nimport LoadingSpinner from '../../../components/LoadingSpinner';\r\n\r\nconst BP1 = '@media (max-width: 450px)';\r\n\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '50px',\r\n    },\r\n    imgHolder: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        '& img': {\r\n            width: '379px',\r\n            height: '379px',\r\n\r\n            [BP1]: {\r\n                width: '250px',\r\n                height: '250px',\r\n            }\r\n        }\r\n    },\r\n    loading: {\r\n        position: 'absolute',\r\n        top: '30%',\r\n        left: '0',\r\n        right: '0',\r\n        bottom: '0',\r\n        margin: 'auto',\r\n    },\r\n    qrCodeBox: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '12px',\r\n        alignItems: 'center',\r\n    },\r\n    linkHolders: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '32px'\r\n    },\r\n    opacityColor: {\r\n        color: '#ffffff99'\r\n    }\r\n}\r\nconst SuccesBurn = ({ metadata }) => {\r\n    const [loaded, setLoaded] = useState(false)\r\n    const handlePlay = (metadata) => {\r\n        window.open(`${metadata.responseObject}`, '_blank')\r\n    }\r\n    const share = () => {\r\n        window.open('https://twitter.com/intent/tweet?text=I%27ve%20just%20ascended%20my%20Betwixt%20Brave%20to%20play%20the%20game.%20Ascend%20yours%20braves.betwixt.life%20No%20mask%20to%20ascend?%20Buy%20a%20mask%20on%20OS%20https://opensea.io/collection/betwixt-braves%20@BetwixtNFT', '_blank')\r\n    }\r\n\r\n    const handleOpenseaNavgiation = () => {\r\n        window.open('https://opensea.io/collection/betwixt-braves?search[sortAscending]=true&search[sortBy]=UNIT_PRICE&search[stringTraits][0][name]=Version&search[stringTraits][0][values][0]=Masked&search[toggles][0]=BUY_NOW', '_blank')\r\n    }\r\n    return (\r\n        <Box sx={sx.root}>\r\n            <Box sx={sx.imgHolder}>\r\n                <img src={metadata.image} alt='world' style={{ opacity: loaded ? '1' : '0' }}\r\n                    onLoad={() => { setLoaded(true) }}\r\n                />\r\n                {!loaded &&\r\n                    <Box sx={sx.loading}>\r\n                        <LoadingSpinner />\r\n                    </Box>}\r\n            </Box>\r\n            <Button variant='grayButton' onClick={()=>handlePlay(metadata)}>Play the game</Button>\r\n            <Box sx={sx.qrCodeBox}>\r\n                <Typography sx={sx.opacityColor} variant='pageTitleDescription'>IF you are on desktop, scan this code</Typography>\r\n                <QRCode value={metadata.responseObject} size={120} bgColor='#000' fgColor='#FFF'/>\r\n            </Box>\r\n            <Box sx={sx.linkHolders}>\r\n                <Typography variant=\"share\" onClick={share}>SHARE ON TWITTER</Typography>\r\n                <Typography sx={sx.opacityColor} variant=\"share\" onClick={handleOpenseaNavgiation}>BUY MORE MASKS ON OPENSEA</Typography>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SuccesBurn","export default __webpack_public_path__ + \"static/media/tree.d4f24a01.png\";","export default __webpack_public_path__ + \"static/media/banner.1f050d53.svg\";","import { Box } from '@mui/system'\r\nimport React from 'react'\r\nimport banner from '../assets/images/banner.svg'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nconst BP1 = '@media (max-width: 450px)';\r\n\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        top: '0',\r\n        left: 0,\r\n        right: 0,\r\n        width: '100%',\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        [BP1]:{\r\n            mb: '20px'\r\n        }\r\n    },\r\n    imgHolder: {\r\n        maxWidth: '570px',\r\n        margin: 'auto',\r\n        'img': {\r\n            width: '100%'\r\n        }\r\n    },\r\n    text: {\r\n        margin: 'auto',\r\n        m: '12px auto 24px auto',\r\n        color: '#ffffff99'\r\n    }\r\n}\r\nconst Header = ({ statusText }) => {\r\n    return (\r\n        <Box sx={sx.root}>\r\n            <Box sx={sx.imgHolder}>\r\n                <img src={banner} alt=\"banner\" />\r\n            </Box>\r\n            <Typography variant=\"pageTitle\">Braves Burn Event</Typography>\r\n            {statusText && <Typography variant='pageTitleDescription' sx={sx.text}>\r\n                {statusText}\r\n            </Typography>}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/Galaxis.2ce1e236.svg\";","export default __webpack_public_path__ + \"static/media/CC.85a6dfa4.svg\";","import { Box } from '@mui/system'\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography'\r\nimport GalaxisLogo from '../assets/images/logos/Galaxis.svg'\r\nimport CamelCodingLogo from '../assets/images/logos/CC.svg'\r\n\r\nconst BP1 = '@media (max-width: 600px)';\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        bottom: '0',\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto 0 auto',\r\n        p: '35px 10px 25px 10px',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        columnGap: '80px',\r\n        rowGap: '15px',\r\n        [BP1]: {\r\n            justifyContent: 'center',\r\n        }\r\n    },\r\n    contentHolder: {\r\n        display: 'flex',\r\n        gap: '5px',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        '& img': {\r\n            maxHeight: '32px',\r\n            height: '100%',\r\n            cursor: 'pointer',\r\n            [BP1]:{\r\n                maxHeight: '26px'\r\n            }\r\n        }\r\n    },\r\n    text: {\r\n        fontFamily: 'Jotia-Regular',\r\n        textTransform: 'uppercase',\r\n        color: '#ffffff99',\r\n        fontSize: '12px',\r\n        width: 'fit-content',\r\n        [BP1]: {\r\n            fontSize: '10px'\r\n        }\r\n    }\r\n}\r\nconst Footer = () => {\r\n\r\n    const openCC = () => {\r\n        window.open('https://camelcoding.com/', '_blank')\r\n    }\r\n    const openGalaxisWebsite = () => {\r\n        window.open('https://galaxis.xyz', '_blank')\r\n    }\r\n\r\n    return (\r\n        <Box sx={sx.root}>\r\n            <Box sx={sx.contentHolder}>\r\n                <Typography sx={sx.text}>powered by:</Typography>\r\n                <img src={CamelCodingLogo} alt=\"CAMELCODING\" onClick={openCC}/>\r\n            </Box>\r\n\r\n            <Box sx={sx.contentHolder}>\r\n                <Typography sx={sx.text}>blockchain platform by:</Typography>\r\n                <img src={GalaxisLogo} alt=\"GALAXIS\" onClick={openGalaxisWebsite}/>\r\n            </Box>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Footer","import axios from \"axios\";\r\nimport config from \"./config/config\";\r\n\r\nexport const updateToken = async (tokenId, body) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.put(`${config.API_URL}/metadata/update`, body,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            .then((response) => {\r\n                resolve(response.data)\r\n            })\r\n            .catch(e => {\r\n                reject(e);\r\n            })\r\n            ;\r\n    });\r\n};","import { Button, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { ethers } from 'ethers';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Banner from '../../components/Banner';\r\nimport useWeb3Ctx from '../../hooks/useWeb3Ctx';\r\nimport abi from '../../contracts/SaleContract.json';\r\nimport Counter from '../../components/Counter';\r\nimport BurnSection from './components/BurnSection';\r\nimport PendingBurn from './components/PendingBurn';\r\nimport SuccesBurn from './components/SuccesBurn';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport { updateToken } from '../../Api';\r\nimport { toast } from 'react-toast';\r\n\r\nconst BP1 = '@media (max-width: 450px)';\r\n\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        minHeight: '100vh',\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    headerHolder: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center'\r\n    },\r\n    title: {\r\n        mb: '20px',\r\n        [BP1]: {\r\n            mt: '0px !important'\r\n        }\r\n    },\r\n    subTitle: {\r\n        marginBottom: '100px',\r\n    },\r\n    bannerMintedPage: {\r\n        mt: '-45px',\r\n        [BP1]: {\r\n            mt: 0\r\n        }\r\n    },\r\n    button: {\r\n    },\r\n    counterHolder: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        minHeight: 'calc(100vh - 300px)',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        justifyContent:'center',\r\n        gap: '64px',\r\n    },\r\n    pending: {\r\n        margin: '0 auto'\r\n    },\r\n    text: {\r\n        fontSize: '18px',\r\n\r\n    }\r\n};\r\nconst DATE = new Date('2022-10-05T15:00:00.000Z');\r\nconst Burn = () => {\r\n    const { onboard, handleConnect, address, ethersProvider } = useWeb3Ctx();\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [burnPending, setburnPending] = useState(false);\r\n    const [statusText, setStatusText] = useState(undefined);\r\n    const [selectedNft, setselectedNft] = useState(undefined);\r\n    const [newMetadata, setNewMetadata] = useState(undefined);\r\n    const saleContract = new ethers.Contract(\r\n        '0x6DbD13D198944Bc49B983E146a9dF6bfA871CA13',\r\n        abi.abi,\r\n        ethersProvider\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (address && address !== null) {\r\n            setActiveTab(1);\r\n            setStatusText('NFT DETECTED')\r\n        } else {\r\n            setActiveTab(0);\r\n        }\r\n        setselectedNft(undefined)\r\n    }, [address]);\r\n\r\n\r\n    const signMessage = async (message) => {\r\n        try {\r\n            console.log(message)\r\n            if (!window.ethereum) {\r\n                throw new Error('No crypto wallet found');\r\n            }\r\n            await window.ethereum.send(\"eth_requestAccounts\");\r\n            const signer = ethersProvider.getSigner();\r\n            const signature = await signer.signMessage(message)\r\n            const address = await signer.getAddress();\r\n\r\n            return {\r\n                message, signature, address\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    const handleSubmit = (selectedNft) => {\r\n        setburnPending(true)\r\n        console.log(selectedNft);\r\n        // let dna = selectedNft;\r\n        //SIGNATURE\r\n        signMessage(`{tokenID: ${selectedNft.tokenId}}`).then((response) => {\r\n            if (response) {\r\n                setActiveTab(2);\r\n                console.log(response);\r\n                const obj = {\r\n                    \"address\": response.address,\r\n                    \"message\": `{tokenID: ${selectedNft.tokenId}}`,\r\n                    \"signature\": response.signature\r\n                }\r\n                console.log(obj);\r\n                updateToken(selectedNft.tokenId, obj).then((response) => {\r\n                    if (response.message === 'Success') {\r\n                        setNewMetadata(response.updatedMetadata);\r\n                        setburnPending(false)\r\n                    }\r\n                }).catch(e => {\r\n                    toast.error(e)\r\n                    console.log(e)\r\n                });\r\n            } else {\r\n                toast.error('Something went wrong!');\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        if (!burnPending && newMetadata) {\r\n            setStatusText('CONGRATS')\r\n            setActiveTab(3);\r\n        }\r\n    }, [burnPending, newMetadata])\r\n\r\n    return (\r\n        <Box sx={sx.root} >\r\n            <Header statusText={statusText} />\r\n            {activeTab === 0 &&\r\n                <>\r\n                    <Box sx={sx.counterHolder}>\r\n                        <Typography variant=\"pageTitleDescription\" sx={sx.text}>\r\n                            BURN YOUR MASK TO EXPERIENCE THE BETWIXT GAME\r\n                        </Typography>\r\n                        {/* <Counter date={DATE} /> */}\r\n\r\n                        <Button variant='grayButton' onClick={handleConnect} sx={sx.button}>Connect Wallet</Button>\r\n                    </Box>\r\n                </>\r\n            }\r\n            {activeTab === 1 &&\r\n                <BurnSection handleSubmit={handleSubmit} setStatusText={setStatusText} setselectedNft={setselectedNft} selectedNft={selectedNft} />\r\n            }\r\n            {activeTab === 2 && <PendingBurn />}\r\n            {activeTab === 3 && <SuccesBurn metadata={newMetadata} />}\r\n            <Footer />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Burn","import Burn from \"../Views/Burn/Burn\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    component: <Burn/>,\r\n    exact: true,\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","import { createTheme } from '@mui/material';\r\nconst BP1 = '@media (max-width: 600px)';\r\n\r\nconst COLORS = {\r\n    primaryColor: '#FFFFFF',\r\n    background: '#151019',\r\n    gray: '#363F59',\r\n};\r\n\r\nconst theme = createTheme({\r\n    typography: {\r\n        pageTitle: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Schnyder-M-App',\r\n            fontWeight: 300,\r\n            fontSize: '64px',\r\n            lineHeight: '77px',\r\n            [BP1]: {\r\n                fontSize: '42px',\r\n                lineHeight: '53px',\r\n            }\r\n        },\r\n        pageTitleDescription: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Jotia-Regular',\r\n            fontSize: '14px',\r\n            lineHeight: '17px',\r\n            textTransform: 'uppercase',\r\n            [BP1]: {\r\n                fontSize: '12px',\r\n                lineHeight: '14px',\r\n            }\r\n        },\r\n        counterNumber: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Jotia-Regular',\r\n            fontSize: '32px',\r\n            textTransform: 'uppercase',\r\n            [BP1]: {\r\n                fontSize: '24px',\r\n            }\r\n        },\r\n        boxText: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Jotia-Regular',\r\n            fontSize: '24px',\r\n            textTransform: 'uppercase',\r\n            [BP1]: {\r\n                fontSize: '18px',\r\n            } \r\n        },\r\n        share: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Jotia-Regular',\r\n            fontSize: '16px',\r\n            textTransform: 'uppercase',\r\n            cursor: 'pointer',\r\n            textDecoration: 'underline',\r\n            [BP1]: {\r\n                fontSize: '14px',\r\n            } \r\n        }\r\n    },\r\n    components: {\r\n        MuiButton: {\r\n            styleOverrides: {\r\n                grayButton: {\r\n                    color: COLORS.primaryColor,\r\n                    padding: '18px',\r\n                    fontFamily: 'Jotia-Regular',\r\n                    fontSize: '22px',\r\n                    lineHeight: '29px',\r\n                    textTransform: 'uppercase',\r\n                    backgroundColor: COLORS.gray,\r\n                    borderRadius: '4px',\r\n                    maxWidth: '292px',\r\n                    width: '100%',\r\n                    margin: '0 auto',\r\n                    '&:hover': {\r\n                        backgroundColor: COLORS.gray,\r\n                    },\r\n                    [BP1]: {\r\n                        fontSize: '15px',\r\n                        lineHeight: '22px',\r\n                        maxWidth: '220px',\r\n                        padding: '13px',\r\n                    }\r\n                },\r\n                orangeFilledButton: {\r\n\r\n                    padding: '10px 10px',\r\n                    fontFamily: 'poppins-semibold',\r\n                    fontSize: '14px',\r\n                    textTransform: 'uppercase',\r\n                    backgroundColor: '#FF692B',\r\n                    border: '2px solid #FF682B',\r\n                    borderRadius: '4px',\r\n                    maxWidth: '215px',\r\n                    width: '100%',\r\n                    margin: '0 auto',\r\n                    '&:hover': {\r\n                        backgroundColor: '#ff692bcc'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: COLORS.primaryColor,\r\n        },\r\n        background: {\r\n            background: COLORS.background,\r\n            error: {\r\n                main: '#EE1B11',\r\n            },\r\n        }\r\n    },\r\n});\r\n\r\nexport default theme;\r\n","import Onboard from \"bnc-onboard\";\r\nimport { ethers } from \"ethers\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport config from '../config/config';\r\nimport Web3Ctx from \"../context/Web3Ctx\";\r\n\r\nconst { DEPLOYED_NTW_NAME, DEPLOYED_CHAIN_ID, RPC_URL, FORTMATIC_KEY } = config;\r\nexport let ethersProviderVar = null;\r\nconst sx = {\r\n    root: {\r\n        display: \"flex\",\r\n        minHeight: \"100vh\",\r\n        height: \"100%\",\r\n        weight: \"100%\",\r\n        background: \"#FFF\",\r\n    },\r\n    container: {\r\n        textAlign: \"center\",\r\n        margin: \"auto\",\r\n    },\r\n};\r\n\r\n\r\n\r\nconst Web3Manager = ({ children }) => {\r\n    const [onboard, setOnboard] = useState(null);\r\n    const [address, setAddress] = useState(null);\r\n    const [wallet, setWallet] = useState(null);\r\n    const [ethersProvider, setEthersProvider] = useState(null);\r\n    const [chainId, setChainId] = useState(null);\r\n    const [networkName, setNetworkName] = useState(DEPLOYED_NTW_NAME);\r\n    const [initDone, setInitDone] = useState(false);\r\n    const hash = window.location.hash.substr(0, window.location.hash.indexOf('?'));\r\n\r\n    useEffect(() => {\r\n        // console.log('web3 manager mounted');\r\n        initApp();\r\n    }, []);\r\n\r\n\r\n    const initApp = async () => {\r\n        try {\r\n            // console.log(\"Initiating onboard\");\r\n            const ob = Onboard({\r\n                networkId: DEPLOYED_CHAIN_ID, // [Integer] The Ethereum network ID your Dapp uses.\r\n                darkMode: false,\r\n                blockPollingInterval: 12000,\r\n                walletSelect: {\r\n                    wallets: [\r\n                        { walletName: \"metamask\" },\r\n                        { walletName: \"coinbase\" },\r\n                        { walletName: \"trust\", rpcUrl: RPC_URL },\r\n                        { walletName: \"authereum\" },\r\n                        { walletName: \"wallet.io\", rpcUrl: RPC_URL },\r\n                        { walletName: \"atoken\" },\r\n                        {\r\n                            walletName: \"fortmatic\",\r\n                            apiKey: FORTMATIC_KEY,\r\n                        },\r\n                        {\r\n                            walletName: \"walletConnect\",\r\n                            rpc: {\r\n                                1: RPC_URL,\r\n                                4: RPC_URL,\r\n                                5: RPC_URL,\r\n                            },\r\n                        },\r\n                        { walletName: \"opera\" },\r\n                        { walletName: \"operaTouch\" },\r\n                        { walletName: \"torus\" },\r\n                        { walletName: \"status\" },\r\n                        { walletName: \"walletLink\", rpcUrl: RPC_URL },\r\n                        {\r\n                            walletName: \"trezor\",\r\n                            appUrl: \"ether.cards\",\r\n                            email: \"info@ether.cards\",\r\n                            rpcUrl: RPC_URL,\r\n                        },\r\n                        {\r\n                            walletName: \"ledger\",\r\n                            rpcUrl: RPC_URL,\r\n                        },\r\n                    ],\r\n                },\r\n                walletCheck: [\r\n                    { checkName: \"derivationPath\" },\r\n                    { checkName: \"accounts\" },\r\n                    { checkName: \"connect\" },\r\n                    { checkName: \"network\" },\r\n                ],\r\n                subscriptions: {\r\n                    wallet: (obWallet) => {\r\n                        // console.log('OB wallet', obWallet);\r\n                        if (obWallet.provider) {\r\n                            setWallet(obWallet);\r\n                            const provider = new ethers.providers.Web3Provider(\r\n                                obWallet.provider,\r\n                                \"any\"\r\n                            );\r\n                            setEthersProvider(provider);\r\n                            ethersProviderVar = provider;\r\n                            window.sessionStorage.setItem(\"selectedWallet\", obWallet.name);\r\n                        } else {\r\n                            console.log(\"wallet not found, setting default provider\");\r\n                            const provider = new ethers.providers.JsonRpcProvider(RPC_URL);\r\n                            setEthersProvider(provider);\r\n                            setWallet(null);\r\n                        }\r\n                    },\r\n                    address: (obAddress) => {\r\n                        setAddress(obAddress);\r\n                    },\r\n                    network: (network) => {\r\n                        setChainId(network);\r\n                        // console.log(network);\r\n                    },\r\n                },\r\n            });\r\n\r\n            const savedWallet = window.location.hash === '#/explorer' || hash === '#/render' ? undefined : sessionStorage.getItem('selectedWallet');\r\n            if (savedWallet) {\r\n                await ob.walletSelect(savedWallet);\r\n                const userReady = await ob.walletCheck();\r\n                // console.log('user ready(with saved wallet)',userReady);\r\n            } else {\r\n                const provider = new ethers.providers.JsonRpcProvider(RPC_URL);\r\n                setEthersProvider(provider);\r\n            }\r\n\r\n\r\n            console.log(\"init onboard done\");\r\n\r\n            setOnboard(ob);\r\n            setInitDone(true);\r\n        } catch (e) {\r\n            console.log(\"onboard init error\", e);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('WALLET', wallet);\r\n        if (wallet) {\r\n            walletCheck();\r\n           \r\n        }\r\n    }, [wallet]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (ethersProvider) {\r\n            subscribeNetwork(ethersProvider);\r\n        }\r\n    }, [ethersProvider]);\r\n\r\n    useEffect(() => {\r\n        if (address && isWalletConnected() == false) {\r\n            console.log(\"set address null\");\r\n            setAddress(null);\r\n        }\r\n    }, [address]);\r\n\r\n    const subscribeNetwork = async (provider) => {\r\n        const network = await provider.getNetwork().catch((e) => {\r\n            console.log(\"error:\", e);\r\n        });\r\n        if (network) {\r\n            setNetworkName(network.name);\r\n            setChainId(network.chainId);\r\n        }\r\n    };\r\n\r\n    const isWalletConnected = () => {\r\n        console.log(\"check wallet state\");\r\n        if (onboard) {\r\n            const state = onboard.getState();\r\n            return state.wallet.name != null;\r\n        } else return null;\r\n    };\r\n\r\n    const handleConnect = async (e) => {\r\n        console.log('initdone', initDone);\r\n        if (!initDone) return;\r\n        if (onboard) {\r\n            if (e) {\r\n                e.stopPropagation();\r\n            }\r\n\r\n            console.log(\"reset\");\r\n            onboard.walletReset();\r\n            console.log(\"walletSelect\");\r\n            const walletSelected = await onboard.walletSelect();\r\n            // const signiture = await walletSelected.signMessage('hello');\r\n            // console.log(signiture, 'signature')\r\n            console.log('walletselected', walletSelected);\r\n            if (walletSelected) {\r\n                onboard.walletCheck();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDisconnect = () => {\r\n        if (onboard) {\r\n            console.log(\"logout wallet\");\r\n            onboard.walletReset();\r\n            if (window.sessionStorage) {\r\n                window.sessionStorage.removeItem(\"selectedWallet\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const walletCheck = async () => {\r\n        if (onboard) {\r\n            await onboard.walletCheck();\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const isCorrectNetwork = chainId === DEPLOYED_CHAIN_ID;\r\n\r\n    if (!initDone) {\r\n        return (\r\n            <div style={sx.root}>\r\n                <div style={sx.container}>\r\n                    loading\r\n                    {/*  <Spinner color=\"#FF692B\" /> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Web3Ctx.Provider\r\n            value={{\r\n                onboard,\r\n                wallet,\r\n                address,\r\n                ethersProvider,\r\n                chainId,\r\n                defaultChainId: config.DEPLOYED_CHAIN_ID,\r\n                handleConnect,\r\n                handleDisconnect,\r\n                isCorrectNetwork,\r\n                walletCheck\r\n            }}\r\n        >\r\n            {children}\r\n        </Web3Ctx.Provider>\r\n    );\r\n};\r\nexport default Web3Manager;","import { ThemeProvider } from '@emotion/react';\r\nimport { Box } from '@mui/material';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport './App.css';\r\nimport routes from './routes/routes';\r\nimport theme from './theme/theme';\r\nimport Web3Manager from './Web3Manager.jsx/Web3Manager';\r\nimport { ToastContainer } from 'react-toast';\r\nimport Footer from './components/Footer';\r\nconst sx = {\r\n  root: {\r\n    minHeight: '100vh',\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <Web3Manager>\r\n      <BrowserRouter basename='/'>\r\n        <Box sx={sx.root} color={theme.palette.background}>\r\n            <Routes>\r\n              {routes.map(({ path, component, exact }) => (\r\n                <Route key={path} path={path} element={component} exact={exact} />\r\n              ))}\r\n            </Routes>\r\n            <ToastContainer position='bottom-right' delay={4000} />\r\n        </Box>\r\n      </BrowserRouter>\r\n    </Web3Manager>\r\n  </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport './index.css';\nimport App from './App.jsx';\nimport { render } from 'react-dom';\n\nconst root = document.getElementById(\"root\");\nrender(<App />, root);\n\n"],"sourceRoot":""}