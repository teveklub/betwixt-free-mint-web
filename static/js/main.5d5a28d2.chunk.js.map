{"version":3,"sources":["context/Web3Ctx.js","hooks/useWeb3Ctx.js","assets/images/banner.svg","components/Header.jsx","assets/images/logos/Galaxis.svg","assets/images/logos/CC.svg","components/Footer.jsx","Views/Burn/components/NtfList.jsx","Views/Burn/components/SelectedImageHolder.jsx","assets/images/mask.jpg","utils/contract.js","utils/index.js","utils/zoom2.js","utils/abi/constants/chain.js","utils/abi/constants/addresses.js","hooks/useContract.js","config/config.js","components/LoadingSpinner.jsx","Api.js","Views/Burn/components/PendingBurn.jsx","Views/Burn/components/SuccesBurn.jsx","Views/Burn/components/FinnishTab.jsx","Views/Burn/components/BurnSection.jsx","Views/Burn/Burn.jsx","routes/routes.js","theme/theme.js","Web3Manager.jsx/Web3Manager.jsx","App.jsx","index.js"],"names":["createContext","useWeb3Ctx","useContext","Web3Ctx","BP1","sx","root","position","top","left","right","width","margin","display","flexDirection","alignContent","mb","imgHolder","maxWidth","text","m","color","Header","statusText","src","banner","alt","Typography","variant","bottom","p","flexWrap","columnGap","rowGap","justifyContent","contentHolder","gap","alignItems","maxHeight","height","cursor","fontFamily","textTransform","fontSize","Footer","CamelCodingLogo","onClick","window","open","GalaxisLogo","order","minWidth","overflow","mt","placeHolder","border","backgroundColor","selected","outline","simpleHolder","title","textAlign","sorryText","textDecoration","NtfList","metadatas","selectMeta","type","selectedId","setSelectedId","startNewSelection","handleClick","metadata","tokenId","length","className","map","item","index","attributes","trait_type","image","placeholder","SelectedImageHolder","selectedNft","handleBurn","buttonText","Button","disabled","getContract","address","ABI","library","account","value","getAddress","isAddress","AddressZero","Error","Contract","getSigner","connectUnchecked","getProviderOrSigner","getTokenUri","tokenUri","fetch","headers","then","res","json","catch","err","console","error","id","zoomFetchTokenUris","contract","zoom2","balanceOf","nt","ZoomLibraryInstance","Zoom","use_reference_calls","calls","i","tId","addMappingCountCall","mapAndParams","push","tUri","addType5Call","ZoomQueryBinary","getZoomCall","combine","combinedResult","resultsToCache","tokenIds","decodeCall","toString","tokenURI","newMetadata","promises","Promise","resolve","time","all","timeEnd","sort","a","b","Number","SupportedChainId","ZOOM_2_ADDRESSES","useZoom2Contract","addressOrAddressMap","withSignerIfPossible","deployedLibrary","defaultProvider","ethersProvider","chainId","isCorrectNetwork","defaultChainId","useMemo","provider","undefined","useContract","ZOOM2_ABI","envConfig","DEPLOYED_NTW_NAME","DEPLOYED_CHAIN_ID","INFURA_ID","FORTMATIC_KEY","RPC_URL","API_URL","ETHERSCAN_URL","OPENSEA_URL","PREVIEW_URL","AWS_URL","AGGREGATOR_URL","EC_TOKEN_ADDRESS","PHOENIX_CONTRACT_ADDRESS","CROSSMINT_CLIENT_ID","CROSSMINT_ENV","TOKEN_CONTRACT","config","OPENSEA_COLLECTION","LoadingSpinner","style","marginBottom","updateToken","body","reject","axios","put","response","data","e","gameUrl","post","PendingBurn","Box","loading","qrCodeBox","linkHolders","opacityColor","qrHolder","responseLinkHolder","SuccesBurn","useState","loaded","setLoaded","opacity","onLoad","uniqueGameUrl","size","button","FinnishTab","maskedMetas","worldMetas","handleSelection","log","BurnSection","setStatusText","onboard","handleConnect","setWorldMetas","setMaskedMetas","setLoading","setButtonText","zoomContract","tokenAddress","setselectedNft","activeTab","setActiveTab","burnPending","setburnPending","setNewMetadata","ethers","abi","useEffect","signMessage","message","ethereum","request","method","accounts","signer","signature","toast","token","getTokens","metas","maskedArray","worldArray","obj","updatedMetadata","filteredMaskArray","filter","prevState","minHeight","headerHolder","subTitle","bannerMintedPage","counterHolder","pending","Burn","Date","routes","path","component","exact","COLORS","theme","createTheme","typography","pageTitle","fontWeight","lineHeight","pageTitleDescription","counterNumber","boxText","share","components","MuiButton","styleOverrides","grayButton","padding","borderRadius","orangeFilledButton","palette","primary","main","background","weight","container","Web3Manager","children","setOnboard","setAddress","wallet","setWallet","setEthersProvider","setChainId","setNetworkName","initDone","setInitDone","hash","location","substr","indexOf","initApp","ob","Onboard","networkId","darkMode","blockPollingInterval","walletSelect","wallets","walletName","rpcUrl","apiKey","rpc","appUrl","email","walletCheck","checkName","subscriptions","obWallet","providers","Web3Provider","sessionStorage","setItem","name","JsonRpcProvider","obAddress","network","savedWallet","getItem","subscribeNetwork","isWalletConnected","getNetwork","getState","stopPropagation","walletReset","walletSelected","Provider","handleDisconnect","removeItem","App","basename","element","delay","document","getElementById","render"],"mappings":"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","file":"static/js/main.5d5a28d2.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport default createContext({});\r\n","import { useContext } from \"react\"\r\nimport Web3Ctx from \"../context/Web3Ctx\"\r\n\r\nexport default function useWeb3Ctx() {\r\n    const context = useContext(Web3Ctx);\r\n    return context\r\n}","export default __webpack_public_path__ + \"static/media/banner.1f050d53.svg\";","import { Box } from '@mui/system'\r\nimport React from 'react'\r\nimport banner from '../assets/images/banner.svg'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nconst BP1 = '@media (max-width: 450px)';\r\n\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        top: '0',\r\n        left: 0,\r\n        right: 0,\r\n        width: '100%',\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        [BP1]:{\r\n            mb: '20px'\r\n        }\r\n    },\r\n    imgHolder: {\r\n        maxWidth: '570px',\r\n        margin: 'auto',\r\n        'img': {\r\n            width: '100%'\r\n        },\r\n        [BP1]:{\r\n            maxWidth: '200px'\r\n        }\r\n    },\r\n    text: {\r\n        margin: 'auto',\r\n        m: '12px auto 24px auto',\r\n        color: '#ffffff99'\r\n    }\r\n}\r\nconst Header = ({ statusText }) => {\r\n    return (\r\n        <Box sx={sx.root}>\r\n            <Box sx={sx.imgHolder}>\r\n                <img src={banner} alt=\"banner\" />\r\n            </Box>\r\n            <Typography variant=\"pageTitle\">Braves Burn Event</Typography>\r\n            {statusText && <Typography variant='pageTitleDescription' sx={sx.text}>\r\n                {statusText}\r\n            </Typography>}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/Galaxis.2ce1e236.svg\";","export default __webpack_public_path__ + \"static/media/CC.85a6dfa4.svg\";","import { Box } from '@mui/system'\r\nimport React from 'react'\r\nimport Typography from '@mui/material/Typography'\r\nimport GalaxisLogo from '../assets/images/logos/Galaxis.svg'\r\nimport CamelCodingLogo from '../assets/images/logos/CC.svg'\r\n\r\nconst BP1 = '@media (max-width: 600px)';\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        bottom: '0',\r\n        left: 0,\r\n        right: 0,\r\n        margin: '0 auto 0 auto',\r\n        p: '35px 10px 25px 10px',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        columnGap: '80px',\r\n        rowGap: '15px',\r\n        [BP1]: {\r\n            justifyContent: 'center',\r\n        }\r\n    },\r\n    contentHolder: {\r\n        display: 'flex',\r\n        gap: '5px',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        '& img': {\r\n            maxHeight: '32px',\r\n            height: '100%',\r\n            cursor: 'pointer',\r\n            [BP1]:{\r\n                maxHeight: '26px'\r\n            }\r\n        }\r\n    },\r\n    text: {\r\n        fontFamily: 'Jotia-Regular',\r\n        textTransform: 'uppercase',\r\n        color: '#ffffff99',\r\n        fontSize: '12px',\r\n        width: 'fit-content',\r\n        [BP1]: {\r\n            fontSize: '10px'\r\n        }\r\n    }\r\n}\r\nconst Footer = () => {\r\n\r\n    const openCC = () => {\r\n        window.open('https://camelcoding.com/', '_blank')\r\n    }\r\n    const openGalaxisWebsite = () => {\r\n        window.open('https://galaxis.xyz', '_blank')\r\n    }\r\n\r\n    return (\r\n        <Box sx={sx.root}>\r\n            <Box sx={sx.contentHolder}>\r\n                <Typography sx={sx.text}>powered by:</Typography>\r\n                <img src={CamelCodingLogo} alt=\"CAMELCODING\" onClick={openCC}/>\r\n            </Box>\r\n\r\n            <Box sx={sx.contentHolder}>\r\n                <Typography sx={sx.text}>blockchain platform by:</Typography>\r\n                <img src={GalaxisLogo} alt=\"GALAXIS\" onClick={openGalaxisWebsite}/>\r\n            </Box>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Footer","import { Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useState } from 'react';\r\nconst BP1 = '@media (max-width: 1100px)';\r\nconst BP2 = '@media (max-width: 450px)'\r\nconst sx = {\r\n    root: {\r\n        // position: 'absolute',\r\n        // right: '60%',\r\n        order: '1',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignContent: 'flex-start',\r\n        gap: '25px',\r\n        maxWidth: '315px',\r\n        minWidth: '315px',\r\n        maxHeight: '400px',\r\n        overflow: 'auto',\r\n        p: '2px',\r\n        mt: '5px',\r\n        [BP1]: {\r\n            order: '1',\r\n            maxHeight: '183px',\r\n        }\r\n    },\r\n    imgHolder: {\r\n        height: 'auto',\r\n        cursor: 'pointer',\r\n        width: '80px',\r\n        height: '80px',\r\n        '& img': {\r\n            width: '100%',\r\n            height: '100%',\r\n        },\r\n    },\r\n    placeHolder: {\r\n        width: '78px',\r\n        height: '78px',\r\n        border: '1px solid #628BA0',\r\n        backgroundColor: 'transparent',\r\n    },\r\n    selected: {\r\n        width: '80px',\r\n        height: '80px',\r\n        '& img': {\r\n            width: '100%',\r\n            height: '100%',\r\n            outline: '1px solid #FFF',\r\n        }\r\n    },\r\n    simpleHolder: {\r\n        mt: '-25px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        [BP1]: {\r\n            mt: '0',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        }\r\n    },\r\n    title: {\r\n        color: '#FFFFFF99',\r\n        [BP1]: {\r\n            textAlign: 'center',\r\n        }\r\n    },\r\n    sorryText: {\r\n        maxWidth: '315px',\r\n        textAlign: 'start',\r\n        mt: '5px',\r\n        '& span': {\r\n            textDecoration: 'underline',\r\n            cursor: 'pointer',\r\n        },\r\n        [BP2]:{\r\n            textAlign: 'center'\r\n        }\r\n    }\r\n};\r\n\r\nconst NtfList = ({ metadatas, selectMeta, type, title, selectedId, setSelectedId, startNewSelection }) => {\r\n    const handleOpenOpensea = () => {\r\n        if (type === 'Mask') {\r\n            window.open('https://opensea.io/collection/betwixt-braves?search[sortAscending]=true&search[sortBy]=UNIT_PRICE&search[stringTraits][0][name]=Version&search[stringTraits][0][values][0]=Masked', '_blank')\r\n        } else {\r\n            window.open('https://opensea.io/collection/betwixt-braves?search[sortAscending]=true&search[sortBy]=UNIT_PRICE&search[stringTraits][0][name]=Version&search[stringTraits][0][values][0]=Ascended', '_blank')\r\n        }\r\n    }\r\n    const handleClick = (metadata, type) => {\r\n        if (startNewSelection) {\r\n            startNewSelection(metadata, type)\r\n        } else {\r\n            selectMeta(metadata, type);\r\n            setSelectedId(metadata.tokenId)\r\n        }\r\n    }\r\n\r\n    return (\r\n        type === 'Mask' ?\r\n            <Box sx={sx.simpleHolder}>\r\n                <Typography sx={sx.title} variant='pageTitleDescription'>{title}</Typography>\r\n                {metadatas.length > 0 ?\r\n                    <Box sx={sx.root} className='nft-list'>\r\n                        {metadatas.map((item, index) => {\r\n                            if (item.attributes[0].trait_type === 'Mask') {\r\n                                return (\r\n                                    <Box key={index} sx={{ ...sx.imgHolder, ...(selectedId === item.tokenId && sx.selected) }} onClick={() => { handleClick(metadatas[index], type) }}>\r\n                                        <img src={metadatas[index].image} alt='meta' />\r\n                                    </Box>\r\n                                );\r\n                            }\r\n                        })} </Box>\r\n                    : <Typography variant='pageTitleDescription' sx={sx.sorryText}>\r\n                        unfortunately you do not have any nfts to burn! Buy more on <span onClick={handleOpenOpensea}> opensea. </span></Typography>\r\n                }\r\n            </Box> :\r\n            <Box sx={sx.simpleHolder}>\r\n                <Typography sx={sx.title} variant='pageTitleDescription'>{title}</Typography>\r\n                {metadatas.length > 0 ?\r\n                    <Box sx={sx.root} className='nft-list'>\r\n                        {metadatas.map((item, index) => {\r\n                            if (item.attributes[0].trait_type === 'World') {\r\n                                return (\r\n                                    <Box key={index} sx={{ ...sx.imgHolder, ...(selectedId === item.tokenId && sx.selected) }} onClick={() => { handleClick(metadatas[index], type) }}>\r\n                                        <img src={metadatas[index].image} alt='meta' />\r\n                                    </Box>\r\n                                );\r\n                            }\r\n                        })}\r\n                    </Box>\r\n                    : <Typography variant='pageTitleDescription' sx={sx.sorryText}>\r\n                       Unfortunately you do not own any worlds. Burn Masks to claim worlds and get access to the first level of the game.</Typography>\r\n                }\r\n            </Box>\r\n    )\r\n};\r\n\r\nexport default NtfList;\r\n","import { Button, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React from 'react'\r\n\r\nconst BP1 = '@media (max-width: 450px)';\r\nconst BP2 = '@media (max-width: 1100px)';\r\nconst sx = {\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '50px',\r\n        [BP2]: {\r\n            order: '2',\r\n        }\r\n    },\r\n    imgHolder: {\r\n        '& img': {\r\n            width: '379px',\r\n            height: '379px',\r\n            [BP1]: {\r\n                width: '250px',\r\n                height: '250px',\r\n            }\r\n        }\r\n    },\r\n    placeholder: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n        width: '377px',\r\n        height: '377px',\r\n        border: '1px solid #628BA0',\r\n        [BP1]: {\r\n            width: '250px',\r\n            height: '250px',\r\n        }\r\n    }\r\n}\r\nconst SelectedImageHolder = ({ selectedNft, handleBurn, buttonText }) => {\r\n    const handleSubmit = () => {\r\n        handleBurn(selectedNft)\r\n    }\r\n\r\n    return (\r\n        <Box sx={sx.root}>\r\n            {selectedNft ?\r\n                <Box sx={sx.imgHolder}>\r\n                    <img src={selectedNft.image} alt=\"\" />\r\n                </Box> :\r\n                <Box sx={sx.placeholder}>\r\n                    <Typography variant='boxText'>\r\n                        SELECT NFT TO BURN\r\n                    </Typography>\r\n                </Box>\r\n            }\r\n\r\n            <Button variant='grayButton' disabled={selectedNft ? false : true} onClick={handleSubmit}>\r\n                {buttonText}\r\n            </Button>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SelectedImageHolder","export default __webpack_public_path__ + \"static/media/mask.2a9a7a9f.jpg\";","import { getAddress } from '@ethersproject/address'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport { Contract } from '@ethersproject/contracts'\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value) {\r\n    try {\r\n        return getAddress(value)\r\n    } catch {\r\n        return false\r\n    }\r\n}\r\n\r\n// account is not optional\r\nfunction getSigner(library, account) {\r\n    return library.getSigner(account).connectUnchecked();\r\n}\r\n\r\n// account is optional\r\nfunction getProviderOrSigner(library, account) {\r\n    return account ? getSigner(library, account) : library\r\n}\r\n\r\n// account is optional\r\nexport function getContract(address, ABI, library, account) {\r\n    if (!isAddress(address) || address === AddressZero) {\r\n        throw Error(`Invalid 'address' parameter '${address}'.`)\r\n    }\r\n\r\n    return new Contract(address, ABI, getProviderOrSigner(library, account))\r\n}\r\n\r\n","export { getContract } from \"./contract\"\r\n// export { zoomFetchTokenUris } from \"./zoom2\"\r\n\r\nexport const getTokenUri = async (tokenId, tokenUri) => {\r\n    //console.log(tokenUri)\r\n    const metadata = await fetch(tokenUri,{\r\n        headers:{\r\n            'Cache-Control': 'no-cache'\r\n        }\r\n    })// await fetch(`https://toddlerpillars-metadata-server.herokuapp.com/api/metadata/${tokenId % 100}/${tokenId}`)\r\n        .then((res) => res.json())\r\n        .catch((err) => console.error(err));\r\n    if (metadata) {\r\n        if (!metadata.tokenId) {\r\n            metadata.tokenId = tokenId;\r\n        }\r\n        if (!metadata.id) {\r\n            metadata.id = tokenId;\r\n        }\r\n        return metadata;\r\n    } else\r\n        // Fetching metadata fail, return an object anyway\r\n        return {\r\n            tokenId: tokenId,\r\n            id: tokenId\r\n        }\r\n};\r\n","import { Zoom } from 'zoom-next';\r\nimport { getTokenUri } from '.';\r\n\r\nexport const zoomFetchTokenUris = async (contract, zoom2, address) => {\r\n    // console.log(contract, zoom2, address);\r\n    const nt = await contract.balanceOf(address);\r\n\r\n    // console.log('number of tokens', nt);\r\n    \r\n    const ZoomLibraryInstance = new Zoom({ use_reference_calls: true });\r\n    if (nt > 0) {\r\n        const calls = [];\r\n        for (let i = 0; i < nt; i += 1) {\r\n            const tId = ZoomLibraryInstance.addMappingCountCall(\r\n                contract,\r\n                ['tokenOfOwnerByIndex', [address, i]],\r\n                'tokenOfOwnerByIndex(address,uint256) returns (uint256)',\r\n                [{ contract: contract, mapAndParams: ['tokenURI(uint256)', [i]] }],\r\n            );\r\n            calls.push(tId);\r\n                // console.log(calls)\r\n            const tUri = ZoomLibraryInstance.addType5Call(\r\n                contract,\r\n                ['tokenURI(uint256)', [i]],\r\n                'tokenURI(uint256) returns (string)',\r\n            );\r\n            calls.push(tUri);\r\n        }\r\n        const ZoomQueryBinary = ZoomLibraryInstance.getZoomCall();\r\n        const combinedResult = await zoom2.combine(ZoomQueryBinary);\r\n        ZoomLibraryInstance.resultsToCache(combinedResult, ZoomQueryBinary);\r\n        const tokenIds = [];\r\n        for (let i = 0; i < nt * 2; i += 2) {\r\n            const id = ZoomLibraryInstance.decodeCall(calls[i]).toString();\r\n            const tokenURI = ZoomLibraryInstance.decodeCall(calls[i + 1]).toString();\r\n            tokenIds.push({ id, tokenURI });\r\n        }\r\n\r\n        // console.log(tokenIds)\r\n\r\n        const newMetadata = [];\r\n\r\n        if (tokenIds.length > 0) {\r\n            const promises = [];\r\n            for (var i = 0; i < tokenIds.length; i++) {\r\n                const { id, tokenURI } = tokenIds[i];\r\n                promises.push(new Promise(async (resolve) => {\r\n                    const metadata = await getTokenUri(id, tokenURI);\r\n                    newMetadata.push(metadata);\r\n                    resolve();\r\n                }))\r\n            }\r\n\r\n            console.time(`fetching tokenUri`)\r\n            await Promise.all(promises)\r\n            console.timeEnd(`fetching tokenUri`)\r\n        }\r\n\r\n        return newMetadata.sort((a, b) => {\r\n            return Number(a.tokenId) - Number(b.tokenId)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getTokenIds = async (contract, zoomContract, ownerAddress) => {\r\n\r\n    const numberOfTokens = await contract.balanceOf(ownerAddress).catch(e=>{return 0});\r\n\r\n    // console.log('number of tokens', numberOfTokens);\r\n\r\n    const ZoomLibraryInstance = new Zoom();\r\n    const tokenIds = [];\r\n    const item_identifiers = [];\r\n    let callNum = 0;\r\n\r\n    for (let i = 0; i < numberOfTokens; i++) {\r\n        // request the token ID\r\n        const tokenIdCall = ZoomLibraryInstance.addCall(\r\n            // the contract we're calling\r\n            contract,\r\n            // the method that is returing our ID\r\n            [\"tokenOfOwnerByIndex\", [ownerAddress, i]],\r\n            // signature used to decode the result\r\n            \"tokenOfOwnerByIndex(address,uint256) returns (uint256)\"\r\n            // array of next method calls that will use the result of this current call\r\n        );\r\n        item_identifiers.push(tokenIdCall);\r\n        callNum++;\r\n    }\r\n\r\n    // Prepare the binary call\r\n    const ZoomQueryBinary = ZoomLibraryInstance.getZoomCall();\r\n    console.time(`zoomCall_TokenIds_${contract.address}`);\r\n    const combinedResult = await zoomContract.combine(ZoomQueryBinary);\r\n    console.timeEnd(`zoomCall_TokenIds_${contract.address}`);\r\n    ZoomLibraryInstance.resultsToCache(combinedResult, ZoomQueryBinary);\r\n\r\n    for (let i = 0; i < callNum; i++) {\r\n        let tokenId = ZoomLibraryInstance.decodeCall(item_identifiers[i]).toString();\r\n        tokenIds.push({cardID:Number(tokenId)});\r\n    }\r\n    return tokenIds;\r\n};\r\n","export const SupportedChainId = {\r\n    MAINNET: 1,\r\n    RINKEBY: 4,\r\n    GOERLI: 5,\r\n    POLYGON: 137\r\n}","import { SupportedChainId } from './chain'\r\n\r\nexport const ZOOM_2_ADDRESSES = {\r\n    [SupportedChainId.MAINNET]: \"0x7cdF091AF6a9ED75E3192500d3e5BB0f63e22Dea\",\r\n    [SupportedChainId.RINKEBY]: \"0x491592F30D9a3d1887F486eA2A3c72ad82fAcF4D\",\r\n    [SupportedChainId.GOERLI]: '0xebC7d793d062371C11cB802e7D49eEAA0c30EB06'\r\n}\r\n","import useWeb3Ctx from './useWeb3Ctx';\r\nimport { useMemo } from 'react';\r\nimport { getContract } from '../utils/contract';\r\n\r\nimport { abi as ZOOM2_ABI } from '../utils/Zoom2.json';\r\n\r\nimport {\r\n    ZOOM_2_ADDRESSES\r\n} from '../utils/abi/constants/addresses';\r\n\r\n// returns null on errors\r\nexport function useContract(\r\n    addressOrAddressMap,\r\n    ABI,\r\n    withSignerIfPossible = true) {\r\n    const { defaultProvider: deployedLibrary, ethersProvider: library, address: account, chainId, isCorrectNetwork, defaultChainId } = useWeb3Ctx();\r\n\r\n    return useMemo(() => {\r\n        if (!isCorrectNetwork && (!deployedLibrary || !defaultChainId)) return null\r\n        if (isCorrectNetwork && (!addressOrAddressMap || !ABI || !library || !chainId)) return null\r\n        let address\r\n        if (typeof addressOrAddressMap === 'string') address = addressOrAddressMap\r\n        else address = addressOrAddressMap[isCorrectNetwork ? chainId : defaultChainId]\r\n        if (!address) return null\r\n        let provider\r\n        if (isCorrectNetwork) provider = library\r\n        else provider = deployedLibrary\r\n        try {\r\n            return getContract(address, ABI, provider, withSignerIfPossible && account ? account : undefined)\r\n        } catch (error) {\r\n            console.error('Failed to get contract', error)\r\n            return null\r\n        }\r\n    }, [addressOrAddressMap, ABI, library, chainId, withSignerIfPossible, account, deployedLibrary, isCorrectNetwork])\r\n}\r\n\r\n\r\nexport function useZoom2Contract() {\r\n    return useContract(ZOOM_2_ADDRESSES, ZOOM2_ABI, false)\r\n}\r\n/* export function useEcContract() {\r\n    return useContract(EC_ADDRESSES, EC_ABI, false)\r\n}\r\nexport function useGeneticatContract() {\r\n    return useContract(GENETICATS_ADDRESSES, GENETICATS_ABI, true)\r\n} */","const dev = {\r\n    DEPLOYED_NTW_NAME: 'goerli',\r\n    DEPLOYED_CHAIN_ID: 5,\r\n    INFURA_ID: 'cae2aed2f50a4087af91b000cf05be4c',\r\n    FORTMATIC_KEY: 'pk_test_DD2BBA8AAA1D4FED',\r\n    RPC_URL: 'https://goerli.infura.io/v3/cae2aed2f50a4087af91b000cf05be4c',\r\n    ETHERSCAN_URL: 'https://goerli.etherscan.io',\r\n    OPENSEA_URL: 'https://testnets.opensea.io/',\r\n    API_URL: 'https://braves-metadata-staging.herokuapp.com/api',\r\n    PREVIEW_URL: 'https://ssp-server-v2.herokuapp.com/api/project-session',\r\n    AWS_URL:\r\n      'https://galaxis-backend-staging.s3.eu-central-1.amazonaws.com/media',\r\n  \r\n    AGGREGATOR_URL: 'https://nft-aggregator-rinkeby.herokuapp.com/token',\r\n    \r\n    CROSSMINT_CLIENT_ID: '7de2bbab-cec3-456b-a2e1-96bbd99cb8ad',\r\n    CROSSMINT_ENV: 'staging',\r\n    TOKEN_CONTRACT: '0x811Abc77F2aFc3b995548E9251A5469f93013Ab3'\r\n  };\r\n  \r\n  const prod = {\r\n    DEPLOYED_NTW_NAME: 'mainnet',\r\n    DEPLOYED_CHAIN_ID: 1,\r\n    INFURA_ID: 'a5e79e6ee9a14236b385e47849805596',\r\n    FORTMATIC_KEY: 'pk_live_FBFF1F05F2879F29',\r\n    RPC_URL: 'https://mainnet.infura.io/v3/0a0bbd3ce4ea4be5ad706514cf2cd8cc',\r\n    API_URL: 'https://braves-metadata-server.herokuapp.com/api',\r\n    ETHERSCAN_URL: 'https://etherscan.io/',\r\n    OPENSEA_URL: 'https://opensea.io/',\r\n  \r\n    // API_URL: 'https://galaxis-backend.herokuapp.com',\r\n    PREVIEW_URL: 'https://launchpad-backend.herokuapp.com/api/project-session',\r\n    AWS_URL: 'https://galaxis-web.s3.amazonaws.com/media',\r\n  \r\n    AGGREGATOR_URL: 'https://nft-aggregator.herokuapp.com/token',\r\n  \r\n    EC_TOKEN_ADDRESS: '0x97ca7fe0b0288f5eb85f386fed876618fb9b8ab8',\r\n    PHOENIX_CONTRACT_ADDRESS: '0x55B3154Ad761405B0cdd27355943Eb808d40b5A1',\r\n\r\n    CROSSMINT_CLIENT_ID: 'b3f5189b-66fe-43d7-8295-c73f9fa3e3ef',\r\n    CROSSMINT_ENV: '',\r\n    TOKEN_CONTRACT: '0x2a3Bc72ed71DB2a27Cfe2Ba50aEcC692Fb04FcfF'\r\n  };\r\n  \r\n  const common = {\r\n    OPENSEA_COLLECTION: 'https://api.opensea.io/api/v1/collection',\r\n  };\r\n  \r\n  // if use npm/yarn start,  NODE_ENV = \"development\"\r\n  // if use npm/yarn build,  NODE_ENV = \"production\"\r\n  let envConfig = prod; // process.env.NODE_ENV === \"development\" ? dev : prod\r\n  let config = { ...envConfig, ...common };\r\n  \r\n  export default config;\r\n  ","import React from 'react'\r\nimport './Spinner.css'\r\n\r\nconst LoadingSpinner = () => {\r\n    return (\r\n        <div className=\"counter-circle\" style={{ margin: \"0 auto\", marginBottom: \"10px\" }}>\r\n            <div className=\"counter-rotary-holder\" id='txRotator'>\r\n                <div className=\"counter-rotary-item\" />\r\n            </div>\r\n            <div className=\"counter-shadow\">\r\n                <div className=\"counter-content-holder\">\r\n                    <div className=\"counter-text\">LOADING</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingSpinner","import axios from \"axios\";\r\nimport config from \"./config/config\";\r\n\r\nexport const updateToken = async (body) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.put(`${config.API_URL}/metadata/update`, body,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            .then((response) => {\r\n                resolve(response.data)\r\n            })\r\n            .catch(e => {\r\n                reject(e);\r\n            })\r\n            ;\r\n    });\r\n};\r\nexport const gameUrl  = async ( body) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(`${config.API_URL}/metadata/game-url`, body,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            .then((response) => {\r\n                resolve(response.data)\r\n            })\r\n            .catch(e => {\r\n                reject(e);\r\n            })\r\n            ;\r\n    });\r\n};","import React from 'react'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Box } from '@mui/material'\r\n\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        top: '-50px',\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '10px'\r\n    }\r\n}\r\n\r\n\r\nconst PendingBurn = () => {\r\n    return (\r\n        <Box sx={sx.root}>\r\n            <Typography variant=\"counterNumber\">BURNING MASK</Typography>\r\n            <Typography variant='pageTitleDescription'>PREPARE FOR THE LIGHT</Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PendingBurn","import { Box, Button, Typography } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport QRCode from 'react-qr-code';\r\nimport LoadingSpinner from '../../../components/LoadingSpinner';\r\n\r\nconst BP1 = '@media (max-width: 450px)';\r\nconst BP2 = '@media (max-width: 1100px)';\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '50px',\r\n        [BP2]:{\r\n            order: '1'\r\n        }\r\n    },\r\n    imgHolder: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        '& img': {\r\n            width: '379px',\r\n            height: '379px',\r\n\r\n            [BP1]: {\r\n                width: '250px',\r\n                height: '250px',\r\n            },\r\n        },\r\n    },\r\n    loading: {\r\n        position: 'absolute',\r\n        top: '30%',\r\n        left: '0',\r\n        right: '0',\r\n        bottom: '0',\r\n        margin: 'auto',\r\n    },\r\n    qrCodeBox: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '12px',\r\n        alignItems: 'center',\r\n    },\r\n    linkHolders: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '32px',\r\n    },\r\n    opacityColor: {\r\n        color: '#ffffff99',\r\n    },\r\n    qrHolder: {\r\n        width: '130px',\r\n        height: '130px',\r\n        backgroundColor: '#FFF',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    responseLinkHolder: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '32px'\r\n    }\r\n};\r\nconst SuccesBurn = ({ metadata }) => {\r\n    const [loaded, setLoaded] = useState(false);\r\n    const handlePlay = (uniqueGameUrl) => {\r\n        window.open(`${uniqueGameUrl}`, '_blank');\r\n    };\r\n    const share = () => {\r\n        window.open(\r\n            'https://twitter.com/intent/tweet?text=I%27ve%20just%20ascended%20my%20Betwixt%20Brave%20to%20play%20the%20game.%20Ascend%20yours%20braves.betwixt.life%20No%20mask%20to%20ascend?%20Buy%20a%20mask%20on%20OS%20https://opensea.io/collection/betwixt-braves%20@BetwixtNFT',\r\n            '_blank'\r\n        );\r\n    };\r\n\r\n    const handleOpenseaNavgiation = () => {\r\n        window.open(\r\n            'https://opensea.io/collection/betwixt-braves?search[sortAscending]=true&search[sortBy]=UNIT_PRICE&search[stringTraits][0][name]=Version&search[stringTraits][0][values][0]=Masked&search[toggles][0]=BUY_NOW',\r\n            '_blank'\r\n        );\r\n    };\r\n    return (\r\n        <Box sx={sx.root}>\r\n            <Box sx={sx.imgHolder}>\r\n                <img\r\n                    src={metadata.image}\r\n                    alt='world'\r\n                    style={{ opacity: loaded ? '1' : '0' }}\r\n                    onLoad={() => {\r\n                        setLoaded(true);\r\n                    }}\r\n                />\r\n                {!loaded && (\r\n                    <Box sx={sx.loading}>\r\n                        <LoadingSpinner />\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n            {/* <Button variant='grayButton' onClick={() => handlePlay(metadata)}>\r\n                Play the game\r\n            </Button> */}\r\n            <Box sx={sx.responseLinkHolder}>\r\n                <Typography sx={sx.opacityColor} variant='pageTitleDescription'>\r\n                to play the game, open this link on your phone!\r\n                </Typography>\r\n                <Typography variant='share' style={{textTransform: 'lowercase'}} onClick={() => handlePlay(metadata.uniqueGameUrl)} >{metadata.uniqueGameUrl}</Typography>\r\n            </Box>\r\n            <Box sx={sx.qrCodeBox}>\r\n                <Typography sx={sx.opacityColor} variant='pageTitleDescription'>\r\n                    IF you are on desktop, scan this code\r\n                </Typography>\r\n                <Box sx={sx.qrHolder}>\r\n                    <QRCode value={metadata.uniqueGameUrl} size={120} />\r\n                </Box>\r\n            </Box>\r\n            <Box sx={sx.linkHolders}>\r\n                <Typography variant='share' onClick={share}>\r\n                    SHARE ON TWITTER\r\n                </Typography>\r\n                <Typography\r\n                    sx={sx.opacityColor}\r\n                    variant='share'\r\n                    onClick={handleOpenseaNavgiation}\r\n                >\r\n                    BUY MORE MASKS ON OPENSEA\r\n                </Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default SuccesBurn;\r\n","import { Box } from '@mui/material'\r\nimport React from 'react'\r\nimport NtfList from './NtfList'\r\nimport SuccesBurn from './SuccesBurn'\r\nconst BP1 = '@media (max-width: 1100px)';\r\nconst sx = {\r\n    contentHolder: {\r\n        width: '90vw',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        gap: '25px',\r\n        [BP1]: {\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        }\r\n    },\r\n    button: {\r\n        mt: '64px'\r\n    }\r\n}\r\n\r\nconst FinnishTab = ({ maskedMetas, worldMetas, handleSelection , metadata, startNewSelection}) => {\r\n    console.log(metadata, 'egyel beljebb')\r\n    return (\r\n        <Box sx={sx.contentHolder}>\r\n            <NtfList metadatas={maskedMetas} type=\"Mask\" title={\"Mask\"} startNewSelection={startNewSelection}/>\r\n            <SuccesBurn metadata={metadata}/>\r\n            <NtfList metadatas={worldMetas} type=\"World\" title={\"World\"} startNewSelection={startNewSelection}/>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default FinnishTab","import { Box, Button, Typography } from '@mui/material'\r\nimport React, { useEffect, useState } from 'react'\r\nimport NtfList from './NtfList'\r\nimport mask from '../../../assets/images/mask.jpg';\r\nimport SelectedImageHolder from './SelectedImageHolder';\r\nimport { zoomFetchTokenUris } from '../../../utils/zoom2'\r\nimport { useZoom2Contract } from '../../../hooks/useContract'\r\nimport { Contract, ethers } from 'ethers';\r\nimport useWeb3Ctx from '../../../hooks/useWeb3Ctx';\r\nimport config from '../../../config/config';\r\nimport ABI from '../../../utils/abi/Token.json'\r\nimport { getTokenUri } from '../../../utils';\r\nimport LoadingSpinner from '../../../components/LoadingSpinner';\r\nimport abi from '../../../contracts/SaleContract.json';\r\nimport { gameUrl, updateToken } from '../../../Api';\r\nimport { toast } from 'react-toast';\r\nimport PendingBurn from './PendingBurn'\r\nimport FinnishTab from './FinnishTab';\r\n\r\nconst BP1 = '@media (max-width: 1100px)';\r\n\r\nconst METADATA = [\r\n    {\r\n        id: 1,\r\n        image: mask\r\n    },\r\n    {\r\n        id: 1,\r\n        image: mask\r\n    },\r\n    {\r\n        id: 1,\r\n        image: mask\r\n    }\r\n]\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    contentHolder: {\r\n        width: '90vw',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        gap: '25px',\r\n        [BP1]: {\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n\r\n        }\r\n    },\r\n    button: {\r\n        mt: '64px'\r\n    }\r\n}\r\n\r\nconst BurnSection = ({ setStatusText }) => {\r\n    const { onboard, handleConnect, address, ethersProvider } = useWeb3Ctx();\r\n    const [selectedId, setSelectedId] = useState(undefined);\r\n    const [worldMetas, setWorldMetas] = useState([]);\r\n    const [maskedMetas, setMaskedMetas] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [buttonText, setButtonText] = useState('Burn')\r\n    const zoomContract = useZoom2Contract();\r\n    const tokenAddress = config.TOKEN_CONTRACT;\r\n    const selectMeta = (metadata, type) => {\r\n        if (type === 'Mask') {\r\n            setButtonText('Burn')\r\n        } else if (type === 'World') {\r\n            setButtonText('Reveal');\r\n        }\r\n        setselectedNft(metadata)\r\n        setStatusText(\"NFT SELECTED\")\r\n    }\r\n    const startNewSelection = (metadata, type) => {\r\n        if (type === 'Mask') {\r\n            setButtonText('Burn')\r\n        } else if (type === 'World') {\r\n            setButtonText('Reveal');\r\n        }\r\n        setSelectedId(metadata.tokenId);\r\n        setselectedNft(metadata)\r\n        setStatusText(\"NFT SELECTED\")\r\n        setActiveTab(0);\r\n    }\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [burnPending, setburnPending] = useState(false);\r\n\r\n    const [selectedNft, setselectedNft] = useState(undefined);\r\n    const [newMetadata, setNewMetadata] = useState(undefined);\r\n    const saleContract = new ethers.Contract(\r\n        '0x6DbD13D198944Bc49B983E146a9dF6bfA871CA13',\r\n        abi.abi,\r\n        ethersProvider\r\n    );\r\n    useEffect(() => {\r\n        setActiveTab(0);\r\n        setselectedNft(undefined);\r\n        setNewMetadata(undefined);\r\n    }, [address])\r\n\r\n    const signMessage = async (message) => {\r\n        try {\r\n            console.log(message)\r\n            if (!window.ethereum) {\r\n                throw new Error('No crypto wallet found');\r\n            }\r\n            window.ethereum\r\n                .request({ method: \"eth_requestAccounts\" })\r\n                .then(accounts => {\r\n                    console.log(accounts);\r\n                });\r\n            const signer = ethersProvider.getSigner();\r\n            const signature = await signer.signMessage(message)\r\n            const address = await signer.getAddress();\r\n\r\n            return {\r\n                message, signature, address\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            toast.error(error.message)\r\n        }\r\n    }\r\n    const handleSubmit = (selectedNft) => {\r\n        setburnPending(true)\r\n        console.log(selectedNft);\r\n        // let dna = selectedNft;\r\n        //SIGNATURE\r\n        signMessage(`{tokenID: ${selectedNft.tokenId}}`).then((response) => {\r\n            if (response) {\r\n                setActiveTab(1);\r\n                console.log(response);\r\n                const obj = {\r\n                    \"address\": response.address,\r\n                    \"message\": `{tokenID: ${selectedNft.tokenId}}`,\r\n                    \"signature\": response.signature\r\n                }\r\n                console.log(obj);\r\n                if (selectedNft.attributes[0].trait_type === 'Mask') {\r\n                    updateToken(obj).then((response) => {\r\n                        if (response.message === 'Success') {\r\n                            setNewMetadata(response.updatedMetadata);\r\n                            setburnPending(false)\r\n                            let tmpMaskArray = maskedMetas;\r\n                            const filteredMaskArray = tmpMaskArray.filter((item) => item.tokenId !== selectedNft.tokenId);\r\n                            setMaskedMetas(filteredMaskArray);\r\n                            setWorldMetas((prevState) => [...prevState, response.updatedMetadata])\r\n                        }\r\n                        else {\r\n                            setNewMetadata(undefined)\r\n                            setActiveTab(1);\r\n                        }\r\n                    }).catch((e) => {\r\n                        toast.error(e.message)\r\n                        console.log(e)\r\n                    });\r\n                } else if (selectedNft.attributes[0].trait_type === 'World') {\r\n                    gameUrl(obj).then((response) => {\r\n                        console.log(response)\r\n                        if (response.uniqueGameUrl) {\r\n                            setNewMetadata({\r\n                                ...selectedNft,\r\n                                uniqueGameUrl: response.uniqueGameUrl\r\n                            });\r\n                            setburnPending(false)\r\n                        }\r\n                        else {\r\n                            setNewMetadata(undefined)\r\n                            setActiveTab(1);\r\n                        }\r\n                    }).catch((e) => {\r\n                        toast.error(e.message)\r\n                        console.log(e)\r\n                    });\r\n                }\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            toast.error(error.message)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        if (!burnPending && newMetadata !== undefined) {\r\n            setStatusText('CONGRATS')\r\n            setActiveTab(2);\r\n        }\r\n    }, [burnPending, newMetadata])\r\n    useEffect(() => {\r\n        if (address) {\r\n            setLoading(true)\r\n            let token;\r\n            if (config.TOKEN_CONTRACT) {\r\n                token = new Contract(config.TOKEN_CONTRACT, ABI.abi, ethersProvider);\r\n\r\n\r\n                if (!token) {\r\n                    console.error('Token contract not found on address', tokenAddress);\r\n                    return;\r\n                }\r\n                getTokens(token);\r\n            }\r\n\r\n        }\r\n    }, [address]);\r\n    const getTokens = async (token) => {\r\n        setLoading(true);\r\n\r\n        const metas = await zoomFetchTokenUris(\r\n            token,\r\n            zoomContract,\r\n            address\r\n        );\r\n        console.log(metas)\r\n\r\n        if (metas) {\r\n            // console.log('TOKE META',metas);\r\n            let maskedArray = [];\r\n            let worldArray = [];\r\n            metas.map((item) => {\r\n                if (item.attributes[0].trait_type === 'Mask')\r\n                    maskedArray.push(item);\r\n                else if (item.attributes[0].trait_type === 'World') {\r\n                    worldArray.push(item)\r\n                }\r\n            })\r\n            setMaskedMetas(maskedArray);\r\n            setWorldMetas(worldArray);\r\n            setStatusText('NTF DETECTED')\r\n        } else {\r\n            setMaskedMetas([]);\r\n            setWorldMetas([]);\r\n            setStatusText('')\r\n        }\r\n        setLoading(false);\r\n    };\r\n    console.log(newMetadata)\r\n\r\n    const handleOpenseaNavgiation = () => {\r\n        window.open('https://opensea.io/collection/betwixt-braves?search[sortAscending]=true&search[sortBy]=UNIT_PRICE&search[stringTraits][0][name]=Version&search[stringTraits][0][values][0]=Masked&search[toggles][0]=BUY_NOW', '_blank')\r\n    }\r\n    return (\r\n        <Box sx={sx.root}>\r\n            {activeTab === 0 &&\r\n                <>\r\n                    {loading ?\r\n                        <LoadingSpinner />\r\n                        :\r\n                        worldMetas.length > 0 || maskedMetas.length > 0 ?\r\n                            <Box sx={sx.contentHolder}>\r\n                                <NtfList metadatas={maskedMetas} selectMeta={selectMeta} type=\"Mask\" title={\"Mask\"} selectedId={selectedId} setSelectedId={setSelectedId} />\r\n                                <SelectedImageHolder selectedNft={selectedNft} handleBurn={handleSubmit} buttonText={buttonText} />\r\n                                <NtfList metadatas={worldMetas} selectMeta={selectMeta} type=\"World\" title={\"World\"} selectedId={selectedId} setSelectedId={setSelectedId} />\r\n                            </Box>\r\n                            :\r\n                            <>\r\n                                <Typography variant='boxText'>Unfortunately you do not have any NFTs to burn!</Typography>\r\n                                <Button sx={sx.button} variant='grayButton' onClick={handleOpenseaNavgiation}>BUY ON OPENSEA</Button>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n            {activeTab === 1 && burnPending && <PendingBurn />}\r\n            {activeTab === 2 && newMetadata && < FinnishTab maskedMetas={maskedMetas} worldMetas={worldMetas} metadata={newMetadata} startNewSelection={startNewSelection} />}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BurnSection","import { Button, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useEffect, useState } from 'react';\r\nimport useWeb3Ctx from '../../hooks/useWeb3Ctx';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport BurnSection from './components/BurnSection'\r\nconst BP1 = '@media (max-width: 450px)';\r\n\r\nconst sx = {\r\n    root: {\r\n        position: 'relative',\r\n        minHeight: '100vh',\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    headerHolder: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center'\r\n    },\r\n    title: {\r\n        mb: '20px',\r\n        [BP1]: {\r\n            mt: '0px !important'\r\n        }\r\n    },\r\n    subTitle: {\r\n        marginBottom: '100px',\r\n    },\r\n    bannerMintedPage: {\r\n        mt: '-45px',\r\n        [BP1]: {\r\n            mt: 0\r\n        }\r\n    },\r\n    button: {\r\n    },\r\n    counterHolder: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        minHeight: 'calc(100vh - 300px)',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n        gap: '64px',\r\n    },\r\n    pending: {\r\n        margin: '0 auto'\r\n    },\r\n    text: {\r\n        fontSize: '18px',\r\n\r\n    }\r\n};\r\nconst DATE = new Date('2022-10-05T15:00:00.000Z');\r\nconst Burn = () => {\r\n    const { onboard, handleConnect, address, ethersProvider } = useWeb3Ctx();\r\n    const [statusText, setStatusText] = useState(undefined);\r\n    \r\n    return (\r\n        <Box sx={sx.root} >\r\n            <Header statusText={statusText} />\r\n            {!address ?\r\n                <>\r\n                    <Box sx={sx.counterHolder}>\r\n                        <Typography variant=\"pageTitleDescription\" sx={sx.text}>\r\n                            BURN YOUR MASK TO EXPERIENCE THE BETWIXT GAME\r\n                        </Typography>\r\n                        {/* <Counter date={DATE} /> */}\r\n\r\n                        <Button variant='grayButton' onClick={handleConnect} sx={sx.button}>Connect Wallet</Button>\r\n                    </Box>\r\n                </>\r\n        : \r\n        <BurnSection setStatusText={setStatusText}/>    \r\n        \r\n        }\r\n\r\n            <Footer />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Burn","import Burn from \"../Views/Burn/Burn\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    component: <Burn/>,\r\n    exact: true,\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","import { createTheme } from '@mui/material';\r\nconst BP1 = '@media (max-width: 600px)';\r\n\r\nconst COLORS = {\r\n    primaryColor: '#FFFFFF',\r\n    background: '#151019',\r\n    gray: '#363F59',\r\n};\r\n\r\nconst theme = createTheme({\r\n    typography: {\r\n        pageTitle: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Schnyder-M-App',\r\n            fontWeight: 300,\r\n            fontSize: '64px',\r\n            lineHeight: '77px',\r\n            [BP1]: {\r\n                fontSize: '42px',\r\n                lineHeight: '53px',\r\n            }\r\n        },\r\n        pageTitleDescription: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Jotia-Regular',\r\n            fontSize: '14px',\r\n            lineHeight: '17px',\r\n            textTransform: 'uppercase',\r\n            [BP1]: {\r\n                fontSize: '12px',\r\n                lineHeight: '14px',\r\n            }\r\n        },\r\n        counterNumber: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Jotia-Regular',\r\n            fontSize: '32px',\r\n            textTransform: 'uppercase',\r\n            [BP1]: {\r\n                fontSize: '24px',\r\n            }\r\n        },\r\n        boxText: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Jotia-Regular',\r\n            fontSize: '24px',\r\n            textTransform: 'uppercase',\r\n            [BP1]: {\r\n                fontSize: '18px',\r\n            } \r\n        },\r\n        share: {\r\n            textAlign: 'center',\r\n            color: COLORS.primaryColor,\r\n            fontFamily: 'Jotia-Regular',\r\n            fontSize: '16px',\r\n            textTransform: 'uppercase',\r\n            cursor: 'pointer',\r\n            textDecoration: 'underline',\r\n            [BP1]: {\r\n                fontSize: '14px',\r\n            } \r\n        }\r\n    },\r\n    components: {\r\n        MuiButton: {\r\n            styleOverrides: {\r\n                grayButton: {\r\n                    color: COLORS.primaryColor,\r\n                    padding: '18px',\r\n                    fontFamily: 'Jotia-Regular',\r\n                    fontSize: '22px',\r\n                    lineHeight: '29px',\r\n                    textTransform: 'uppercase',\r\n                    backgroundColor: COLORS.gray,\r\n                    borderRadius: '4px',\r\n                    maxWidth: '292px',\r\n                    width: '100%',\r\n                    margin: '0 auto',\r\n                    '&:hover': {\r\n                        backgroundColor: COLORS.gray,\r\n                    },\r\n                    [BP1]: {\r\n                        fontSize: '15px',\r\n                        lineHeight: '22px',\r\n                        maxWidth: '220px',\r\n                        padding: '13px',\r\n                    }\r\n                },\r\n                orangeFilledButton: {\r\n\r\n                    padding: '10px 10px',\r\n                    fontFamily: 'poppins-semibold',\r\n                    fontSize: '14px',\r\n                    textTransform: 'uppercase',\r\n                    backgroundColor: '#FF692B',\r\n                    border: '2px solid #FF682B',\r\n                    borderRadius: '4px',\r\n                    maxWidth: '215px',\r\n                    width: '100%',\r\n                    margin: '0 auto',\r\n                    '&:hover': {\r\n                        backgroundColor: '#ff692bcc'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: COLORS.primaryColor,\r\n        },\r\n        background: {\r\n            background: COLORS.background,\r\n            error: {\r\n                main: '#EE1B11',\r\n            },\r\n        }\r\n    },\r\n});\r\n\r\nexport default theme;\r\n","import Onboard from \"bnc-onboard\";\r\nimport { ethers } from \"ethers\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport config from '../config/config';\r\nimport Web3Ctx from \"../context/Web3Ctx\";\r\n\r\nconst { DEPLOYED_NTW_NAME, DEPLOYED_CHAIN_ID, RPC_URL, FORTMATIC_KEY } = config;\r\nexport let ethersProviderVar = null;\r\nconst sx = {\r\n    root: {\r\n        display: \"flex\",\r\n        minHeight: \"100vh\",\r\n        height: \"100%\",\r\n        weight: \"100%\",\r\n        background: \"#FFF\",\r\n    },\r\n    container: {\r\n        textAlign: \"center\",\r\n        margin: \"auto\",\r\n    },\r\n};\r\n\r\n\r\n\r\nconst Web3Manager = ({ children }) => {\r\n    const [onboard, setOnboard] = useState(null);\r\n    const [address, setAddress] = useState(null);\r\n    const [wallet, setWallet] = useState(null);\r\n    const [ethersProvider, setEthersProvider] = useState(null);\r\n    const [chainId, setChainId] = useState(null);\r\n    const [networkName, setNetworkName] = useState(DEPLOYED_NTW_NAME);\r\n    const [initDone, setInitDone] = useState(false);\r\n    const hash = window.location.hash.substr(0, window.location.hash.indexOf('?'));\r\n\r\n    useEffect(() => {\r\n        // console.log('web3 manager mounted');\r\n        initApp();\r\n    }, []);\r\n\r\n\r\n    const initApp = async () => {\r\n        try {\r\n            // console.log(\"Initiating onboard\");\r\n            const ob = Onboard({\r\n                networkId: DEPLOYED_CHAIN_ID, // [Integer] The Ethereum network ID your Dapp uses.\r\n                darkMode: false,\r\n                blockPollingInterval: 12000,\r\n                walletSelect: {\r\n                    wallets: [\r\n                        { walletName: \"metamask\" },\r\n                        { walletName: \"coinbase\" },\r\n                        { walletName: \"trust\", rpcUrl: RPC_URL },\r\n                        { walletName: \"authereum\" },\r\n                        { walletName: \"wallet.io\", rpcUrl: RPC_URL },\r\n                        { walletName: \"atoken\" },\r\n                        {\r\n                            walletName: \"fortmatic\",\r\n                            apiKey: FORTMATIC_KEY,\r\n                        },\r\n                        {\r\n                            walletName: \"walletConnect\",\r\n                            rpc: {\r\n                                1: RPC_URL,\r\n                                4: RPC_URL,\r\n                                5: RPC_URL,\r\n                            },\r\n                        },\r\n                        { walletName: \"opera\" },\r\n                        { walletName: \"operaTouch\" },\r\n                        { walletName: \"torus\" },\r\n                        { walletName: \"status\" },\r\n                        { walletName: \"walletLink\", rpcUrl: RPC_URL },\r\n                        {\r\n                            walletName: \"trezor\",\r\n                            appUrl: \"ether.cards\",\r\n                            email: \"info@ether.cards\",\r\n                            rpcUrl: RPC_URL,\r\n                        },\r\n                        {\r\n                            walletName: \"ledger\",\r\n                            rpcUrl: RPC_URL,\r\n                        },\r\n                    ],\r\n                },\r\n                walletCheck: [\r\n                    { checkName: \"derivationPath\" },\r\n                    { checkName: \"accounts\" },\r\n                    { checkName: \"connect\" },\r\n                    { checkName: \"network\" },\r\n                ],\r\n                subscriptions: {\r\n                    wallet: (obWallet) => {\r\n                        // console.log('OB wallet', obWallet);\r\n                        if (obWallet.provider) {\r\n                            setWallet(obWallet);\r\n                            const provider = new ethers.providers.Web3Provider(\r\n                                obWallet.provider,\r\n                                \"any\"\r\n                            );\r\n                            setEthersProvider(provider);\r\n                            ethersProviderVar = provider;\r\n                            window.sessionStorage.setItem(\"selectedWallet\", obWallet.name);\r\n                        } else {\r\n                            console.log(\"wallet not found, setting default provider\");\r\n                            const provider = new ethers.providers.JsonRpcProvider(RPC_URL);\r\n                            setEthersProvider(provider);\r\n                            setWallet(null);\r\n                        }\r\n                    },\r\n                    address: (obAddress) => {\r\n                        setAddress(obAddress);\r\n                    },\r\n                    network: (network) => {\r\n                        setChainId(network);\r\n                        // console.log(network);\r\n                    },\r\n                },\r\n            });\r\n\r\n            const savedWallet = window.location.hash === '#/explorer' || hash === '#/render' ? undefined : sessionStorage.getItem('selectedWallet');\r\n            if (savedWallet) {\r\n                await ob.walletSelect(savedWallet);\r\n                const userReady = await ob.walletCheck();\r\n                // console.log('user ready(with saved wallet)',userReady);\r\n            } else {\r\n                const provider = new ethers.providers.JsonRpcProvider(RPC_URL);\r\n                setEthersProvider(provider);\r\n            }\r\n\r\n\r\n            console.log(\"init onboard done\");\r\n\r\n            setOnboard(ob);\r\n            setInitDone(true);\r\n        } catch (e) {\r\n            console.log(\"onboard init error\", e);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log('WALLET', wallet);\r\n        if (wallet) {\r\n            walletCheck();\r\n           \r\n        }\r\n    }, [wallet]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (ethersProvider) {\r\n            subscribeNetwork(ethersProvider);\r\n        }\r\n    }, [ethersProvider]);\r\n\r\n    useEffect(() => {\r\n        if (address && isWalletConnected() == false) {\r\n            console.log(\"set address null\");\r\n            setAddress(null);\r\n        }\r\n    }, [address]);\r\n\r\n    const subscribeNetwork = async (provider) => {\r\n        const network = await provider.getNetwork().catch((e) => {\r\n            console.log(\"error:\", e);\r\n        });\r\n        if (network) {\r\n            setNetworkName(network.name);\r\n            setChainId(network.chainId);\r\n        }\r\n    };\r\n\r\n    const isWalletConnected = () => {\r\n        console.log(\"check wallet state\");\r\n        if (onboard) {\r\n            const state = onboard.getState();\r\n            return state.wallet.name != null;\r\n        } else return null;\r\n    };\r\n\r\n    const handleConnect = async (e) => {\r\n        console.log('initdone', initDone);\r\n        if (!initDone) return;\r\n        if (onboard) {\r\n            if (e) {\r\n                e.stopPropagation();\r\n            }\r\n\r\n            console.log(\"reset\");\r\n            onboard.walletReset();\r\n            console.log(\"walletSelect\");\r\n            const walletSelected = await onboard.walletSelect();\r\n            // const signiture = await walletSelected.signMessage('hello');\r\n            // console.log(signiture, 'signature')\r\n            console.log('walletselected', walletSelected);\r\n            if (walletSelected) {\r\n                onboard.walletCheck();\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDisconnect = () => {\r\n        if (onboard) {\r\n            console.log(\"logout wallet\");\r\n            onboard.walletReset();\r\n            if (window.sessionStorage) {\r\n                window.sessionStorage.removeItem(\"selectedWallet\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const walletCheck = async () => {\r\n        if (onboard) {\r\n            await onboard.walletCheck();\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const isCorrectNetwork = chainId === DEPLOYED_CHAIN_ID;\r\n\r\n    if (!initDone) {\r\n        return (\r\n            <div style={sx.root}>\r\n                <div style={sx.container}>\r\n                    loading\r\n                    {/*  <Spinner color=\"#FF692B\" /> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Web3Ctx.Provider\r\n            value={{\r\n                onboard,\r\n                wallet,\r\n                address,\r\n                ethersProvider,\r\n                chainId,\r\n                defaultChainId: config.DEPLOYED_CHAIN_ID,\r\n                handleConnect,\r\n                handleDisconnect,\r\n                isCorrectNetwork,\r\n                walletCheck\r\n            }}\r\n        >\r\n            {children}\r\n        </Web3Ctx.Provider>\r\n    );\r\n};\r\nexport default Web3Manager;","import { ThemeProvider } from '@emotion/react';\r\nimport { Box } from '@mui/material';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport './App.css';\r\nimport routes from './routes/routes';\r\nimport theme from './theme/theme';\r\nimport Web3Manager from './Web3Manager.jsx/Web3Manager';\r\nimport { ToastContainer } from 'react-toast';\r\nimport Footer from './components/Footer';\r\nconst sx = {\r\n  root: {\r\n    minHeight: '100vh',\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <Web3Manager>\r\n      <BrowserRouter basename='/'>\r\n        <Box sx={sx.root} color={theme.palette.background}>\r\n            <Routes>\r\n              {routes.map(({ path, component, exact }) => (\r\n                <Route key={path} path={path} element={component} exact={exact} />\r\n              ))}\r\n            </Routes>\r\n            <ToastContainer position='bottom-right' delay={4000} />\r\n        </Box>\r\n      </BrowserRouter>\r\n    </Web3Manager>\r\n  </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport './index.css';\nimport App from './App.jsx';\nimport { render } from 'react-dom';\n\nconst root = document.getElementById(\"root\");\nrender(<App />, root);\n\n"],"sourceRoot":""}